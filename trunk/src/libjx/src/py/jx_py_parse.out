State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          funcdef ::= * DEF NAME COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                           EOI shift  256
                       NEWLINE shift  132
                           DEF shift  109
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                            IF shift  46
                         WHILE shift  47
                           FOR shift  50
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                         CLASS shift  98
                          SCON shift  172
                   simple_stmt shift  133
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                  single_input accept
                 compound_stmt shift  95
                       funcdef shift  232
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       if_stmt shift  229
                    while_stmt shift  230
                      for_stmt shift  231
                      classdef shift  233
                       if_head shift  88
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          funcdef ::= * DEF NAME COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  109
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                            IF shift  46
                         WHILE shift  47
                           FOR shift  50
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                         CLASS shift  98
                          SCON shift  172
                   simple_stmt shift  248
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                 compound_stmt shift  251
                       funcdef shift  232
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       if_stmt shift  229
                    while_stmt shift  230
                      for_stmt shift  231
                      classdef shift  233
                       if_head shift  88
                         stmts shift  2
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          funcdef ::= * DEF NAME COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  109
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                            IF shift  46
                         WHILE shift  47
                           FOR shift  50
                        DEDENT shift  240
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                         CLASS shift  98
                          SCON shift  172
                   simple_stmt shift  246
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                 compound_stmt shift  247
                       funcdef shift  232
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       if_stmt shift  229
                    while_stmt shift  230
                      for_stmt shift  231
                      classdef shift  233
                       if_head shift  88
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          funcdef ::= * DEF NAME COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                           DEF shift  109
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                            IF shift  46
                         WHILE shift  47
                           FOR shift  50
                        DEDENT shift  241
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                         CLASS shift  98
                          SCON shift  172
                   simple_stmt shift  242
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                 compound_stmt shift  243
                       funcdef shift  232
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       if_stmt shift  229
                    while_stmt shift  230
                      for_stmt shift  231
                      classdef shift  233
                       if_head shift  88
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          funcdef ::= * DEF NAME COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                           DEF shift  109
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                            IF shift  46
                         WHILE shift  47
                           FOR shift  50
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                         CLASS shift  98
                          SCON shift  172
                   simple_stmt shift  249
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                 compound_stmt shift  250
                       funcdef shift  232
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       if_stmt shift  229
                    while_stmt shift  230
                      for_stmt shift  231
                      classdef shift  233
                       if_head shift  88
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  236
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  237
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  89
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  238
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  234
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 10:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  135
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  244
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  245
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  239
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 14:
          funcdef ::= DEF NAME COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  252
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 15:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  16
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  227
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                         suite shift  235
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 16:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                        INDENT shift  1
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                      testlist shift  78
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 17:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  137
                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           DEL shift  51
                          PASS shift  215
                        RETURN shift  24
                         PRINT shift  42
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                    small_stmt shift  91
                    print_stmt shift  114
                        string shift  116
                          atom shift  61
                      testlist shift  79
                     expr_stmt shift  139
                      del_stmt shift  208
                     pass_stmt shift  209
                     flow_stmt shift  210
                   return_stmt shift  216
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 18:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp_2 ::= * testlist_gexp_2 COMMA test
          testlist_gexp_2 ::= * test COMMA test
          testlist_gexp_3 ::= * test COMMA
          testlist_gexp ::= * test
          testlist_gexp ::= * testlist_gexp_2
          testlist_gexp ::= * testlist_gexp_2 COMMA
          testlist_gexp ::= * testlist_gexp_3
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= OPEN_PAR * testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= OPEN_PAR * COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                         COMMA shift  102
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  127
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
               testlist_gexp_2 shift  120
               testlist_gexp_3 shift  185
                 testlist_gexp shift  96

State 19:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      testlist shift  222
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 20:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      testlist shift  130
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 21:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      testlist shift  223
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 22:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR * testlist CLOSE_PAR COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      testlist shift  99
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 23:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      testlist shift  221
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 24:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      testlist shift  217
                          test shift  103
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    testlist_2 shift  104
                    testlist_3 shift  220

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
                     CLOSE_PAR shift  190
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  193
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                       arglist shift  85
                      argument shift  194

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  198
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                 subscriptlist shift  118
                     subscript shift  197

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                         COMMA shift  97
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
              CLOSE_RECT_BRACE shift  158
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  180
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     listmaker shift  87

State 28:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
             CLOSE_CURLY_BRACE shift  161
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                     dictmaker shift  83
                          test shift  101
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 29:
          parameters ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          parameters ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
             CLOSE_CURLY_BRACE shift  255
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                     dictmaker shift  84
                          test shift  101
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= LAMBDA OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= LAMBDA OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
             CLOSE_CURLY_BRACE shift  106
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                     dictmaker shift  90
                          test shift  101
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 31:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  193
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                      argument shift  192

State 32:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  119
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 33:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  92
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 34:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  140
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 35:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  171
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 36:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  179
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 37:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON * test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  174
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 38:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test
    (144) testlist ::= testlist_2 COMMA *

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  218
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     {default} reduce 144

State 39:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  175
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 40:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (141) testlist_3 ::= test COMMA *

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  219
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     {default} reduce 141

State 41:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  176
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 42:
     (30) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  224
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     {default} reduce 30

State 43:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  177
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 44:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp_2 ::= test COMMA * test
     (89) testlist_gexp_3 ::= test COMMA *
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  184
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     {default} reduce 89

State 45:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  178
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 46:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  126
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 47:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  125
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 48:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  121
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 49:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp_2 ::= testlist_gexp_2 COMMA * test
     (92) testlist_gexp ::= testlist_gexp_2 COMMA *
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                        LAMBDA shift  72
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          test shift  183
                       or_test shift  141
                       lambdef shift  142
                      and_test shift  143
                      not_test shift  144
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     {default} reduce 92

State 50:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_2 COMMA
          exprlist ::= * exprlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      exprlist shift  128
                          expr shift  107
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    exprlist_2 shift  108
                    exprlist_3 shift  214

State 51:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_2 COMMA
          exprlist ::= * exprlist_3

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      exprlist shift  211
                          expr shift  107
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                    exprlist_2 shift  108
                    exprlist_3 shift  214

State 52:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                           NOT shift  52
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                      not_test shift  145
                    comparison shift  146
                          expr shift  77
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 53:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  147
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 54:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  203
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 55:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (148) exprlist_3 ::= expr COMMA *

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  213
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     {default} reduce 148

State 56:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  204
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 57:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  207
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 58:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  206
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 59:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr
    (151) exprlist ::= exprlist_2 COMMA *

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  212
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152
                     {default} reduce 151

State 60:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          expr shift  205
                      xor_expr shift  148
                      and_expr shift  149
                    shift_expr shift  150
                    arith_expr shift  86
                          term shift  129
                        factor shift  80
                         power shift  152

State 61:
     (94) power ::= atom *
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * dot_trailer_list
          power ::= atom * call_trailer_list
          power ::= atom * access_trailer_list
          call_trailer_list ::= * call_trailer
          call_trailer_list ::= * call_trailer_list call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer_list ::= * access_trailer
          access_trailer_list ::= * access_trailer_list access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE
          dot_trailer_list ::= * dot_trailer
          dot_trailer ::= * DOT NAME

                      OPEN_PAR shift  25
               DOUBLE_ASTERISK shift  66
               OPEN_RECT_BRACE shift  26
                           DOT shift  115
              dot_trailer_list shift  188
             call_trailer_list shift  75
           access_trailer_list shift  76
                  call_trailer shift  199
                access_trailer shift  200
                   dot_trailer shift  201
                     {default} reduce 94

State 62:
          arith_expr ::= arith_expr MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          term shift  112
                        factor shift  80
                         power shift  152

State 63:
          arith_expr ::= arith_expr PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                          term shift  117
                        factor shift  80
                         power shift  152

State 64:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  181
                         power shift  152

State 65:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  154
                         power shift  152

State 66:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  156
                         power shift  152

State 67:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  153
                         power shift  152

State 68:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  157
                         power shift  152

State 69:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  182
                         power shift  152

State 70:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  151
                         power shift  152

State 71:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  173
                      OPEN_PAR shift  18
              OPEN_CURLY_BRACE shift  28
                          PLUS shift  67
                         MINUS shift  65
                         TILDE shift  71
               OPEN_RECT_BRACE shift  27
                          ICON shift  163
                          FCON shift  164
                          NONE shift  165
                          TRUE shift  166
                         FALSE shift  167
                          SCON shift  172
                        string shift  116
                          atom shift  61
                        factor shift  155
                         power shift  152

State 72:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test
          lambdef ::= LAMBDA * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  170
                         COLON shift  35
              OPEN_CURLY_BRACE shift  30
                   varargslist shift  94
                        fpdefs shift  111

State 73:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  170
                     CLOSE_PAR shift  253
                   varargslist shift  113
                        fpdefs shift  111

State 74:
          funcdef ::= DEF NAME * parameters COLON suite
          funcdef ::= DEF NAME * COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          parameters ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                         COLON shift  14
                      OPEN_PAR shift  73
              OPEN_CURLY_BRACE shift  29
                    parameters shift  124

State 75:
     (97) power ::= atom call_trailer_list *
          call_trailer_list ::= call_trailer_list * call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  25
                  call_trailer shift  189
                     {default} reduce 97

State 76:
     (98) power ::= atom access_trailer_list *
          access_trailer_list ::= access_trailer_list * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  26
                access_trailer shift  195
                     {default} reduce 98

State 77:
     (64) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  53
               LESS_THAN_OR_EQ shift  54
                         EQ_EQ shift  56
                        NOT_EQ shift  60
                  GREATER_THAN shift  58
            GREATER_THAN_OR_EQ shift  57
                     {default} reduce 64

State 78:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  225
                     SEMICOLON shift  93
                   PLUS_EQUALS shift  23
                  MINUS_EQUALS shift  19
                        EQUALS shift  21

State 79:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  23
                  MINUS_EQUALS shift  19
                        EQUALS shift  21

State 80:
     (78) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  68
                    SLASHSLASH shift  64
                       PERCENT shift  69
                     {default} reduce 78

State 81:
          classdef ::= CLASS NAME * OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS NAME * COLON suite

                         COLON shift  12
                      OPEN_PAR shift  22

State 82:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  136
                     SEMICOLON shift  17

State 83:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

             CLOSE_CURLY_BRACE shift  162
                         COMMA shift  33

State 84:
          parameters ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

             CLOSE_CURLY_BRACE shift  131
                         COMMA shift  33

State 85:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  191
                         COMMA shift  31

State 86:
     (74) shift_expr ::= arith_expr *
          arith_expr ::= arith_expr * PLUS term
          arith_expr ::= arith_expr * MINUS term

                          PLUS shift  63
                         MINUS shift  62
                     {default} reduce 74

State 87:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test

                         COMMA shift  36
              CLOSE_RECT_BRACE shift  160

State 88:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (43) if_stmt ::= if_head *

                          ELSE shift  122
                          ELIF shift  32
                     {default} reduce 43

State 89:
     (38) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  123
                          ELIF shift  48
                     {default} reduce 38

State 90:
          lambdef ::= LAMBDA OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE COLON test
          dictmaker ::= dictmaker * COMMA test COLON test

             CLOSE_CURLY_BRACE shift  105
                         COMMA shift  33

State 91:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  138

State 92:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  45

State 93:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  226

State 94:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  43

State 95:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  134

State 96:
          atom ::= OPEN_PAR testlist_gexp * CLOSE_PAR

                     CLOSE_PAR shift  186

State 97:
          atom ::= OPEN_RECT_BRACE COMMA * CLOSE_RECT_BRACE

              CLOSE_RECT_BRACE shift  159

State 98:
          classdef ::= CLASS * NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS * NAME COLON suite

                          NAME shift  81

State 99:
          classdef ::= CLASS NAME OPEN_PAR testlist * CLOSE_PAR COLON suite

                     CLOSE_PAR shift  100

State 100:
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR * COLON suite

                         COLON shift  11

State 101:
          dictmaker ::= test * COLON test

                         COLON shift  41

State 102:
          atom ::= OPEN_PAR COMMA * CLOSE_PAR

                     CLOSE_PAR shift  187

State 103:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (142) testlist ::= test *

                         COMMA shift  40
                     {default} reduce 142

State 104:
          testlist_2 ::= testlist_2 * COMMA test
    (143) testlist ::= testlist_2 *
          testlist ::= testlist_2 * COMMA

                         COMMA shift  38
                     {default} reduce 143

State 105:
          lambdef ::= LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE * COLON test

                         COLON shift  39

State 106:
          lambdef ::= LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE * COLON test

                         COLON shift  37

State 107:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (149) exprlist ::= expr *

                         COMMA shift  55
                     {default} reduce 149

State 108:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (150) exprlist ::= exprlist_2 *
          exprlist ::= exprlist_2 * COMMA

                         COMMA shift  59
                     {default} reduce 150

State 109:
          funcdef ::= DEF * NAME parameters COLON suite
          funcdef ::= DEF * NAME COLON suite

                          NAME shift  74

State 110:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  169

State 111:
     (10) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  110
                     {default} reduce 10

State 112:
     (77) arith_expr ::= arith_expr MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  70
                     {default} reduce 77

State 113:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  254

State 114:
     (19) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  34
                     {default} reduce 19

State 115:
          dot_trailer ::= DOT * NAME

                          NAME shift  202

State 116:
    (111) atom ::= string *
          string ::= string * SCON

                          SCON shift  168
                     {default} reduce 111

State 117:
     (76) arith_expr ::= arith_expr PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  70
                     {default} reduce 76

State 118:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE

              CLOSE_RECT_BRACE shift  196

State 119:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  5

State 120:
          testlist_gexp_2 ::= testlist_gexp_2 * COMMA test
     (91) testlist_gexp ::= testlist_gexp_2 *
          testlist_gexp ::= testlist_gexp_2 * COMMA

                         COMMA shift  49
                     {default} reduce 91

State 121:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  15

State 122:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  6

State 123:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  9

State 124:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  10

State 125:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  8

State 126:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  7

State 127:
          testlist_gexp_2 ::= test * COMMA test
          testlist_gexp_3 ::= test * COMMA
     (90) testlist_gexp ::= test *

                         COMMA shift  44
                     {default} reduce 90

State 128:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  20

State 129:
     (75) arith_expr ::= term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  70
                     {default} reduce 75

State 130:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  13

State 131:
      (8) parameters ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 8

State 132:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 133:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 134:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 135:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 136:
     (13) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 13

State 137:
     (16) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 16

State 138:
     (17) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 17

State 139:
     (18) small_stmt ::= expr_stmt *

                     {default} reduce 18

State 140:
     (32) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 32

State 141:
     (58) test ::= or_test *

                     {default} reduce 58

State 142:
     (59) test ::= lambdef *

                     {default} reduce 59

State 143:
     (60) or_test ::= and_test *

                     {default} reduce 60

State 144:
     (61) and_test ::= not_test *

                     {default} reduce 61

State 145:
     (62) not_test ::= NOT not_test *

                     {default} reduce 62

State 146:
     (63) not_test ::= comparison *

                     {default} reduce 63

State 147:
     (65) comparison ::= expr LESS_THAN expr *

                     {default} reduce 65

State 148:
     (71) expr ::= xor_expr *

                     {default} reduce 71

State 149:
     (72) xor_expr ::= and_expr *

                     {default} reduce 72

State 150:
     (73) and_expr ::= shift_expr *

                     {default} reduce 73

State 151:
     (79) term ::= term ASTERISK factor *

                     {default} reduce 79

State 152:
     (83) factor ::= power *

                     {default} reduce 83

State 153:
     (84) factor ::= PLUS factor *

                     {default} reduce 84

State 154:
     (85) factor ::= MINUS factor *

                     {default} reduce 85

State 155:
     (86) factor ::= TILDE factor *

                     {default} reduce 86

State 156:
     (95) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 95

State 157:
     (80) term ::= factor SLASH factor *

                     {default} reduce 80

State 158:
    (101) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 101

State 159:
    (102) atom ::= OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE *

                     {default} reduce 102

State 160:
    (103) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 103

State 161:
    (104) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 104

State 162:
    (105) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 105

State 163:
    (106) atom ::= ICON *

                     {default} reduce 106

State 164:
    (107) atom ::= FCON *

                     {default} reduce 107

State 165:
    (108) atom ::= NONE *

                     {default} reduce 108

State 166:
    (109) atom ::= TRUE *

                     {default} reduce 109

State 167:
    (110) atom ::= FALSE *

                     {default} reduce 110

State 168:
    (137) string ::= string SCON *

                     {default} reduce 137

State 169:
     (12) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 12

State 170:
     (11) fpdefs ::= NAME *

                     {default} reduce 11

State 171:
    (114) lambdef ::= LAMBDA COLON test *

                     {default} reduce 114

State 172:
    (136) string ::= SCON *

                     {default} reduce 136

State 173:
    (138) atom ::= NAME *

                     {default} reduce 138

State 174:
    (115) lambdef ::= LAMBDA OPEN_CURLY_BRACE CLOSE_CURLY_BRACE COLON test *

                     {default} reduce 115

State 175:
    (116) lambdef ::= LAMBDA OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE COLON test *

                     {default} reduce 116

State 176:
    (129) dictmaker ::= test COLON test *

                     {default} reduce 129

State 177:
    (117) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 117

State 178:
    (130) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 130

State 179:
    (113) listmaker ::= listmaker COMMA test *

                     {default} reduce 113

State 180:
    (112) listmaker ::= test *

                     {default} reduce 112

State 181:
     (81) term ::= factor SLASHSLASH factor *

                     {default} reduce 81

State 182:
     (82) term ::= factor PERCENT factor *

                     {default} reduce 82

State 183:
     (87) testlist_gexp_2 ::= testlist_gexp_2 COMMA test *

                     {default} reduce 87

State 184:
     (88) testlist_gexp_2 ::= test COMMA test *

                     {default} reduce 88

State 185:
     (93) testlist_gexp ::= testlist_gexp_3 *

                     {default} reduce 93

State 186:
     (99) atom ::= OPEN_PAR testlist_gexp CLOSE_PAR *

                     {default} reduce 99

State 187:
    (100) atom ::= OPEN_PAR COMMA CLOSE_PAR *

                     {default} reduce 100

State 188:
     (96) power ::= atom dot_trailer_list *

                     {default} reduce 96

State 189:
    (119) call_trailer_list ::= call_trailer_list call_trailer *

                     {default} reduce 119

State 190:
    (120) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 120

State 191:
    (121) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 121

State 192:
    (134) arglist ::= arglist COMMA argument *

                     {default} reduce 134

State 193:
    (135) argument ::= test *

                     {default} reduce 135

State 194:
    (133) arglist ::= argument *

                     {default} reduce 133

State 195:
    (123) access_trailer_list ::= access_trailer_list access_trailer *

                     {default} reduce 123

State 196:
    (124) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 124

State 197:
    (127) subscriptlist ::= subscript *

                     {default} reduce 127

State 198:
    (128) subscript ::= test *

                     {default} reduce 128

State 199:
    (118) call_trailer_list ::= call_trailer *

                     {default} reduce 118

State 200:
    (122) access_trailer_list ::= access_trailer *

                     {default} reduce 122

State 201:
    (125) dot_trailer_list ::= dot_trailer *

                     {default} reduce 125

State 202:
    (126) dot_trailer ::= DOT NAME *

                     {default} reduce 126

State 203:
     (66) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 66

State 204:
     (67) comparison ::= expr EQ_EQ expr *

                     {default} reduce 67

State 205:
     (68) comparison ::= expr NOT_EQ expr *

                     {default} reduce 68

State 206:
     (69) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 69

State 207:
     (70) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 70

State 208:
     (20) small_stmt ::= del_stmt *

                     {default} reduce 20

State 209:
     (21) small_stmt ::= pass_stmt *

                     {default} reduce 21

State 210:
     (22) small_stmt ::= flow_stmt *

                     {default} reduce 22

State 211:
     (23) del_stmt ::= DEL exprlist *

                     {default} reduce 23

State 212:
    (146) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 146

State 213:
    (147) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 147

State 214:
    (152) exprlist ::= exprlist_3 *

                     {default} reduce 152

State 215:
     (24) pass_stmt ::= PASS *

                     {default} reduce 24

State 216:
     (25) flow_stmt ::= return_stmt *

                     {default} reduce 25

State 217:
     (26) return_stmt ::= RETURN testlist *

                     {default} reduce 26

State 218:
    (139) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 139

State 219:
    (140) testlist_2 ::= test COMMA test *

                     {default} reduce 140

State 220:
    (145) testlist ::= testlist_3 *

                     {default} reduce 145

State 221:
     (27) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 27

State 222:
     (28) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 28

State 223:
     (29) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 29

State 224:
     (31) print_stmt ::= PRINT test *

                     {default} reduce 31

State 225:
     (14) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 14

State 226:
     (15) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 15

State 227:
     (46) suite ::= simple_stmt *

                     {default} reduce 46

State 228:
     (47) suite ::= NEWLINE simple_stmt *

                     {default} reduce 47

State 229:
     (33) compound_stmt ::= if_stmt *

                     {default} reduce 33

State 230:
     (34) compound_stmt ::= while_stmt *

                     {default} reduce 34

State 231:
     (35) compound_stmt ::= for_stmt *

                     {default} reduce 35

State 232:
     (36) compound_stmt ::= funcdef *

                     {default} reduce 36

State 233:
     (37) compound_stmt ::= classdef *

                     {default} reduce 37

State 234:
     (39) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 39

State 235:
     (40) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 40

State 236:
     (41) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 41

State 237:
     (42) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 42

State 238:
     (44) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 44

State 239:
     (45) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 45

State 240:
     (48) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 48

State 241:
     (49) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 49

State 242:
     (51) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 51

State 243:
     (53) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 53

State 244:
    (131) classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite *

                     {default} reduce 131

State 245:
    (132) classdef ::= CLASS NAME COLON suite *

                     {default} reduce 132

State 246:
     (50) stmts ::= stmts simple_stmt *

                     {default} reduce 50

State 247:
     (52) stmts ::= stmts compound_stmt *

                     {default} reduce 52

State 248:
     (54) stmts ::= simple_stmt *

                     {default} reduce 54

State 249:
     (55) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 55

State 250:
     (57) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 57

State 251:
     (56) stmts ::= compound_stmt *

                     {default} reduce 56

State 252:
      (5) funcdef ::= DEF NAME COLON suite *

                     {default} reduce 5

State 253:
      (6) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 6

State 254:
      (9) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 9

State 255:
      (7) parameters ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 7

State 256:
      (0) single_input ::= EOI *

                     {default} reduce 0

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: OPEN_CURLY_BRACE
   10: CLOSE_CURLY_BRACE
   11: COMMA
   12: SEMICOLON
   13: DEL
   14: PASS
   15: RETURN
   16: PLUS_EQUALS
   17: MINUS_EQUALS
   18: EQUALS
   19: PRINT
   20: IF
   21: ELSE
   22: ELIF
   23: WHILE
   24: FOR
   25: IN
   26: INDENT
   27: DEDENT
   28: NOT
   29: LESS_THAN
   30: LESS_THAN_OR_EQ
   31: EQ_EQ
   32: NOT_EQ
   33: GREATER_THAN
   34: GREATER_THAN_OR_EQ
   35: PLUS
   36: MINUS
   37: ASTERISK
   38: SLASH
   39: SLASHSLASH
   40: PERCENT
   41: TILDE
   42: DOUBLE_ASTERISK
   43: OPEN_RECT_BRACE
   44: CLOSE_RECT_BRACE
   45: ICON
   46: FCON
   47: NONE
   48: TRUE
   49: FALSE
   50: LAMBDA
   51: DOT
   52: CLASS
   53: SCON
   54: error:
   55: simple_stmt: NAME OPEN_PAR OPEN_CURLY_BRACE DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   56: small_stmt: NAME OPEN_PAR OPEN_CURLY_BRACE DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   57: print_stmt: PRINT
   58: string: SCON
   59: atom: NAME OPEN_PAR OPEN_CURLY_BRACE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   60: single_input: EOI NEWLINE DEF NAME OPEN_PAR OPEN_CURLY_BRACE DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA CLASS SCON
   61: compound_stmt: DEF IF WHILE FOR CLASS
   62: funcdef: DEF
   63: parameters: OPEN_PAR OPEN_CURLY_BRACE
   64: suite: NEWLINE NAME OPEN_PAR OPEN_CURLY_BRACE DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   65: dictmaker: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   66: varargslist: NAME
   67: fpdefs: NAME
   68: testlist: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   69: expr_stmt: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   70: del_stmt: DEL
   71: pass_stmt: PASS
   72: flow_stmt: RETURN
   73: exprlist: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   74: return_stmt: RETURN
   75: test: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   76: if_stmt: IF
   77: while_stmt: WHILE
   78: for_stmt: FOR
   79: classdef: CLASS
   80: if_head: IF
   81: stmts: NEWLINE DEF NAME OPEN_PAR OPEN_CURLY_BRACE DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA CLASS SCON
   82: or_test: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   83: lambdef: LAMBDA
   84: and_test: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   85: not_test: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   86: comparison: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   87: expr: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   88: xor_expr: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   89: and_expr: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   90: shift_expr: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   91: arith_expr: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   92: term: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   93: factor: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   94: power: NAME OPEN_PAR OPEN_CURLY_BRACE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
   95: testlist_gexp_2: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   96: testlist_gexp_3: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   97: testlist_gexp: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   98: dot_trailer_list: DOT
   99: call_trailer_list: OPEN_PAR
  100: access_trailer_list: OPEN_RECT_BRACE
  101: listmaker: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  102: call_trailer: OPEN_PAR
  103: arglist: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  104: access_trailer: OPEN_RECT_BRACE
  105: subscriptlist: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  106: dot_trailer: DOT
  107: subscript: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  108: argument: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  109: testlist_2: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  110: testlist_3: NAME OPEN_PAR OPEN_CURLY_BRACE NOT PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  111: exprlist_2: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
  112: exprlist_3: NAME OPEN_PAR OPEN_CURLY_BRACE PLUS MINUS TILDE OPEN_RECT_BRACE ICON FCON NONE TRUE FALSE SCON
