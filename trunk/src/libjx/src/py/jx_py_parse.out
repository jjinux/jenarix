State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  172
                       NEWLINE shift  106
                           DEF shift  82
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                            IF shift  36
                         WHILE shift  39
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  107
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                  single_input accept
                 compound_stmt shift  95
                       funcdef shift  190
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  75
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  82
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                            IF shift  36
                         WHILE shift  39
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  203
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                 compound_stmt shift  206
                       funcdef shift  190
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  75
                         stmts shift  2
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  82
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                            IF shift  36
                         WHILE shift  39
                           FOR shift  41
                        DEDENT shift  197
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  201
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                 compound_stmt shift  202
                       funcdef shift  190
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  75
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  82
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                            IF shift  36
                         WHILE shift  39
                           FOR shift  41
                        DEDENT shift  198
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  199
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                 compound_stmt shift  200
                       funcdef shift  190
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  75
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  82
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                            IF shift  36
                         WHILE shift  39
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  204
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                 compound_stmt shift  205
                       funcdef shift  190
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  75
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  192
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 6:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  109
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  195
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  191
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  194
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 10:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  193
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  196
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  185
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                         suite shift  76
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                        INDENT shift  1
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                   simple_stmt shift  186
                    small_stmt shift  74
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 14:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  111
                          NAME shift  144
                           DEL shift  40
                          PASS shift  173
                        RETURN shift  17
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                    small_stmt shift  77
                    print_stmt shift  101
                        string shift  86
                          atom shift  62
                      testlist shift  68
                     expr_stmt shift  113
                      del_stmt shift  166
                     pass_stmt shift  167
                     flow_stmt shift  168
                   return_stmt shift  174
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 15:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      testlist shift  102
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 16:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      testlist shift  180
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 17:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      testlist shift  175
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 18:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      testlist shift  179
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 19:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      testlist shift  181
                          test shift  83
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    testlist_2 shift  80
                    testlist_3 shift  178

State 20:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                     CLOSE_PAR shift  150
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  153
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                       arglist shift  70
                      argument shift  154

State 21:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscriptlist ::= * subscriptlist COMMA subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  159
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                 subscriptlist shift  71
                     subscript shift  160

State 22:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
             CLOSE_CURLY_BRACE shift  135
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  85
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                     dictmaker shift  73

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              CLOSE_RECT_BRACE shift  133
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  149
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                     listmaker shift  72

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          subscriptlist ::= subscriptlist COMMA * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  159
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                     subscript shift  158

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  153
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                      argument shift  152

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  146
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  148
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 28:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  114
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  89
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  176
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 31:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (113) testlist_3 ::= test COMMA *

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  177
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                     {default} reduce 113

State 32:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  142
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 33:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  182
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                     {default} reduce 27

State 34:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  145
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 35:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  147
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 36:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 37:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  91
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 38:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  94
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 39:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                        LAMBDA shift  61
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          test shift  99
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 40:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      exprlist shift  169
                          expr shift  84
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    exprlist_2 shift  92
                    exprlist_3 shift  105

State 41:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      exprlist shift  100
                          expr shift  84
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                    exprlist_2 shift  92
                    exprlist_3 shift  105

State 42:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                      not_test shift  119
                    comparison shift  120
                          expr shift  65
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 43:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  164
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 44:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  165
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 45:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  121
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 46:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  162
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 47:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  163
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 48:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  161
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 49:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (119) exprlist_3 ::= expr COMMA *

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  171
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63
                     {default} reduce 119

State 50:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          expr shift  170
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  69
                        factor shift  67
                         power shift  63

State 51:
          arith_expr ::= term MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          term shift  90
                        factor shift  67
                         power shift  63

State 52:
          arith_expr ::= term PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                          term shift  96
                        factor shift  67
                         power shift  63

State 53:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                        factor shift  126
                         power shift  63

State 54:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                        factor shift  128
                         power shift  63

State 55:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                        factor shift  129
                         power shift  63

State 56:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                        factor shift  130
                         power shift  63

State 57:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                        factor shift  131
                         power shift  63

State 58:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                        factor shift  155
                         power shift  63

State 59:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  144
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  137
                          FCON shift  138
                          SCON shift  143
                        string shift  86
                          atom shift  62
                        factor shift  156
                         power shift  63

State 60:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  141
                     CLOSE_PAR shift  207
                   varargslist shift  93
                        fpdefs shift  81

State 61:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  141
                         COLON shift  32
                   varargslist shift  103
                        fpdefs shift  81

State 62:
          power ::= atom * call_trailer
     (85) power ::= atom *
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  20
                  call_trailer shift  132
                     {default} reduce 85

State 63:
     (79) factor ::= power *
          power ::= power * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  21
                access_trailer shift  127
                     {default} reduce 79

State 64:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  60
                    parameters shift  79

State 65:
     (60) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  45
               LESS_THAN_OR_EQ shift  48
                         EQ_EQ shift  46
                        NOT_EQ shift  47
                  GREATER_THAN shift  43
            GREATER_THAN_OR_EQ shift  44
                     {default} reduce 60

State 66:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  183
                     SEMICOLON shift  98
                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  16
                        EQUALS shift  19

State 67:
     (74) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  54
                    SLASHSLASH shift  58
                       PERCENT shift  59
                     {default} reduce 74

State 68:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  16
                        EQUALS shift  19

State 69:
     (71) arith_expr ::= term *
          arith_expr ::= term * PLUS term
          arith_expr ::= term * MINUS term
          term ::= term * ASTERISK factor

                          PLUS shift  52
                         MINUS shift  51
                      ASTERISK shift  53
                     {default} reduce 71

State 70:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  151
                         COMMA shift  25

State 71:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE
          subscriptlist ::= subscriptlist * COMMA subscript

                         COMMA shift  24
              CLOSE_RECT_BRACE shift  157

State 72:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test

                         COMMA shift  27
              CLOSE_RECT_BRACE shift  134

State 73:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  29
             CLOSE_CURLY_BRACE shift  136

State 74:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  110
                     SEMICOLON shift  14

State 75:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (39) if_stmt ::= if_head *

                          ELSE shift  97
                          ELIF shift  38
                     {default} reduce 39

State 76:
     (34) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  88
                          ELIF shift  37
                     {default} reduce 34

State 77:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  112

State 78:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  140

State 79:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  6

State 80:
          testlist_2 ::= testlist_2 * COMMA test
    (115) testlist ::= testlist_2 *

                         COMMA shift  30
                     {default} reduce 115

State 81:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  78
                     {default} reduce 7

State 82:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  64

State 83:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (114) testlist ::= test *

                         COMMA shift  31
                     {default} reduce 114

State 84:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (120) exprlist ::= expr *

                         COMMA shift  49
                     {default} reduce 120

State 85:
          dictmaker ::= test * COLON test

                         COLON shift  35

State 86:
     (92) atom ::= string *
          string ::= string * SCON

                          SCON shift  139
                     {default} reduce 92

State 87:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  12

State 88:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  8

State 89:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  26

State 90:
     (73) arith_expr ::= term MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  53
                     {default} reduce 73

State 91:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  5

State 92:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (121) exprlist ::= exprlist_2 *

                         COMMA shift  50
                     {default} reduce 121

State 93:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  104

State 94:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  10

State 95:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  108

State 96:
     (72) arith_expr ::= term PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  53
                     {default} reduce 72

State 97:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  9

State 98:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  184

State 99:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  7

State 100:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  15

State 101:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  28
                     {default} reduce 16

State 102:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  11

State 103:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  34

State 104:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 105:
    (122) exprlist ::= exprlist_3 *

                     {default} reduce 122

State 106:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 107:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 108:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 109:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 110:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 111:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 112:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 113:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 114:
     (29) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 29

State 115:
     (54) test ::= or_test *

                     {default} reduce 54

State 116:
     (55) test ::= lambdef *

                     {default} reduce 55

State 117:
     (56) or_test ::= and_test *

                     {default} reduce 56

State 118:
     (57) and_test ::= not_test *

                     {default} reduce 57

State 119:
     (58) not_test ::= NOT not_test *

                     {default} reduce 58

State 120:
     (59) not_test ::= comparison *

                     {default} reduce 59

State 121:
     (61) comparison ::= expr LESS_THAN expr *

                     {default} reduce 61

State 122:
     (67) expr ::= xor_expr *

                     {default} reduce 67

State 123:
     (68) xor_expr ::= and_expr *

                     {default} reduce 68

State 124:
     (69) and_expr ::= shift_expr *

                     {default} reduce 69

State 125:
     (70) shift_expr ::= arith_expr *

                     {default} reduce 70

State 126:
     (75) term ::= term ASTERISK factor *

                     {default} reduce 75

State 127:
     (84) power ::= power access_trailer *

                     {default} reduce 84

State 128:
     (76) term ::= factor SLASH factor *

                     {default} reduce 76

State 129:
     (80) factor ::= PLUS factor *

                     {default} reduce 80

State 130:
     (81) factor ::= MINUS factor *

                     {default} reduce 81

State 131:
     (82) factor ::= TILDE factor *

                     {default} reduce 82

State 132:
     (83) power ::= atom call_trailer *

                     {default} reduce 83

State 133:
     (86) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 86

State 134:
     (87) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 87

State 135:
     (88) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 88

State 136:
     (89) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 89

State 137:
     (90) atom ::= ICON *

                     {default} reduce 90

State 138:
     (91) atom ::= FCON *

                     {default} reduce 91

State 139:
    (109) string ::= string SCON *

                     {default} reduce 109

State 140:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 141:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 142:
     (95) lambdef ::= LAMBDA COLON test *

                     {default} reduce 95

State 143:
    (108) string ::= SCON *

                     {default} reduce 108

State 144:
    (110) atom ::= NAME *

                     {default} reduce 110

State 145:
     (96) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 96

State 146:
    (104) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 104

State 147:
    (103) dictmaker ::= test COLON test *

                     {default} reduce 103

State 148:
     (94) listmaker ::= listmaker COMMA test *

                     {default} reduce 94

State 149:
     (93) listmaker ::= test *

                     {default} reduce 93

State 150:
     (97) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 97

State 151:
     (98) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 98

State 152:
    (106) arglist ::= arglist COMMA argument *

                     {default} reduce 106

State 153:
    (107) argument ::= test *

                     {default} reduce 107

State 154:
    (105) arglist ::= argument *

                     {default} reduce 105

State 155:
     (77) term ::= factor SLASHSLASH factor *

                     {default} reduce 77

State 156:
     (78) term ::= factor PERCENT factor *

                     {default} reduce 78

State 157:
     (99) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 99

State 158:
    (101) subscriptlist ::= subscriptlist COMMA subscript *

                     {default} reduce 101

State 159:
    (102) subscript ::= test *

                     {default} reduce 102

State 160:
    (100) subscriptlist ::= subscript *

                     {default} reduce 100

State 161:
     (62) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 62

State 162:
     (63) comparison ::= expr EQ_EQ expr *

                     {default} reduce 63

State 163:
     (64) comparison ::= expr NOT_EQ expr *

                     {default} reduce 64

State 164:
     (65) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 65

State 165:
     (66) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 66

State 166:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 167:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 168:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 169:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 170:
    (117) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 117

State 171:
    (118) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 118

State 172:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 173:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 174:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 175:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 176:
    (111) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 111

State 177:
    (112) testlist_2 ::= test COMMA test *

                     {default} reduce 112

State 178:
    (116) testlist ::= testlist_3 *

                     {default} reduce 116

State 179:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 180:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 181:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 182:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 183:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 184:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 185:
     (42) suite ::= simple_stmt *

                     {default} reduce 42

State 186:
     (43) suite ::= NEWLINE simple_stmt *

                     {default} reduce 43

State 187:
     (30) compound_stmt ::= if_stmt *

                     {default} reduce 30

State 188:
     (31) compound_stmt ::= while_stmt *

                     {default} reduce 31

State 189:
     (32) compound_stmt ::= for_stmt *

                     {default} reduce 32

State 190:
     (33) compound_stmt ::= funcdef *

                     {default} reduce 33

State 191:
     (35) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 35

State 192:
     (36) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 36

State 193:
     (37) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 37

State 194:
     (38) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 38

State 195:
     (40) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 40

State 196:
     (41) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 41

State 197:
     (44) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 44

State 198:
     (45) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 45

State 199:
     (47) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 47

State 200:
     (49) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 49

State 201:
     (46) stmts ::= stmts simple_stmt *

                     {default} reduce 46

State 202:
     (48) stmts ::= stmts compound_stmt *

                     {default} reduce 48

State 203:
     (50) stmts ::= simple_stmt *

                     {default} reduce 50

State 204:
     (51) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 51

State 205:
     (53) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 53

State 206:
     (52) stmts ::= compound_stmt *

                     {default} reduce 52

State 207:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: OPEN_RECT_BRACE
   41: CLOSE_RECT_BRACE
   42: OPEN_CURLY_BRACE
   43: CLOSE_CURLY_BRACE
   44: ICON
   45: FCON
   46: LAMBDA
   47: SCON
   48: error:
   49: simple_stmt: NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   50: small_stmt: NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   51: print_stmt: PRINT
   52: string: SCON
   53: atom: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   54: single_input: EOI NEWLINE DEF NAME DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   55: compound_stmt: DEF IF WHILE FOR
   56: funcdef: DEF
   57: parameters: OPEN_PAR
   58: suite: NEWLINE NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   59: varargslist: NAME
   60: fpdefs: NAME
   61: testlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   62: expr_stmt: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   63: del_stmt: DEL
   64: pass_stmt: PASS
   65: flow_stmt: RETURN
   66: exprlist: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   67: return_stmt: RETURN
   68: test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   69: if_stmt: IF
   70: while_stmt: WHILE
   71: for_stmt: FOR
   72: if_head: IF
   73: stmts: NEWLINE DEF NAME DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   74: or_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   75: lambdef: LAMBDA
   76: and_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   77: not_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   78: comparison: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   79: expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   80: xor_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   81: and_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   82: shift_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   83: arith_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   84: term: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   85: factor: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   86: power: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   87: call_trailer: OPEN_PAR
   88: access_trailer: OPEN_RECT_BRACE
   89: listmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   90: dictmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   91: arglist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   92: subscriptlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   93: subscript: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   94: argument: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   95: testlist_2: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   96: testlist_3: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   97: exprlist_2: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   98: exprlist_3: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
