State 0:
          module ::= * NEWLINE
          module ::= * network EOI
          network ::= * wiring
          network ::= * wiring body
          network ::= * body
          network ::= * wiring starter
          network ::= * wiring body starter
          network ::= * body starter
          network ::= * starter
          starter ::= * action
          wiring ::= * entry
          wiring ::= * wiring entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          body ::= * start
          body ::= * start run
          body ::= * start run stop
          body ::= * run
          body ::= * run stop
          body ::= * stop
          start ::= * START COLON NEWLINE INDENT code DEDENT NEWLINE
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                       NEWLINE shift  54
                          PORT shift  16
                          NODE shift  18
                         IDENT shift  60
                         START shift  47
                           RUN shift  43
                          STOP shift  39
                       starter shift  86
                       network shift  27
                        module accept
                        wiring shift  1
                          body shift  8
                        action shift  57
                         entry shift  72
                     port_decl shift  23
                     node_name shift  24
                    pipe_chain shift  25
                  node_or_port shift  26
                         start shift  20
                           run shift  22
                          stop shift  82

State 1:
      (2) network ::= wiring *
          network ::= wiring * body
          network ::= wiring * starter
          network ::= wiring * body starter
          starter ::= * action
          wiring ::= wiring * entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          body ::= * start
          body ::= * start run
          body ::= * start run stop
          body ::= * run
          body ::= * run stop
          body ::= * stop
          start ::= * START COLON NEWLINE INDENT code DEDENT NEWLINE
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PORT shift  16
                          NODE shift  18
                         IDENT shift  60
                         START shift  47
                           RUN shift  43
                          STOP shift  39
                       starter shift  62
                          body shift  7
                        action shift  57
                         entry shift  63
                     port_decl shift  23
                     node_name shift  24
                    pipe_chain shift  25
                  node_or_port shift  26
                         start shift  20
                           run shift  22
                          stop shift  82
                     {default} reduce 2

State 2:
          wiring ::= wiring * entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node ::= INDENT wiring * DEDENT NEWLINE
          node ::= INDENT wiring * body DEDENT NEWLINE
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          body ::= * start
          body ::= * start run
          body ::= * start run stop
          body ::= * run
          body ::= * run stop
          body ::= * stop
          start ::= * START COLON NEWLINE INDENT code DEDENT NEWLINE
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE

                          PORT shift  16
                          NODE shift  18
                        DEDENT shift  36
                         IDENT shift  60
                         START shift  47
                           RUN shift  43
                          STOP shift  39
                          body shift  37
                         entry shift  63
                     port_decl shift  23
                     node_name shift  24
                    pipe_chain shift  25
                  node_or_port shift  35
                         start shift  20
                           run shift  22
                          stop shift  82

State 3:
          wiring ::= * entry
          wiring ::= * wiring entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node ::= INDENT * PASS NEWLINE DEDENT NEWLINE
          node ::= INDENT * wiring DEDENT NEWLINE
          node ::= INDENT * wiring body DEDENT NEWLINE
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT

                          PORT shift  16
                          NODE shift  18
                          PASS shift  51
                         IDENT shift  60
                        wiring shift  2
                         entry shift  72
                     port_decl shift  23
                     node_name shift  24
                    pipe_chain shift  25
                  node_or_port shift  35

State 4:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          stop ::= STOP COLON NEWLINE INDENT * code DEDENT NEWLINE
          code ::= * PASS
          code ::= * action
          code ::= * code action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PASS shift  78
                         IDENT shift  60
                        action shift  79
                     node_name shift  28
                  node_or_port shift  29
                          code shift  9

State 5:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          run ::= RUN COLON NEWLINE INDENT * code DEDENT NEWLINE
          code ::= * PASS
          code ::= * action
          code ::= * code action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PASS shift  78
                         IDENT shift  60
                        action shift  79
                     node_name shift  28
                  node_or_port shift  29
                          code shift  10

State 6:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          start ::= START COLON NEWLINE INDENT * code DEDENT NEWLINE
          code ::= * PASS
          code ::= * action
          code ::= * code action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PASS shift  78
                         IDENT shift  60
                        action shift  79
                     node_name shift  28
                  node_or_port shift  29
                          code shift  11

State 7:
      (3) network ::= wiring body *
          network ::= wiring body * starter
          starter ::= * action
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                         IDENT shift  60
                       starter shift  56
                        action shift  57
                     node_name shift  28
                  node_or_port shift  29
                     {default} reduce 3

State 8:
      (4) network ::= body *
          network ::= body * starter
          starter ::= * action
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                         IDENT shift  60
                       starter shift  85
                        action shift  57
                     node_name shift  28
                  node_or_port shift  29
                     {default} reduce 4

State 9:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          stop ::= STOP COLON NEWLINE INDENT code * DEDENT NEWLINE
          code ::= code * action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                        DEDENT shift  42
                         IDENT shift  60
                        action shift  77
                     node_name shift  28
                  node_or_port shift  29

State 10:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          run ::= RUN COLON NEWLINE INDENT code * DEDENT NEWLINE
          code ::= code * action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                        DEDENT shift  46
                         IDENT shift  60
                        action shift  77
                     node_name shift  28
                  node_or_port shift  29

State 11:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          start ::= START COLON NEWLINE INDENT code * DEDENT NEWLINE
          code ::= code * action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                        DEDENT shift  50
                         IDENT shift  60
                        action shift  77
                     node_name shift  28
                  node_or_port shift  29

State 12:
          pipe_chain ::= pipe_chain PIPE * node_or_port
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT

                         IDENT shift  60
                     node_name shift  28
                  node_or_port shift  69

State 13:
          pipe_chain ::= node_or_port PIPE * node_or_port
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT

                         IDENT shift  60
                     node_name shift  28
                  node_or_port shift  70

State 14:
          node_or_port ::= node_name DOT * port_name
          port_name ::= * IDENT

                         IDENT shift  59
                     port_name shift  58

State 15:
          port_decl ::= port_decl COMMA * port_name
          port_name ::= * IDENT

                         IDENT shift  59
                     port_name shift  65

State 16:
          port_decl ::= PORT * port_name
          port_name ::= * IDENT

                         IDENT shift  59
                     port_name shift  66

State 17:
          entry ::= node_name EQUALS * node_name NEWLINE
          node_name ::= * IDENT

                         IDENT shift  60
                     node_name shift  32

State 18:
          entry ::= NODE * node_name COLON NEWLINE node
          node_name ::= * IDENT

                         IDENT shift  60
                     node_name shift  33

State 19:
          entry ::= NODE node_name COLON NEWLINE * node
          node ::= * INDENT PASS NEWLINE DEDENT NEWLINE
          node ::= * INDENT wiring DEDENT NEWLINE
          node ::= * INDENT wiring body DEDENT NEWLINE

                        INDENT shift  3
                          node shift  71

State 20:
     (27) body ::= start *
          body ::= start * run
          body ::= start * run stop
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE

                           RUN shift  43
                           run shift  21
                     {default} reduce 27

State 21:
     (28) body ::= start run *
          body ::= start run * stop
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE

                          STOP shift  39
                          stop shift  75
                     {default} reduce 28

State 22:
     (30) body ::= run *
          body ::= run * stop
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE

                          STOP shift  39
                          stop shift  81
                     {default} reduce 30

State 23:
          entry ::= port_decl * NEWLINE
          port_decl ::= port_decl * COMMA port_name

                       NEWLINE shift  64
                         COMMA shift  15

State 24:
          entry ::= node_name * EQUALS node_name NEWLINE
     (23) node_or_port ::= node_name *
          node_or_port ::= node_name * DOT port_name

                        EQUALS shift  17
                           DOT shift  14
                     {default} reduce 23

State 25:
          entry ::= pipe_chain * NEWLINE
          pipe_chain ::= pipe_chain * PIPE node_or_port

                       NEWLINE shift  68
                          PIPE shift  12

State 26:
          pipe_chain ::= node_or_port * PIPE node_or_port
          action ::= node_or_port * OPEN_PAR CLOSE_PAR NEWLINE

                          PIPE shift  13
                      OPEN_PAR shift  30

State 27:
          module ::= network * EOI

                           EOI shift  55

State 28:
     (23) node_or_port ::= node_name *
          node_or_port ::= node_name * DOT port_name

                           DOT shift  14
                     {default} reduce 23

State 29:
          action ::= node_or_port * OPEN_PAR CLOSE_PAR NEWLINE

                      OPEN_PAR shift  30

State 30:
          action ::= node_or_port OPEN_PAR * CLOSE_PAR NEWLINE

                     CLOSE_PAR shift  31

State 31:
          action ::= node_or_port OPEN_PAR CLOSE_PAR * NEWLINE

                       NEWLINE shift  61

State 32:
          entry ::= node_name EQUALS node_name * NEWLINE

                       NEWLINE shift  67

State 33:
          entry ::= NODE node_name * COLON NEWLINE node

                         COLON shift  34

State 34:
          entry ::= NODE node_name COLON * NEWLINE node

                       NEWLINE shift  19

State 35:
          pipe_chain ::= node_or_port * PIPE node_or_port

                          PIPE shift  13

State 36:
          node ::= INDENT wiring DEDENT * NEWLINE

                       NEWLINE shift  73

State 37:
          node ::= INDENT wiring body * DEDENT NEWLINE

                        DEDENT shift  38

State 38:
          node ::= INDENT wiring body DEDENT * NEWLINE

                       NEWLINE shift  74

State 39:
          stop ::= STOP * COLON NEWLINE INDENT code DEDENT NEWLINE

                         COLON shift  40

State 40:
          stop ::= STOP COLON * NEWLINE INDENT code DEDENT NEWLINE

                       NEWLINE shift  41

State 41:
          stop ::= STOP COLON NEWLINE * INDENT code DEDENT NEWLINE

                        INDENT shift  4

State 42:
          stop ::= STOP COLON NEWLINE INDENT code DEDENT * NEWLINE

                       NEWLINE shift  76

State 43:
          run ::= RUN * COLON NEWLINE INDENT code DEDENT NEWLINE

                         COLON shift  44

State 44:
          run ::= RUN COLON * NEWLINE INDENT code DEDENT NEWLINE

                       NEWLINE shift  45

State 45:
          run ::= RUN COLON NEWLINE * INDENT code DEDENT NEWLINE

                        INDENT shift  5

State 46:
          run ::= RUN COLON NEWLINE INDENT code DEDENT * NEWLINE

                       NEWLINE shift  80

State 47:
          start ::= START * COLON NEWLINE INDENT code DEDENT NEWLINE

                         COLON shift  48

State 48:
          start ::= START COLON * NEWLINE INDENT code DEDENT NEWLINE

                       NEWLINE shift  49

State 49:
          start ::= START COLON NEWLINE * INDENT code DEDENT NEWLINE

                        INDENT shift  6

State 50:
          start ::= START COLON NEWLINE INDENT code DEDENT * NEWLINE

                       NEWLINE shift  83

State 51:
          node ::= INDENT PASS * NEWLINE DEDENT NEWLINE

                       NEWLINE shift  52

State 52:
          node ::= INDENT PASS NEWLINE * DEDENT NEWLINE

                        DEDENT shift  53

State 53:
          node ::= INDENT PASS NEWLINE DEDENT * NEWLINE

                       NEWLINE shift  84

State 54:
      (0) module ::= NEWLINE *

                     {default} reduce 0

State 55:
      (1) module ::= network EOI *

                     {default} reduce 1

State 56:
      (6) network ::= wiring body starter *

                     {default} reduce 6

State 57:
      (9) starter ::= action *

                     {default} reduce 9

State 58:
     (24) node_or_port ::= node_name DOT port_name *

                     {default} reduce 24

State 59:
     (26) port_name ::= IDENT *

                     {default} reduce 26

State 60:
     (25) node_name ::= IDENT *

                     {default} reduce 25

State 61:
     (39) action ::= node_or_port OPEN_PAR CLOSE_PAR NEWLINE *

                     {default} reduce 39

State 62:
      (5) network ::= wiring starter *

                     {default} reduce 5

State 63:
     (11) wiring ::= wiring entry *

                     {default} reduce 11

State 64:
     (12) entry ::= port_decl NEWLINE *

                     {default} reduce 12

State 65:
     (14) port_decl ::= port_decl COMMA port_name *

                     {default} reduce 14

State 66:
     (13) port_decl ::= PORT port_name *

                     {default} reduce 13

State 67:
     (15) entry ::= node_name EQUALS node_name NEWLINE *

                     {default} reduce 15

State 68:
     (16) entry ::= pipe_chain NEWLINE *

                     {default} reduce 16

State 69:
     (18) pipe_chain ::= pipe_chain PIPE node_or_port *

                     {default} reduce 18

State 70:
     (17) pipe_chain ::= node_or_port PIPE node_or_port *

                     {default} reduce 17

State 71:
     (19) entry ::= NODE node_name COLON NEWLINE node *

                     {default} reduce 19

State 72:
     (10) wiring ::= entry *

                     {default} reduce 10

State 73:
     (21) node ::= INDENT wiring DEDENT NEWLINE *

                     {default} reduce 21

State 74:
     (22) node ::= INDENT wiring body DEDENT NEWLINE *

                     {default} reduce 22

State 75:
     (29) body ::= start run stop *

                     {default} reduce 29

State 76:
     (35) stop ::= STOP COLON NEWLINE INDENT code DEDENT NEWLINE *

                     {default} reduce 35

State 77:
     (38) code ::= code action *

                     {default} reduce 38

State 78:
     (36) code ::= PASS *

                     {default} reduce 36

State 79:
     (37) code ::= action *

                     {default} reduce 37

State 80:
     (34) run ::= RUN COLON NEWLINE INDENT code DEDENT NEWLINE *

                     {default} reduce 34

State 81:
     (31) body ::= run stop *

                     {default} reduce 31

State 82:
     (32) body ::= stop *

                     {default} reduce 32

State 83:
     (33) start ::= START COLON NEWLINE INDENT code DEDENT NEWLINE *

                     {default} reduce 33

State 84:
     (20) node ::= INDENT PASS NEWLINE DEDENT NEWLINE *

                     {default} reduce 20

State 85:
      (7) network ::= body starter *

                     {default} reduce 7

State 86:
      (8) network ::= starter *

                     {default} reduce 8

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: NEWLINE
    3: EOI
    4: PORT
    5: COMMA
    6: EQUALS
    7: PIPE
    8: NODE
    9: COLON
   10: INDENT
   11: PASS
   12: DEDENT
   13: DOT
   14: IDENT
   15: START
   16: RUN
   17: STOP
   18: OPEN_PAR
   19: CLOSE_PAR
   20: error:
   21: description:
   22: starter: IDENT
   23: network: PORT NODE IDENT START RUN STOP
   24: module: NEWLINE PORT NODE IDENT START RUN STOP
   25: wiring: PORT NODE IDENT
   26: body: START RUN STOP
   27: action: IDENT
   28: entry: PORT NODE IDENT
   29: port_decl: PORT
   30: port_name: IDENT
   31: node_name: IDENT
   32: pipe_chain: IDENT
   33: node_or_port: IDENT
   34: node: INDENT
   35: start: START
   36: run: RUN
   37: stop: STOP
   38: code: PASS IDENT
