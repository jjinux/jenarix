State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  173
                       NEWLINE shift  106
                           DEF shift  92
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                            IF shift  34
                         WHILE shift  37
                           FOR shift  40
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  107
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                  single_input accept
                 compound_stmt shift  82
                       funcdef shift  190
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  71
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  92
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                            IF shift  34
                         WHILE shift  37
                           FOR shift  40
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  203
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                 compound_stmt shift  102
                       funcdef shift  190
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  71
                         stmts shift  2
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  92
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                            IF shift  34
                         WHILE shift  37
                           FOR shift  40
                        DEDENT shift  197
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  201
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                 compound_stmt shift  202
                       funcdef shift  190
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  71
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  92
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                            IF shift  34
                         WHILE shift  37
                           FOR shift  40
                        DEDENT shift  198
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  199
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                 compound_stmt shift  200
                       funcdef shift  190
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  71
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  92
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                            IF shift  34
                         WHILE shift  37
                           FOR shift  40
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  100
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                 compound_stmt shift  101
                       funcdef shift  190
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       if_stmt shift  187
                    while_stmt shift  188
                      for_stmt shift  189
                       if_head shift  71
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  67
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  195
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  192
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  193
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 9:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  109
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 10:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  196
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  194
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  185
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                         suite shift  191
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                        INDENT shift  1
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                   simple_stmt shift  186
                    small_stmt shift  73
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                      testlist shift  64
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 14:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  111
                          NAME shift  145
                           DEL shift  39
                          PASS shift  175
                         PRINT shift  31
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                    small_stmt shift  81
                    print_stmt shift  90
                        string shift  76
                          atom shift  60
                      testlist shift  66
                     expr_stmt shift  113
                      del_stmt shift  169
                     pass_stmt shift  170
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 15:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                      testlist shift  180
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 16:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                      testlist shift  176
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 17:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                      testlist shift  77
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 18:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                      testlist shift  181
                          test shift  87
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    testlist_2 shift  84
                    testlist_3 shift  179

State 19:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                     CLOSE_PAR shift  151
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  154
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                       arglist shift  68
                      argument shift  155

State 20:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscriptlist ::= * subscriptlist COMMA subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  158
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                 subscriptlist shift  74
                     subscript shift  159

State 21:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
             CLOSE_CURLY_BRACE shift  136
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  85
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                     dictmaker shift  72

State 22:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              CLOSE_RECT_BRACE shift  134
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  150
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                     listmaker shift  69

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          subscriptlist ::= subscriptlist COMMA * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  158
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                     subscript shift  157

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  154
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                      argument shift  153

State 25:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  114
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  88
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  143
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 28:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  177
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (110) testlist_3 ::= test COMMA *

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  178
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                     {default} reduce 110

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  146
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 31:
     (24) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  182
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                     {default} reduce 24

State 32:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  147
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 33:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  148
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 34:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  79
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 35:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  96
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 36:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  91
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 37:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  98
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 38:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  59
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          test shift  149
                       or_test shift  115
                       lambdef shift  116
                      and_test shift  117
                      not_test shift  118
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 39:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                      exprlist shift  171
                          expr shift  83
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    exprlist_2 shift  95
                    exprlist_3 shift  174

State 40:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                      exprlist shift  75
                          expr shift  83
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                    exprlist_2 shift  95
                    exprlist_3 shift  174

State 41:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  41
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                      not_test shift  119
                    comparison shift  120
                          expr shift  63
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 42:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  168
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 43:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  164
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 44:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (116) exprlist_3 ::= expr COMMA *

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  105
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128
                     {default} reduce 116

State 45:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  167
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 46:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  165
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 47:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  166
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 48:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  172
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 49:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          expr shift  121
                      xor_expr shift  122
                      and_expr shift  123
                    shift_expr shift  124
                    arith_expr shift  125
                          term shift  70
                        factor shift  65
                         power shift  128

State 50:
          arith_expr ::= term MINUS * term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          term shift  163
                        factor shift  65
                         power shift  128

State 51:
          arith_expr ::= term PLUS * term
          term ::= * factor
          term ::= * factor ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                          term shift  126
                        factor shift  65
                         power shift  128

State 52:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                        factor shift  131
                         power shift  128

State 53:
          term ::= factor ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                        factor shift  127
                         power shift  128

State 54:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                        factor shift  161
                         power shift  128

State 55:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                        factor shift  162
                         power shift  128

State 56:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                        factor shift  129
                         power shift  128

State 57:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                        factor shift  160
                         power shift  128

State 58:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom call_trailer
          power ::= * atom access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  56
                         MINUS shift  58
                         TILDE shift  52
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  21
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  76
                          atom shift  60
                        factor shift  130
                         power shift  128

State 59:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  142
                         COLON shift  27
                   varargslist shift  89
                        fpdefs shift  93

State 60:
          power ::= atom * call_trailer
          power ::= atom * access_trailer
     (82) power ::= atom *
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

                      OPEN_PAR shift  19
               OPEN_RECT_BRACE shift  20
                  call_trailer shift  132
                access_trailer shift  133
                     {default} reduce 82

State 61:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  142
                     CLOSE_PAR shift  103
                   varargslist shift  97
                        fpdefs shift  93

State 62:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  61
                    parameters shift  80

State 63:
     (57) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  49
               LESS_THAN_OR_EQ shift  43
                         EQ_EQ shift  46
                        NOT_EQ shift  47
                  GREATER_THAN shift  45
            GREATER_THAN_OR_EQ shift  42
                     {default} reduce 57

State 64:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  183
                     SEMICOLON shift  86
                   PLUS_EQUALS shift  16
                  MINUS_EQUALS shift  15
                        EQUALS shift  18

State 65:
     (71) term ::= factor *
          term ::= factor * ASTERISK factor
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                      ASTERISK shift  53
                         SLASH shift  57
                    SLASHSLASH shift  54
                       PERCENT shift  55
                     {default} reduce 71

State 66:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  16
                  MINUS_EQUALS shift  15
                        EQUALS shift  18

State 67:
     (31) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  99
                          ELIF shift  35
                     {default} reduce 31

State 68:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  152
                         COMMA shift  24

State 69:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test

                         COMMA shift  38
              CLOSE_RECT_BRACE shift  135

State 70:
     (68) arith_expr ::= term *
          arith_expr ::= term * PLUS term
          arith_expr ::= term * MINUS term

                          PLUS shift  51
                         MINUS shift  50
                     {default} reduce 68

State 71:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (36) if_stmt ::= if_head *

                          ELSE shift  94
                          ELIF shift  36
                     {default} reduce 36

State 72:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  26
             CLOSE_CURLY_BRACE shift  137

State 73:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  110
                     SEMICOLON shift  14

State 74:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE
          subscriptlist ::= subscriptlist * COMMA subscript

                         COMMA shift  23
              CLOSE_RECT_BRACE shift  156

State 75:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  17

State 76:
     (89) atom ::= string *
          string ::= string * SCON

                          SCON shift  140
                     {default} reduce 89

State 77:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  10

State 78:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  141

State 79:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  5

State 80:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  9

State 81:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  112

State 82:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  108

State 83:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (117) exprlist ::= expr *

                         COMMA shift  44
                     {default} reduce 117

State 84:
          testlist_2 ::= testlist_2 * COMMA test
    (112) testlist ::= testlist_2 *

                         COMMA shift  28
                     {default} reduce 112

State 85:
          dictmaker ::= test * COLON test

                         COLON shift  33

State 86:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  184

State 87:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (111) testlist ::= test *

                         COMMA shift  29
                     {default} reduce 111

State 88:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  32

State 89:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  30

State 90:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  25
                     {default} reduce 16

State 91:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  8

State 92:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  62

State 93:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  78
                     {default} reduce 7

State 94:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  11

State 95:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (118) exprlist ::= exprlist_2 *

                         COMMA shift  48
                     {default} reduce 118

State 96:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  7

State 97:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  104

State 98:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  6

State 99:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  12

State 100:
     (48) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 48

State 101:
     (50) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 50

State 102:
     (49) stmts ::= compound_stmt *

                     {default} reduce 49

State 103:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

State 104:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 105:
    (115) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 115

State 106:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 107:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 108:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 109:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 110:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 111:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 112:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 113:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 114:
     (26) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 26

State 115:
     (51) test ::= or_test *

                     {default} reduce 51

State 116:
     (52) test ::= lambdef *

                     {default} reduce 52

State 117:
     (53) or_test ::= and_test *

                     {default} reduce 53

State 118:
     (54) and_test ::= not_test *

                     {default} reduce 54

State 119:
     (55) not_test ::= NOT not_test *

                     {default} reduce 55

State 120:
     (56) not_test ::= comparison *

                     {default} reduce 56

State 121:
     (58) comparison ::= expr LESS_THAN expr *

                     {default} reduce 58

State 122:
     (64) expr ::= xor_expr *

                     {default} reduce 64

State 123:
     (65) xor_expr ::= and_expr *

                     {default} reduce 65

State 124:
     (66) and_expr ::= shift_expr *

                     {default} reduce 66

State 125:
     (67) shift_expr ::= arith_expr *

                     {default} reduce 67

State 126:
     (69) arith_expr ::= term PLUS term *

                     {default} reduce 69

State 127:
     (72) term ::= factor ASTERISK factor *

                     {default} reduce 72

State 128:
     (76) factor ::= power *

                     {default} reduce 76

State 129:
     (77) factor ::= PLUS factor *

                     {default} reduce 77

State 130:
     (78) factor ::= MINUS factor *

                     {default} reduce 78

State 131:
     (79) factor ::= TILDE factor *

                     {default} reduce 79

State 132:
     (80) power ::= atom call_trailer *

                     {default} reduce 80

State 133:
     (81) power ::= atom access_trailer *

                     {default} reduce 81

State 134:
     (83) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 83

State 135:
     (84) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 84

State 136:
     (85) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 85

State 137:
     (86) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 86

State 138:
     (87) atom ::= ICON *

                     {default} reduce 87

State 139:
     (88) atom ::= FCON *

                     {default} reduce 88

State 140:
    (106) string ::= string SCON *

                     {default} reduce 106

State 141:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 142:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 143:
     (92) lambdef ::= LAMBDA COLON test *

                     {default} reduce 92

State 144:
    (105) string ::= SCON *

                     {default} reduce 105

State 145:
    (107) atom ::= NAME *

                     {default} reduce 107

State 146:
     (93) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 93

State 147:
    (101) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 101

State 148:
    (100) dictmaker ::= test COLON test *

                     {default} reduce 100

State 149:
     (91) listmaker ::= listmaker COMMA test *

                     {default} reduce 91

State 150:
     (90) listmaker ::= test *

                     {default} reduce 90

State 151:
     (94) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 94

State 152:
     (95) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 95

State 153:
    (103) arglist ::= arglist COMMA argument *

                     {default} reduce 103

State 154:
    (104) argument ::= test *

                     {default} reduce 104

State 155:
    (102) arglist ::= argument *

                     {default} reduce 102

State 156:
     (96) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 96

State 157:
     (98) subscriptlist ::= subscriptlist COMMA subscript *

                     {default} reduce 98

State 158:
     (99) subscript ::= test *

                     {default} reduce 99

State 159:
     (97) subscriptlist ::= subscript *

                     {default} reduce 97

State 160:
     (73) term ::= factor SLASH factor *

                     {default} reduce 73

State 161:
     (74) term ::= factor SLASHSLASH factor *

                     {default} reduce 74

State 162:
     (75) term ::= factor PERCENT factor *

                     {default} reduce 75

State 163:
     (70) arith_expr ::= term MINUS term *

                     {default} reduce 70

State 164:
     (59) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 59

State 165:
     (60) comparison ::= expr EQ_EQ expr *

                     {default} reduce 60

State 166:
     (61) comparison ::= expr NOT_EQ expr *

                     {default} reduce 61

State 167:
     (62) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 62

State 168:
     (63) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 63

State 169:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 170:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 171:
     (19) del_stmt ::= DEL exprlist *

                     {default} reduce 19

State 172:
    (114) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 114

State 173:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 174:
    (119) exprlist ::= exprlist_3 *

                     {default} reduce 119

State 175:
     (20) pass_stmt ::= PASS *

                     {default} reduce 20

State 176:
     (21) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 21

State 177:
    (108) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 108

State 178:
    (109) testlist_2 ::= test COMMA test *

                     {default} reduce 109

State 179:
    (113) testlist ::= testlist_3 *

                     {default} reduce 113

State 180:
     (22) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 22

State 181:
     (23) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 23

State 182:
     (25) print_stmt ::= PRINT test *

                     {default} reduce 25

State 183:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 184:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 185:
     (39) suite ::= simple_stmt *

                     {default} reduce 39

State 186:
     (40) suite ::= NEWLINE simple_stmt *

                     {default} reduce 40

State 187:
     (27) compound_stmt ::= if_stmt *

                     {default} reduce 27

State 188:
     (28) compound_stmt ::= while_stmt *

                     {default} reduce 28

State 189:
     (29) compound_stmt ::= for_stmt *

                     {default} reduce 29

State 190:
     (30) compound_stmt ::= funcdef *

                     {default} reduce 30

State 191:
     (32) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 32

State 192:
     (33) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 33

State 193:
     (34) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 34

State 194:
     (35) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 35

State 195:
     (37) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 37

State 196:
     (38) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 38

State 197:
     (41) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 41

State 198:
     (42) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 42

State 199:
     (44) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 44

State 200:
     (46) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 46

State 201:
     (43) stmts ::= stmts simple_stmt *

                     {default} reduce 43

State 202:
     (45) stmts ::= stmts compound_stmt *

                     {default} reduce 45

State 203:
     (47) stmts ::= simple_stmt *

                     {default} reduce 47

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: PLUS_EQUALS
   14: MINUS_EQUALS
   15: EQUALS
   16: PRINT
   17: IF
   18: ELSE
   19: ELIF
   20: WHILE
   21: FOR
   22: IN
   23: INDENT
   24: DEDENT
   25: NOT
   26: LESS_THAN
   27: LESS_THAN_OR_EQ
   28: EQ_EQ
   29: NOT_EQ
   30: GREATER_THAN
   31: GREATER_THAN_OR_EQ
   32: PLUS
   33: MINUS
   34: ASTERISK
   35: SLASH
   36: SLASHSLASH
   37: PERCENT
   38: TILDE
   39: OPEN_RECT_BRACE
   40: CLOSE_RECT_BRACE
   41: OPEN_CURLY_BRACE
   42: CLOSE_CURLY_BRACE
   43: ICON
   44: FCON
   45: LAMBDA
   46: SCON
   47: error:
   48: simple_stmt: NAME DEL PASS PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   49: small_stmt: NAME DEL PASS PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   50: print_stmt: PRINT
   51: string: SCON
   52: atom: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   53: single_input: EOI NEWLINE DEF NAME DEL PASS PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   54: compound_stmt: DEF IF WHILE FOR
   55: funcdef: DEF
   56: parameters: OPEN_PAR
   57: suite: NEWLINE NAME DEL PASS PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   58: varargslist: NAME
   59: fpdefs: NAME
   60: testlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   61: expr_stmt: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   62: del_stmt: DEL
   63: pass_stmt: PASS
   64: exprlist: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   65: test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   66: if_stmt: IF
   67: while_stmt: WHILE
   68: for_stmt: FOR
   69: if_head: IF
   70: stmts: NEWLINE DEF NAME DEL PASS PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   71: or_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   72: lambdef: LAMBDA
   73: and_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   74: not_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   75: comparison: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   76: expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   77: xor_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   78: and_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   79: shift_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   80: arith_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   81: term: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   82: factor: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   83: power: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   84: call_trailer: OPEN_PAR
   85: access_trailer: OPEN_RECT_BRACE
   86: listmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   87: dictmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   88: arglist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   89: subscriptlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   90: subscript: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   91: argument: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   92: testlist_2: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   93: testlist_3: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   94: exprlist_2: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   95: exprlist_3: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
