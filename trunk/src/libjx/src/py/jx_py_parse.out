State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  117
                       NEWLINE shift  119
                           DEF shift  83
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                            IF shift  30
                         WHILE shift  38
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  120
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                  single_input accept
                 compound_stmt shift  97
                       funcdef shift  216
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       if_stmt shift  213
                    while_stmt shift  214
                      for_stmt shift  215
                       if_head shift  72
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  83
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                            IF shift  30
                         WHILE shift  38
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  112
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                 compound_stmt shift  115
                       funcdef shift  216
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       if_stmt shift  213
                    while_stmt shift  214
                      for_stmt shift  215
                       if_head shift  72
                         stmts shift  2
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  83
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                            IF shift  30
                         WHILE shift  38
                           FOR shift  41
                        DEDENT shift  223
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  110
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                 compound_stmt shift  111
                       funcdef shift  216
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       if_stmt shift  213
                    while_stmt shift  214
                      for_stmt shift  215
                       if_head shift  72
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  83
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                            IF shift  30
                         WHILE shift  38
                           FOR shift  41
                        DEDENT shift  224
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  225
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                 compound_stmt shift  109
                       funcdef shift  216
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       if_stmt shift  213
                    while_stmt shift  214
                      for_stmt shift  215
                       if_head shift  72
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  83
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                            IF shift  30
                         WHILE shift  38
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  113
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                 compound_stmt shift  114
                       funcdef shift  216
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       if_stmt shift  213
                    while_stmt shift  214
                      for_stmt shift  215
                       if_head shift  72
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  218
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 6:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  122
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  219
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  217
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  222
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 10:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  74
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  220
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  211
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                         suite shift  221
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                        INDENT shift  1
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                   simple_stmt shift  212
                    small_stmt shift  73
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                      testlist shift  68
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 14:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  124
                          NAME shift  156
                      OPEN_PAR shift  24
                           DEL shift  40
                          PASS shift  199
                        RETURN shift  17
                         PRINT shift  34
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                    small_stmt shift  101
                    print_stmt shift  89
                        string shift  93
                          atom shift  51
                      testlist shift  71
                     expr_stmt shift  126
                      del_stmt shift  192
                     pass_stmt shift  193
                     flow_stmt shift  194
                   return_stmt shift  200
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 15:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      testlist shift  207
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 16:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      testlist shift  80
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 17:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      testlist shift  201
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 18:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      testlist shift  205
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 19:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      testlist shift  206
                          test shift  104
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    testlist_2 shift  106
                    testlist_3 shift  204

State 20:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                     CLOSE_PAR shift  174
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  177
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                       arglist shift  77
                      argument shift  178

State 21:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  182
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                 subscriptlist shift  90
                     subscript shift  181

State 22:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
             CLOSE_CURLY_BRACE shift  147
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  107
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                     dictmaker shift  75

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          listmaker ::= * listmaker NEWLINE
          listmaker ::= * listmaker INDENT
          listmaker ::= * listmaker DEDENT
          listmaker ::= * listmaker COMMA NEWLINE
          listmaker ::= * listmaker COMMA INDENT
          listmaker ::= * listmaker COMMA DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              CLOSE_RECT_BRACE shift  145
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  167
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                     listmaker shift  69

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp ::= * test
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= OPEN_PAR * testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  170
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                 testlist_gexp shift  92

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  177
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                      argument shift  176

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          listmaker ::= listmaker COMMA * NEWLINE
          listmaker ::= listmaker COMMA * INDENT
          listmaker ::= listmaker COMMA * DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                       NEWLINE shift  161
                          NAME shift  156
                      OPEN_PAR shift  24
                        INDENT shift  162
                        DEDENT shift  163
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  160
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  157
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 28:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  102
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  108
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 30:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  95
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 31:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  100
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 32:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  154
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 33:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  127
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 34:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  208
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                     {default} reduce 27

State 35:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  159
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 36:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  202
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 37:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  158
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 38:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  105
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 39:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (128) testlist_3 ::= test COMMA *

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                        LAMBDA shift  63
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          test shift  203
                       or_test shift  128
                       lambdef shift  129
                      and_test shift  130
                      not_test shift  131
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                     {default} reduce 128

State 40:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      exprlist shift  195
                          expr shift  79
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    exprlist_2 shift  81
                    exprlist_3 shift  198

State 41:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      exprlist shift  78
                          expr shift  79
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                    exprlist_2 shift  81
                    exprlist_3 shift  198

State 42:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                           NOT shift  42
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                      not_test shift  132
                    comparison shift  133
                          expr shift  67
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 43:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  190
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 44:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (134) exprlist_3 ::= expr COMMA *

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  197
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139
                     {default} reduce 134

State 45:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  188
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 46:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  196
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 47:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  189
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 48:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  187
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 49:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  134
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 50:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          expr shift  191
                      xor_expr shift  135
                      and_expr shift  136
                    shift_expr shift  137
                    arith_expr shift  76
                          term shift  98
                        factor shift  70
                         power shift  139

State 51:
     (84) power ::= atom *
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * dot_trailer_list
          power ::= atom * call_trailer_list
          power ::= atom * access_trailer_list
          call_trailer_list ::= * call_trailer
          call_trailer_list ::= * call_trailer_list call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer_list ::= * access_trailer
          access_trailer_list ::= * access_trailer_list access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE
          dot_trailer_list ::= * dot_trailer
          dot_trailer ::= * DOT NAME

                      OPEN_PAR shift  20
               DOUBLE_ASTERISK shift  59
               OPEN_RECT_BRACE shift  21
                           DOT shift  88
              dot_trailer_list shift  172
             call_trailer_list shift  65
           access_trailer_list shift  66
                  call_trailer shift  183
                access_trailer shift  184
                   dot_trailer shift  185
                     {default} reduce 84

State 52:
          arith_expr ::= arith_expr PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          term shift  84
                        factor shift  70
                         power shift  139

State 53:
          arith_expr ::= arith_expr MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                          term shift  86
                        factor shift  70
                         power shift  139

State 54:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  168
                         power shift  139

State 55:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  138
                         power shift  139

State 56:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  140
                         power shift  139

State 57:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  141
                         power shift  139

State 58:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  142
                         power shift  139

State 59:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  143
                         power shift  139

State 60:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  169
                         power shift  139

State 61:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  156
                      OPEN_PAR shift  24
                          PLUS shift  56
                         MINUS shift  57
                         TILDE shift  58
               OPEN_RECT_BRACE shift  23
              OPEN_CURLY_BRACE shift  22
                          ICON shift  149
                          FCON shift  150
                          SCON shift  155
                        string shift  93
                          atom shift  51
                        factor shift  144
                         power shift  139

State 62:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  153
                     CLOSE_PAR shift  116
                   varargslist shift  91
                        fpdefs shift  87

State 63:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  153
                         COLON shift  32
                   varargslist shift  82
                        fpdefs shift  87

State 64:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  62
                    parameters shift  94

State 65:
     (87) power ::= atom call_trailer_list *
          call_trailer_list ::= call_trailer_list * call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  20
                  call_trailer shift  173
                     {default} reduce 87

State 66:
     (88) power ::= atom access_trailer_list *
          access_trailer_list ::= access_trailer_list * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  21
                access_trailer shift  179
                     {default} reduce 88

State 67:
     (60) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  49
               LESS_THAN_OR_EQ shift  48
                         EQ_EQ shift  45
                        NOT_EQ shift  47
                  GREATER_THAN shift  43
            GREATER_THAN_OR_EQ shift  50
                     {default} reduce 60

State 68:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  209
                     SEMICOLON shift  99
                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  19
                        EQUALS shift  15

State 69:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test
          listmaker ::= listmaker * NEWLINE
          listmaker ::= listmaker * INDENT
          listmaker ::= listmaker * DEDENT
          listmaker ::= listmaker * COMMA NEWLINE
          listmaker ::= listmaker * COMMA INDENT
          listmaker ::= listmaker * COMMA DEDENT

                       NEWLINE shift  164
                         COMMA shift  26
                        INDENT shift  165
                        DEDENT shift  166
              CLOSE_RECT_BRACE shift  146

State 70:
     (74) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  61
                    SLASHSLASH shift  54
                       PERCENT shift  60
                     {default} reduce 74

State 71:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  19
                        EQUALS shift  15

State 72:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (39) if_stmt ::= if_head *

                          ELSE shift  103
                          ELIF shift  28
                     {default} reduce 39

State 73:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  123
                     SEMICOLON shift  14

State 74:
     (34) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  96
                          ELIF shift  31
                     {default} reduce 34

State 75:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  29
             CLOSE_CURLY_BRACE shift  148

State 76:
     (70) shift_expr ::= arith_expr *
          arith_expr ::= arith_expr * PLUS term
          arith_expr ::= arith_expr * MINUS term

                          PLUS shift  52
                         MINUS shift  53
                     {default} reduce 70

State 77:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  175
                         COMMA shift  25

State 78:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  16

State 79:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (135) exprlist ::= expr *

                         COMMA shift  44
                     {default} reduce 135

State 80:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  9

State 81:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (136) exprlist ::= exprlist_2 *

                         COMMA shift  46
                     {default} reduce 136

State 82:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  27

State 83:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  64

State 84:
     (72) arith_expr ::= arith_expr PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  55
                     {default} reduce 72

State 85:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  152

State 86:
     (73) arith_expr ::= arith_expr MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  55
                     {default} reduce 73

State 87:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  85
                     {default} reduce 7

State 88:
          dot_trailer ::= DOT * NAME

                          NAME shift  186

State 89:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  33
                     {default} reduce 16

State 90:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE

              CLOSE_RECT_BRACE shift  180

State 91:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  118

State 92:
          atom ::= OPEN_PAR testlist_gexp * CLOSE_PAR

                     CLOSE_PAR shift  171

State 93:
     (96) atom ::= string *
          string ::= string * SCON

                          SCON shift  151
                     {default} reduce 96

State 94:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  6

State 95:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  10

State 96:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  8

State 97:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  121

State 98:
     (71) arith_expr ::= term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  55
                     {default} reduce 71

State 99:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  210

State 100:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  5

State 101:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  125

State 102:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  7

State 103:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  11

State 104:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (129) testlist ::= test *

                         COMMA shift  39
                     {default} reduce 129

State 105:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  12

State 106:
          testlist_2 ::= testlist_2 * COMMA test
    (130) testlist ::= testlist_2 *

                         COMMA shift  36
                     {default} reduce 130

State 107:
          dictmaker ::= test * COLON test

                         COLON shift  35

State 108:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  37

State 109:
     (49) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 49

State 110:
     (46) stmts ::= stmts simple_stmt *

                     {default} reduce 46

State 111:
     (48) stmts ::= stmts compound_stmt *

                     {default} reduce 48

State 112:
     (50) stmts ::= simple_stmt *

                     {default} reduce 50

State 113:
     (51) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 51

State 114:
     (53) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 53

State 115:
     (52) stmts ::= compound_stmt *

                     {default} reduce 52

State 116:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

State 117:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 118:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 119:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 120:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 121:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 122:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 123:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 124:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 125:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 126:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 127:
     (29) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 29

State 128:
     (54) test ::= or_test *

                     {default} reduce 54

State 129:
     (55) test ::= lambdef *

                     {default} reduce 55

State 130:
     (56) or_test ::= and_test *

                     {default} reduce 56

State 131:
     (57) and_test ::= not_test *

                     {default} reduce 57

State 132:
     (58) not_test ::= NOT not_test *

                     {default} reduce 58

State 133:
     (59) not_test ::= comparison *

                     {default} reduce 59

State 134:
     (61) comparison ::= expr LESS_THAN expr *

                     {default} reduce 61

State 135:
     (67) expr ::= xor_expr *

                     {default} reduce 67

State 136:
     (68) xor_expr ::= and_expr *

                     {default} reduce 68

State 137:
     (69) and_expr ::= shift_expr *

                     {default} reduce 69

State 138:
     (75) term ::= term ASTERISK factor *

                     {default} reduce 75

State 139:
     (79) factor ::= power *

                     {default} reduce 79

State 140:
     (80) factor ::= PLUS factor *

                     {default} reduce 80

State 141:
     (81) factor ::= MINUS factor *

                     {default} reduce 81

State 142:
     (82) factor ::= TILDE factor *

                     {default} reduce 82

State 143:
     (85) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 85

State 144:
     (76) term ::= factor SLASH factor *

                     {default} reduce 76

State 145:
     (90) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 90

State 146:
     (91) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 91

State 147:
     (92) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 92

State 148:
     (93) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 93

State 149:
     (94) atom ::= ICON *

                     {default} reduce 94

State 150:
     (95) atom ::= FCON *

                     {default} reduce 95

State 151:
    (124) string ::= string SCON *

                     {default} reduce 124

State 152:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 153:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 154:
    (105) lambdef ::= LAMBDA COLON test *

                     {default} reduce 105

State 155:
    (123) string ::= SCON *

                     {default} reduce 123

State 156:
    (125) atom ::= NAME *

                     {default} reduce 125

State 157:
    (106) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 106

State 158:
    (119) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 119

State 159:
    (118) dictmaker ::= test COLON test *

                     {default} reduce 118

State 160:
     (98) listmaker ::= listmaker COMMA test *

                     {default} reduce 98

State 161:
    (102) listmaker ::= listmaker COMMA NEWLINE *

                     {default} reduce 102

State 162:
    (103) listmaker ::= listmaker COMMA INDENT *

                     {default} reduce 103

State 163:
    (104) listmaker ::= listmaker COMMA DEDENT *

                     {default} reduce 104

State 164:
     (99) listmaker ::= listmaker NEWLINE *

                     {default} reduce 99

State 165:
    (100) listmaker ::= listmaker INDENT *

                     {default} reduce 100

State 166:
    (101) listmaker ::= listmaker DEDENT *

                     {default} reduce 101

State 167:
     (97) listmaker ::= test *

                     {default} reduce 97

State 168:
     (77) term ::= factor SLASHSLASH factor *

                     {default} reduce 77

State 169:
     (78) term ::= factor PERCENT factor *

                     {default} reduce 78

State 170:
     (83) testlist_gexp ::= test *

                     {default} reduce 83

State 171:
     (89) atom ::= OPEN_PAR testlist_gexp CLOSE_PAR *

                     {default} reduce 89

State 172:
     (86) power ::= atom dot_trailer_list *

                     {default} reduce 86

State 173:
    (108) call_trailer_list ::= call_trailer_list call_trailer *

                     {default} reduce 108

State 174:
    (109) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 109

State 175:
    (110) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 110

State 176:
    (121) arglist ::= arglist COMMA argument *

                     {default} reduce 121

State 177:
    (122) argument ::= test *

                     {default} reduce 122

State 178:
    (120) arglist ::= argument *

                     {default} reduce 120

State 179:
    (112) access_trailer_list ::= access_trailer_list access_trailer *

                     {default} reduce 112

State 180:
    (113) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 113

State 181:
    (116) subscriptlist ::= subscript *

                     {default} reduce 116

State 182:
    (117) subscript ::= test *

                     {default} reduce 117

State 183:
    (107) call_trailer_list ::= call_trailer *

                     {default} reduce 107

State 184:
    (111) access_trailer_list ::= access_trailer *

                     {default} reduce 111

State 185:
    (114) dot_trailer_list ::= dot_trailer *

                     {default} reduce 114

State 186:
    (115) dot_trailer ::= DOT NAME *

                     {default} reduce 115

State 187:
     (62) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 62

State 188:
     (63) comparison ::= expr EQ_EQ expr *

                     {default} reduce 63

State 189:
     (64) comparison ::= expr NOT_EQ expr *

                     {default} reduce 64

State 190:
     (65) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 65

State 191:
     (66) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 66

State 192:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 193:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 194:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 195:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 196:
    (132) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 132

State 197:
    (133) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 133

State 198:
    (137) exprlist ::= exprlist_3 *

                     {default} reduce 137

State 199:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 200:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 201:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 202:
    (126) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 126

State 203:
    (127) testlist_2 ::= test COMMA test *

                     {default} reduce 127

State 204:
    (131) testlist ::= testlist_3 *

                     {default} reduce 131

State 205:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 206:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 207:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 208:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 209:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 210:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 211:
     (42) suite ::= simple_stmt *

                     {default} reduce 42

State 212:
     (43) suite ::= NEWLINE simple_stmt *

                     {default} reduce 43

State 213:
     (30) compound_stmt ::= if_stmt *

                     {default} reduce 30

State 214:
     (31) compound_stmt ::= while_stmt *

                     {default} reduce 31

State 215:
     (32) compound_stmt ::= for_stmt *

                     {default} reduce 32

State 216:
     (33) compound_stmt ::= funcdef *

                     {default} reduce 33

State 217:
     (35) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 35

State 218:
     (36) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 36

State 219:
     (37) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 37

State 220:
     (38) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 38

State 221:
     (40) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 40

State 222:
     (41) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 41

State 223:
     (44) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 44

State 224:
     (45) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 45

State 225:
     (47) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 47

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: DOUBLE_ASTERISK
   41: OPEN_RECT_BRACE
   42: CLOSE_RECT_BRACE
   43: OPEN_CURLY_BRACE
   44: CLOSE_CURLY_BRACE
   45: ICON
   46: FCON
   47: LAMBDA
   48: DOT
   49: SCON
   50: error:
   51: simple_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   52: small_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   53: print_stmt: PRINT
   54: string: SCON
   55: atom: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   56: single_input: EOI NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   57: compound_stmt: DEF IF WHILE FOR
   58: funcdef: DEF
   59: parameters: OPEN_PAR
   60: suite: NEWLINE NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   61: varargslist: NAME
   62: fpdefs: NAME
   63: testlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   64: expr_stmt: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   65: del_stmt: DEL
   66: pass_stmt: PASS
   67: flow_stmt: RETURN
   68: exprlist: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   69: return_stmt: RETURN
   70: test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   71: if_stmt: IF
   72: while_stmt: WHILE
   73: for_stmt: FOR
   74: if_head: IF
   75: stmts: NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   76: or_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   77: lambdef: LAMBDA
   78: and_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   79: not_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   80: comparison: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   81: expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   82: xor_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   83: and_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   84: shift_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   85: arith_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   86: term: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   87: factor: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   88: power: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   89: testlist_gexp: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   90: dot_trailer_list: DOT
   91: call_trailer_list: OPEN_PAR
   92: access_trailer_list: OPEN_RECT_BRACE
   93: listmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   94: dictmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   95: call_trailer: OPEN_PAR
   96: arglist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   97: access_trailer: OPEN_RECT_BRACE
   98: subscriptlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   99: dot_trailer: DOT
  100: subscript: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  101: argument: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  102: testlist_2: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  103: testlist_3: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  104: exprlist_2: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
  105: exprlist_3: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
