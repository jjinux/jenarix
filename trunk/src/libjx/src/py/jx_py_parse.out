State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                           EOI shift  213
                       NEWLINE shift  129
                           DEF shift  97
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                            IF shift  30
                         WHILE shift  32
                           FOR shift  44
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                         CLASS shift  100
                          SCON shift  173
                   simple_stmt shift  130
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                  single_input accept
                 compound_stmt shift  101
                       funcdef shift  233
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       if_stmt shift  230
                    while_stmt shift  231
                      for_stmt shift  232
                      classdef shift  234
                       if_head shift  78
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  97
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                            IF shift  30
                         WHILE shift  32
                           FOR shift  44
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                         CLASS shift  100
                          SCON shift  173
                   simple_stmt shift  122
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                 compound_stmt shift  125
                       funcdef shift  233
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       if_stmt shift  230
                    while_stmt shift  231
                      for_stmt shift  232
                      classdef shift  234
                       if_head shift  78
                         stmts shift  2
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  97
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                            IF shift  30
                         WHILE shift  32
                           FOR shift  44
                        DEDENT shift  241
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                         CLASS shift  100
                          SCON shift  173
                   simple_stmt shift  120
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                 compound_stmt shift  121
                       funcdef shift  233
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       if_stmt shift  230
                    while_stmt shift  231
                      for_stmt shift  232
                      classdef shift  234
                       if_head shift  78
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                           DEF shift  97
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                            IF shift  30
                         WHILE shift  32
                           FOR shift  44
                        DEDENT shift  242
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                         CLASS shift  100
                          SCON shift  173
                   simple_stmt shift  243
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                 compound_stmt shift  244
                       funcdef shift  233
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       if_stmt shift  230
                    while_stmt shift  231
                      for_stmt shift  232
                      classdef shift  234
                       if_head shift  78
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                           DEF shift  97
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                            IF shift  30
                         WHILE shift  32
                           FOR shift  44
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                         CLASS shift  100
                          SCON shift  173
                   simple_stmt shift  123
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                 compound_stmt shift  124
                       funcdef shift  233
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       if_stmt shift  230
                    while_stmt shift  231
                      for_stmt shift  232
                      classdef shift  234
                       if_head shift  78
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  240
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  77
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  235
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  238
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  239
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 10:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  132
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  236
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  246
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  245
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 14:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  228
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                         suite shift  237
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 15:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                        INDENT shift  1
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                   simple_stmt shift  229
                    small_stmt shift  82
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                      testlist shift  72
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 16:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                       NEWLINE shift  134
                          NAME shift  174
                      OPEN_PAR shift  17
                           DEL shift  45
                          PASS shift  216
                        RETURN shift  21
                         PRINT shift  42
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                    small_stmt shift  96
                    print_stmt shift  137
                        string shift  110
                          atom shift  55
                      testlist shift  75
                     expr_stmt shift  136
                      del_stmt shift  138
                     pass_stmt shift  139
                     flow_stmt shift  140
                   return_stmt shift  217
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 17:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp_2 ::= * testlist_gexp_2 COMMA test
          testlist_gexp_2 ::= * test COMMA test
          testlist_gexp_3 ::= * test COMMA
          testlist_gexp ::= * test
          testlist_gexp ::= * testlist_gexp_2
          testlist_gexp ::= * testlist_gexp_2 COMMA
          testlist_gexp ::= * testlist_gexp_3
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= OPEN_PAR * testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= OPEN_PAR * COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                         COMMA shift  115
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  108
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
               testlist_gexp_2 shift  98
               testlist_gexp_3 shift  195
                 testlist_gexp shift  113

State 18:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      testlist shift  224
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 19:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR * testlist CLOSE_PAR COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      testlist shift  103
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 20:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      testlist shift  91
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 21:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      testlist shift  218
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 22:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      testlist shift  222
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 23:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_2 COMMA
          testlist ::= * testlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      testlist shift  223
                          test shift  90
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    testlist_2 shift  116
                    testlist_3 shift  221

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                     CLOSE_PAR shift  200
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  203
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                       arglist shift  76
                      argument shift  204

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  208
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                 subscriptlist shift  99
                     subscript shift  207

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          listmaker ::= * listmaker NEWLINE
          listmaker ::= * listmaker INDENT
          listmaker ::= * listmaker DEDENT
          listmaker ::= * listmaker COMMA NEWLINE
          listmaker ::= * listmaker COMMA INDENT
          listmaker ::= * listmaker COMMA DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                         COMMA shift  94
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              CLOSE_RECT_BRACE shift  159
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  185
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     listmaker shift  73

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
             CLOSE_CURLY_BRACE shift  162
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  117
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     dictmaker shift  81

State 28:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  203
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                      argument shift  202

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          listmaker ::= listmaker COMMA * NEWLINE
          listmaker ::= listmaker COMMA * INDENT
          listmaker ::= listmaker COMMA * DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                       NEWLINE shift  179
                          NAME shift  174
                      OPEN_PAR shift  17
                        INDENT shift  180
                        DEDENT shift  181
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  178
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 30:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  114
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 31:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  175
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 32:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  85
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 33:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  176
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 34:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp_2 ::= testlist_gexp_2 COMMA * test
     (88) testlist_gexp ::= testlist_gexp_2 COMMA *
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  193
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     {default} reduce 88

State 35:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test
    (144) testlist ::= testlist_2 COMMA *

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  219
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     {default} reduce 144

State 36:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  177
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 37:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  84
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 38:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (141) testlist_3 ::= test COMMA *

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  220
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     {default} reduce 141

State 39:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp_2 ::= test COMMA * test
     (85) testlist_gexp_3 ::= test COMMA *
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  194
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     {default} reduce 85

State 40:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  105
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 41:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  119
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 42:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  225
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     {default} reduce 27

State 43:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                        LAMBDA shift  66
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          test shift  172
                       or_test shift  151
                       lambdef shift  152
                      and_test shift  153
                      not_test shift  154
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 44:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_2 COMMA
          exprlist ::= * exprlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      exprlist shift  89
                          expr shift  86
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    exprlist_2 shift  87
                    exprlist_3 shift  215

State 45:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_2 COMMA
          exprlist ::= * exprlist_3

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      exprlist shift  141
                          expr shift  86
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                    exprlist_2 shift  87
                    exprlist_3 shift  215

State 46:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                           NOT shift  46
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                      not_test shift  155
                    comparison shift  156
                          expr shift  71
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 47:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  188
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 48:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (148) exprlist_3 ::= expr COMMA *

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  214
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     {default} reduce 148

State 49:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr
    (151) exprlist ::= exprlist_2 COMMA *

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  128
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146
                     {default} reduce 151

State 50:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  191
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 51:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  157
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 52:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  192
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 53:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  189
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 54:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          expr shift  190
                      xor_expr shift  142
                      and_expr shift  143
                    shift_expr shift  144
                    arith_expr shift  79
                          term shift  109
                        factor shift  74
                         power shift  146

State 55:
     (90) power ::= atom *
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * dot_trailer_list
          power ::= atom * call_trailer_list
          power ::= atom * access_trailer_list
          call_trailer_list ::= * call_trailer
          call_trailer_list ::= * call_trailer_list call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer_list ::= * access_trailer
          access_trailer_list ::= * access_trailer_list access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE
          dot_trailer_list ::= * dot_trailer
          dot_trailer ::= * DOT NAME

                      OPEN_PAR shift  24
               DOUBLE_ASTERISK shift  59
               OPEN_RECT_BRACE shift  25
                           DOT shift  93
              dot_trailer_list shift  198
             call_trailer_list shift  70
           access_trailer_list shift  69
                  call_trailer shift  209
                access_trailer shift  210
                   dot_trailer shift  211
                     {default} reduce 90

State 56:
          arith_expr ::= arith_expr PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          term shift  83
                        factor shift  74
                         power shift  146

State 57:
          arith_expr ::= arith_expr MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                          term shift  88
                        factor shift  74
                         power shift  146

State 58:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  148
                         power shift  146

State 59:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  150
                         power shift  146

State 60:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  187
                         power shift  146

State 61:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  147
                         power shift  146

State 62:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  158
                         power shift  146

State 63:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  149
                         power shift  146

State 64:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  145
                         power shift  146

State 65:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_PAR COMMA CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  174
                      OPEN_PAR shift  17
                          PLUS shift  61
                         MINUS shift  58
                         TILDE shift  63
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  27
                          ICON shift  164
                          FCON shift  165
                          NONE shift  166
                          TRUE shift  167
                         FALSE shift  168
                          SCON shift  173
                        string shift  110
                          atom shift  55
                        factor shift  186
                         power shift  146

State 66:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  171
                         COLON shift  43
                   varargslist shift  92
                        fpdefs shift  107

State 67:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  171
                     CLOSE_PAR shift  126
                   varargslist shift  106
                        fpdefs shift  107

State 68:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  67
                    parameters shift  95

State 69:
     (94) power ::= atom access_trailer_list *
          access_trailer_list ::= access_trailer_list * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  25
                access_trailer shift  205
                     {default} reduce 94

State 70:
     (93) power ::= atom call_trailer_list *
          call_trailer_list ::= call_trailer_list * call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  24
                  call_trailer shift  199
                     {default} reduce 93

State 71:
     (60) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  51
               LESS_THAN_OR_EQ shift  47
                         EQ_EQ shift  53
                        NOT_EQ shift  54
                  GREATER_THAN shift  50
            GREATER_THAN_OR_EQ shift  52
                     {default} reduce 60

State 72:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  226
                     SEMICOLON shift  111
                   PLUS_EQUALS shift  22
                  MINUS_EQUALS shift  23
                        EQUALS shift  18

State 73:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test
          listmaker ::= listmaker * NEWLINE
          listmaker ::= listmaker * INDENT
          listmaker ::= listmaker * DEDENT
          listmaker ::= listmaker * COMMA NEWLINE
          listmaker ::= listmaker * COMMA INDENT
          listmaker ::= listmaker * COMMA DEDENT

                       NEWLINE shift  182
                         COMMA shift  29
                        INDENT shift  183
                        DEDENT shift  184
              CLOSE_RECT_BRACE shift  161

State 74:
     (74) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  62
                    SLASHSLASH shift  65
                       PERCENT shift  60
                     {default} reduce 74

State 75:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  22
                  MINUS_EQUALS shift  23
                        EQUALS shift  18

State 76:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  201
                         COMMA shift  28

State 77:
     (34) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  112
                          ELIF shift  40
                     {default} reduce 34

State 78:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (39) if_stmt ::= if_head *

                          ELSE shift  118
                          ELIF shift  37
                     {default} reduce 39

State 79:
     (70) shift_expr ::= arith_expr *
          arith_expr ::= arith_expr * PLUS term
          arith_expr ::= arith_expr * MINUS term

                          PLUS shift  56
                         MINUS shift  57
                     {default} reduce 70

State 80:
          classdef ::= CLASS NAME * OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS NAME * COLON suite

                         COLON shift  12
                      OPEN_PAR shift  19

State 81:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  41
             CLOSE_CURLY_BRACE shift  163

State 82:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  133
                     SEMICOLON shift  16

State 83:
     (72) arith_expr ::= arith_expr PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  64
                     {default} reduce 72

State 84:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  14

State 85:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  9

State 86:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (149) exprlist ::= expr *

                         COMMA shift  48
                     {default} reduce 149

State 87:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (150) exprlist ::= exprlist_2 *
          exprlist ::= exprlist_2 * COMMA

                         COMMA shift  49
                     {default} reduce 150

State 88:
     (73) arith_expr ::= arith_expr MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  64
                     {default} reduce 73

State 89:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  20

State 90:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (142) testlist ::= test *

                         COMMA shift  38
                     {default} reduce 142

State 91:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  5

State 92:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  31

State 93:
          dot_trailer ::= DOT * NAME

                          NAME shift  212

State 94:
          atom ::= OPEN_RECT_BRACE COMMA * CLOSE_RECT_BRACE

              CLOSE_RECT_BRACE shift  160

State 95:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  10

State 96:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  135

State 97:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  68

State 98:
          testlist_gexp_2 ::= testlist_gexp_2 * COMMA test
     (87) testlist_gexp ::= testlist_gexp_2 *
          testlist_gexp ::= testlist_gexp_2 * COMMA

                         COMMA shift  34
                     {default} reduce 87

State 99:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE

              CLOSE_RECT_BRACE shift  206

State 100:
          classdef ::= CLASS * NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS * NAME COLON suite

                          NAME shift  80

State 101:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  131

State 102:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  170

State 103:
          classdef ::= CLASS NAME OPEN_PAR testlist * CLOSE_PAR COLON suite

                     CLOSE_PAR shift  104

State 104:
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR * COLON suite

                         COLON shift  13

State 105:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  11

State 106:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  127

State 107:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  102
                     {default} reduce 7

State 108:
          testlist_gexp_2 ::= test * COMMA test
          testlist_gexp_3 ::= test * COMMA
     (86) testlist_gexp ::= test *

                         COMMA shift  39
                     {default} reduce 86

State 109:
     (71) arith_expr ::= term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  64
                     {default} reduce 71

State 110:
    (107) atom ::= string *
          string ::= string * SCON

                          SCON shift  169
                     {default} reduce 107

State 111:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  227

State 112:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  7

State 113:
          atom ::= OPEN_PAR testlist_gexp * CLOSE_PAR

                     CLOSE_PAR shift  196

State 114:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  6

State 115:
          atom ::= OPEN_PAR COMMA * CLOSE_PAR

                     CLOSE_PAR shift  197

State 116:
          testlist_2 ::= testlist_2 * COMMA test
    (143) testlist ::= testlist_2 *
          testlist ::= testlist_2 * COMMA

                         COMMA shift  35
                     {default} reduce 143

State 117:
          dictmaker ::= test * COLON test

                         COLON shift  36

State 118:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  8

State 119:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  33

State 120:
     (46) stmts ::= stmts simple_stmt *

                     {default} reduce 46

State 121:
     (48) stmts ::= stmts compound_stmt *

                     {default} reduce 48

State 122:
     (50) stmts ::= simple_stmt *

                     {default} reduce 50

State 123:
     (51) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 51

State 124:
     (53) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 53

State 125:
     (52) stmts ::= compound_stmt *

                     {default} reduce 52

State 126:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

State 127:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 128:
    (146) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 146

State 129:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 130:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 131:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 132:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 133:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 134:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 135:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 136:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 137:
     (16) small_stmt ::= print_stmt *

                     {default} reduce 16

State 138:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 139:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 140:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 141:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 142:
     (67) expr ::= xor_expr *

                     {default} reduce 67

State 143:
     (68) xor_expr ::= and_expr *

                     {default} reduce 68

State 144:
     (69) and_expr ::= shift_expr *

                     {default} reduce 69

State 145:
     (75) term ::= term ASTERISK factor *

                     {default} reduce 75

State 146:
     (79) factor ::= power *

                     {default} reduce 79

State 147:
     (80) factor ::= PLUS factor *

                     {default} reduce 80

State 148:
     (81) factor ::= MINUS factor *

                     {default} reduce 81

State 149:
     (82) factor ::= TILDE factor *

                     {default} reduce 82

State 150:
     (91) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 91

State 151:
     (54) test ::= or_test *

                     {default} reduce 54

State 152:
     (55) test ::= lambdef *

                     {default} reduce 55

State 153:
     (56) or_test ::= and_test *

                     {default} reduce 56

State 154:
     (57) and_test ::= not_test *

                     {default} reduce 57

State 155:
     (58) not_test ::= NOT not_test *

                     {default} reduce 58

State 156:
     (59) not_test ::= comparison *

                     {default} reduce 59

State 157:
     (61) comparison ::= expr LESS_THAN expr *

                     {default} reduce 61

State 158:
     (76) term ::= factor SLASH factor *

                     {default} reduce 76

State 159:
     (97) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 97

State 160:
     (98) atom ::= OPEN_RECT_BRACE COMMA CLOSE_RECT_BRACE *

                     {default} reduce 98

State 161:
     (99) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 99

State 162:
    (100) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 100

State 163:
    (101) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 101

State 164:
    (102) atom ::= ICON *

                     {default} reduce 102

State 165:
    (103) atom ::= FCON *

                     {default} reduce 103

State 166:
    (104) atom ::= NONE *

                     {default} reduce 104

State 167:
    (105) atom ::= TRUE *

                     {default} reduce 105

State 168:
    (106) atom ::= FALSE *

                     {default} reduce 106

State 169:
    (137) string ::= string SCON *

                     {default} reduce 137

State 170:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 171:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 172:
    (116) lambdef ::= LAMBDA COLON test *

                     {default} reduce 116

State 173:
    (136) string ::= SCON *

                     {default} reduce 136

State 174:
    (138) atom ::= NAME *

                     {default} reduce 138

State 175:
    (117) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 117

State 176:
    (130) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 130

State 177:
    (129) dictmaker ::= test COLON test *

                     {default} reduce 129

State 178:
    (109) listmaker ::= listmaker COMMA test *

                     {default} reduce 109

State 179:
    (113) listmaker ::= listmaker COMMA NEWLINE *

                     {default} reduce 113

State 180:
    (114) listmaker ::= listmaker COMMA INDENT *

                     {default} reduce 114

State 181:
    (115) listmaker ::= listmaker COMMA DEDENT *

                     {default} reduce 115

State 182:
    (110) listmaker ::= listmaker NEWLINE *

                     {default} reduce 110

State 183:
    (111) listmaker ::= listmaker INDENT *

                     {default} reduce 111

State 184:
    (112) listmaker ::= listmaker DEDENT *

                     {default} reduce 112

State 185:
    (108) listmaker ::= test *

                     {default} reduce 108

State 186:
     (77) term ::= factor SLASHSLASH factor *

                     {default} reduce 77

State 187:
     (78) term ::= factor PERCENT factor *

                     {default} reduce 78

State 188:
     (62) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 62

State 189:
     (63) comparison ::= expr EQ_EQ expr *

                     {default} reduce 63

State 190:
     (64) comparison ::= expr NOT_EQ expr *

                     {default} reduce 64

State 191:
     (65) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 65

State 192:
     (66) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 66

State 193:
     (83) testlist_gexp_2 ::= testlist_gexp_2 COMMA test *

                     {default} reduce 83

State 194:
     (84) testlist_gexp_2 ::= test COMMA test *

                     {default} reduce 84

State 195:
     (89) testlist_gexp ::= testlist_gexp_3 *

                     {default} reduce 89

State 196:
     (95) atom ::= OPEN_PAR testlist_gexp CLOSE_PAR *

                     {default} reduce 95

State 197:
     (96) atom ::= OPEN_PAR COMMA CLOSE_PAR *

                     {default} reduce 96

State 198:
     (92) power ::= atom dot_trailer_list *

                     {default} reduce 92

State 199:
    (119) call_trailer_list ::= call_trailer_list call_trailer *

                     {default} reduce 119

State 200:
    (120) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 120

State 201:
    (121) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 121

State 202:
    (134) arglist ::= arglist COMMA argument *

                     {default} reduce 134

State 203:
    (135) argument ::= test *

                     {default} reduce 135

State 204:
    (133) arglist ::= argument *

                     {default} reduce 133

State 205:
    (123) access_trailer_list ::= access_trailer_list access_trailer *

                     {default} reduce 123

State 206:
    (124) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 124

State 207:
    (127) subscriptlist ::= subscript *

                     {default} reduce 127

State 208:
    (128) subscript ::= test *

                     {default} reduce 128

State 209:
    (118) call_trailer_list ::= call_trailer *

                     {default} reduce 118

State 210:
    (122) access_trailer_list ::= access_trailer *

                     {default} reduce 122

State 211:
    (125) dot_trailer_list ::= dot_trailer *

                     {default} reduce 125

State 212:
    (126) dot_trailer ::= DOT NAME *

                     {default} reduce 126

State 213:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 214:
    (147) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 147

State 215:
    (152) exprlist ::= exprlist_3 *

                     {default} reduce 152

State 216:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 217:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 218:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 219:
    (139) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 139

State 220:
    (140) testlist_2 ::= test COMMA test *

                     {default} reduce 140

State 221:
    (145) testlist ::= testlist_3 *

                     {default} reduce 145

State 222:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 223:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 224:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 225:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 226:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 227:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 228:
     (42) suite ::= simple_stmt *

                     {default} reduce 42

State 229:
     (43) suite ::= NEWLINE simple_stmt *

                     {default} reduce 43

State 230:
     (29) compound_stmt ::= if_stmt *

                     {default} reduce 29

State 231:
     (30) compound_stmt ::= while_stmt *

                     {default} reduce 30

State 232:
     (31) compound_stmt ::= for_stmt *

                     {default} reduce 31

State 233:
     (32) compound_stmt ::= funcdef *

                     {default} reduce 32

State 234:
     (33) compound_stmt ::= classdef *

                     {default} reduce 33

State 235:
     (35) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 35

State 236:
     (36) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 36

State 237:
     (37) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 37

State 238:
     (38) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 38

State 239:
     (40) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 40

State 240:
     (41) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 41

State 241:
     (44) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 44

State 242:
     (45) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 45

State 243:
     (47) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 47

State 244:
     (49) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 49

State 245:
    (131) classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite *

                     {default} reduce 131

State 246:
    (132) classdef ::= CLASS NAME COLON suite *

                     {default} reduce 132

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: DOUBLE_ASTERISK
   41: OPEN_RECT_BRACE
   42: CLOSE_RECT_BRACE
   43: OPEN_CURLY_BRACE
   44: CLOSE_CURLY_BRACE
   45: ICON
   46: FCON
   47: NONE
   48: TRUE
   49: FALSE
   50: LAMBDA
   51: DOT
   52: CLASS
   53: SCON
   54: error:
   55: simple_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   56: small_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   57: print_stmt: PRINT
   58: string: SCON
   59: atom: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   60: single_input: EOI NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA CLASS SCON
   61: compound_stmt: DEF IF WHILE FOR CLASS
   62: funcdef: DEF
   63: parameters: OPEN_PAR
   64: suite: NEWLINE NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   65: varargslist: NAME
   66: fpdefs: NAME
   67: testlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   68: expr_stmt: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   69: del_stmt: DEL
   70: pass_stmt: PASS
   71: flow_stmt: RETURN
   72: exprlist: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   73: return_stmt: RETURN
   74: test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   75: if_stmt: IF
   76: while_stmt: WHILE
   77: for_stmt: FOR
   78: classdef: CLASS
   79: if_head: IF
   80: stmts: NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA CLASS SCON
   81: or_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   82: lambdef: LAMBDA
   83: and_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   84: not_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   85: comparison: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   86: expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   87: xor_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   88: and_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   89: shift_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   90: arith_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   91: term: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   92: factor: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   93: power: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   94: testlist_gexp_2: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   95: testlist_gexp_3: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   96: testlist_gexp: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   97: dot_trailer_list: DOT
   98: call_trailer_list: OPEN_PAR
   99: access_trailer_list: OPEN_RECT_BRACE
  100: listmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  101: dictmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  102: call_trailer: OPEN_PAR
  103: arglist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  104: access_trailer: OPEN_RECT_BRACE
  105: subscriptlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  106: dot_trailer: DOT
  107: subscript: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  108: argument: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  109: testlist_2: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  110: testlist_3: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  111: exprlist_2: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
  112: exprlist_3: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
