State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  182
                       NEWLINE shift  164
                           DEF shift  85
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                            IF shift  36
                         WHILE shift  32
                           FOR shift  40
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  157
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                  single_input accept
                 compound_stmt shift  89
                       funcdef shift  142
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       if_stmt shift  139
                    while_stmt shift  140
                      for_stmt shift  141
                       if_head shift  72
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  85
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                            IF shift  36
                         WHILE shift  32
                           FOR shift  40
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  163
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                 compound_stmt shift  167
                       funcdef shift  142
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       if_stmt shift  139
                    while_stmt shift  140
                      for_stmt shift  141
                       if_head shift  72
                         stmts shift  2
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  85
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                            IF shift  36
                         WHILE shift  32
                           FOR shift  40
                        DEDENT shift  156
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  161
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                 compound_stmt shift  162
                       funcdef shift  142
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       if_stmt shift  139
                    while_stmt shift  140
                      for_stmt shift  141
                       if_head shift  72
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  85
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                            IF shift  36
                         WHILE shift  32
                           FOR shift  40
                        DEDENT shift  158
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  159
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                 compound_stmt shift  160
                       funcdef shift  142
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       if_stmt shift  139
                    while_stmt shift  140
                      for_stmt shift  141
                       if_head shift  72
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  85
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                            IF shift  36
                         WHILE shift  32
                           FOR shift  40
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  165
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                 compound_stmt shift  166
                       funcdef shift  142
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       if_stmt shift  139
                    while_stmt shift  140
                      for_stmt shift  141
                       if_head shift  72
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  153
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  147
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  151
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  155
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  150
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 10:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  152
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  145
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  135
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                         suite shift  73
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                        INDENT shift  1
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                   simple_stmt shift  137
                    small_stmt shift  76
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                      testlist shift  68
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 14:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  148
                          NAME shift  176
                           DEL shift  41
                          PASS shift  117
                        RETURN shift  17
                         PRINT shift  37
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                    small_stmt shift  96
                    print_stmt shift  102
                        string shift  97
                          atom shift  61
                      testlist shift  71
                     expr_stmt shift  144
                      del_stmt shift  107
                     pass_stmt shift  108
                     flow_stmt shift  109
                   return_stmt shift  118
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 15:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      testlist shift  128
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 16:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      testlist shift  126
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 17:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      testlist shift  120
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 18:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      testlist shift  86
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 19:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      testlist shift  130
                          test shift  104
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    testlist_2 shift  99
                    testlist_3 shift  124

State 20:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                     CLOSE_PAR shift  192
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  196
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                       arglist shift  75
                      argument shift  197

State 21:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscriptlist ::= * subscriptlist COMMA subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  202
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                 subscriptlist shift  78
                     subscript shift  203

State 22:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              CLOSE_RECT_BRACE shift  186
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  190
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                     listmaker shift  77

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
             CLOSE_CURLY_BRACE shift  180
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  83
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                     dictmaker shift  74

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          subscriptlist ::= subscriptlist COMMA * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  202
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                     subscript shift  201

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  196
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                      argument shift  195

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  174
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  181
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 28:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  179
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  178
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  95
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 31:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  189
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 32:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  80
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 33:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  90
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 34:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  100
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 35:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  143
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 36:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  94
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 37:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  132
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                     {default} reduce 27

State 38:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (118) testlist_3 ::= test COMMA *

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  123
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                     {default} reduce 118

State 39:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                        LAMBDA shift  62
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          test shift  122
                       or_test shift  138
                       lambdef shift  136
                      and_test shift  131
                      not_test shift  129
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 40:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      exprlist shift  84
                          expr shift  88
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    exprlist_2 shift  105
                    exprlist_3 shift  116

State 41:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      exprlist shift  111
                          expr shift  88
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                    exprlist_2 shift  105
                    exprlist_3 shift  116

State 42:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                      not_test shift  127
                    comparison shift  125
                          expr shift  67
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 43:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  213
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 44:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  210
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 45:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  113
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 46:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (124) exprlist_3 ::= expr COMMA *

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  115
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209
                     {default} reduce 124

State 47:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  121
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 48:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  106
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 49:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  212
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 50:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          expr shift  208
                      xor_expr shift  119
                      and_expr shift  114
                    shift_expr shift  112
                    arith_expr shift  110
                          term shift  70
                        factor shift  69
                         power shift  209

State 51:
          arith_expr ::= term PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          term shift  98
                        factor shift  69
                         power shift  209

State 52:
          arith_expr ::= term MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                          term shift  87
                        factor shift  69
                         power shift  209

State 53:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  183
                         power shift  209

State 54:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  211
                         power shift  209

State 55:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  207
                         power shift  209

State 56:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  206
                         power shift  209

State 57:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  200
                         power shift  209

State 58:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  194
                         power shift  209

State 59:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  188
                         power shift  209

State 60:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  176
                          PLUS shift  55
                         MINUS shift  56
                         TILDE shift  57
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  173
                          FCON shift  169
                          SCON shift  175
                        string shift  97
                          atom shift  61
                        factor shift  185
                         power shift  209

State 61:
     (83) power ::= atom *
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * call_trailer_list
          power ::= atom * access_trailer_list
          call_trailer_list ::= * call_trailer
          call_trailer_list ::= * call_trailer_list call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer_list ::= * access_trailer
          access_trailer_list ::= * access_trailer_list access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

                      OPEN_PAR shift  20
               DOUBLE_ASTERISK shift  58
               OPEN_RECT_BRACE shift  21
             call_trailer_list shift  66
           access_trailer_list shift  65
                  call_trailer shift  204
                access_trailer shift  205
                     {default} reduce 83

State 62:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  172
                         COLON shift  26
                   varargslist shift  82
                        fpdefs shift  93

State 63:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  172
                     CLOSE_PAR shift  168
                   varargslist shift  79
                        fpdefs shift  93

State 64:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  63
                    parameters shift  81

State 65:
     (86) power ::= atom access_trailer_list *
          access_trailer_list ::= access_trailer_list * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  21
                access_trailer shift  198
                     {default} reduce 86

State 66:
     (85) power ::= atom call_trailer_list *
          call_trailer_list ::= call_trailer_list * call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  20
                  call_trailer shift  191
                     {default} reduce 85

State 67:
     (60) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  47
               LESS_THAN_OR_EQ shift  50
                         EQ_EQ shift  44
                        NOT_EQ shift  49
                  GREATER_THAN shift  43
            GREATER_THAN_OR_EQ shift  48
                     {default} reduce 60

State 68:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  133
                     SEMICOLON shift  92
                   PLUS_EQUALS shift  16
                  MINUS_EQUALS shift  15
                        EQUALS shift  19

State 69:
     (74) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  59
                    SLASHSLASH shift  53
                       PERCENT shift  60
                     {default} reduce 74

State 70:
     (71) arith_expr ::= term *
          arith_expr ::= term * PLUS term
          arith_expr ::= term * MINUS term
          term ::= term * ASTERISK factor

                          PLUS shift  51
                         MINUS shift  52
                      ASTERISK shift  54
                     {default} reduce 71

State 71:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  16
                  MINUS_EQUALS shift  15
                        EQUALS shift  19

State 72:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (39) if_stmt ::= if_head *

                          ELSE shift  103
                          ELIF shift  33
                     {default} reduce 39

State 73:
     (34) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  101
                          ELIF shift  34
                     {default} reduce 34

State 74:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  30
             CLOSE_CURLY_BRACE shift  177

State 75:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  193
                         COMMA shift  25

State 76:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  149
                     SEMICOLON shift  14

State 77:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test

                         COMMA shift  31
              CLOSE_RECT_BRACE shift  187

State 78:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE
          subscriptlist ::= subscriptlist * COMMA subscript

                         COMMA shift  24
              CLOSE_RECT_BRACE shift  199

State 79:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  184

State 80:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  5

State 81:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  10

State 82:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  29

State 83:
          dictmaker ::= test * COLON test

                         COLON shift  27

State 84:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  18

State 85:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  64

State 86:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  8

State 87:
     (73) arith_expr ::= term MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  54
                     {default} reduce 73

State 88:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (125) exprlist ::= expr *

                         COMMA shift  46
                     {default} reduce 125

State 89:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  154

State 90:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  9

State 91:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  171

State 92:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  134

State 93:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  91
                     {default} reduce 7

State 94:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  12

State 95:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  28

State 96:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  146

State 97:
     (93) atom ::= string *
          string ::= string * SCON

                          SCON shift  170
                     {default} reduce 93

State 98:
     (72) arith_expr ::= term PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  54
                     {default} reduce 72

State 99:
          testlist_2 ::= testlist_2 * COMMA test
    (120) testlist ::= testlist_2 *

                         COMMA shift  39
                     {default} reduce 120

State 100:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  6

State 101:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  11

State 102:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  35
                     {default} reduce 16

State 103:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  7

State 104:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (119) testlist ::= test *

                         COMMA shift  38
                     {default} reduce 119

State 105:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (126) exprlist ::= exprlist_2 *

                         COMMA shift  45
                     {default} reduce 126

State 106:
     (66) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 66

State 107:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 108:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 109:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 110:
     (70) shift_expr ::= arith_expr *

                     {default} reduce 70

State 111:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 112:
     (69) and_expr ::= shift_expr *

                     {default} reduce 69

State 113:
    (122) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 122

State 114:
     (68) xor_expr ::= and_expr *

                     {default} reduce 68

State 115:
    (123) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 123

State 116:
    (127) exprlist ::= exprlist_3 *

                     {default} reduce 127

State 117:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 118:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 119:
     (67) expr ::= xor_expr *

                     {default} reduce 67

State 120:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 121:
     (61) comparison ::= expr LESS_THAN expr *

                     {default} reduce 61

State 122:
    (116) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 116

State 123:
    (117) testlist_2 ::= test COMMA test *

                     {default} reduce 117

State 124:
    (121) testlist ::= testlist_3 *

                     {default} reduce 121

State 125:
     (59) not_test ::= comparison *

                     {default} reduce 59

State 126:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 127:
     (58) not_test ::= NOT not_test *

                     {default} reduce 58

State 128:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 129:
     (57) and_test ::= not_test *

                     {default} reduce 57

State 130:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 131:
     (56) or_test ::= and_test *

                     {default} reduce 56

State 132:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 133:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 134:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 135:
     (42) suite ::= simple_stmt *

                     {default} reduce 42

State 136:
     (55) test ::= lambdef *

                     {default} reduce 55

State 137:
     (43) suite ::= NEWLINE simple_stmt *

                     {default} reduce 43

State 138:
     (54) test ::= or_test *

                     {default} reduce 54

State 139:
     (30) compound_stmt ::= if_stmt *

                     {default} reduce 30

State 140:
     (31) compound_stmt ::= while_stmt *

                     {default} reduce 31

State 141:
     (32) compound_stmt ::= for_stmt *

                     {default} reduce 32

State 142:
     (33) compound_stmt ::= funcdef *

                     {default} reduce 33

State 143:
     (29) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 29

State 144:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 145:
     (35) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 35

State 146:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 147:
     (36) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 36

State 148:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 149:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 150:
     (37) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 37

State 151:
     (38) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 38

State 152:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 153:
     (40) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 40

State 154:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 155:
     (41) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 41

State 156:
     (44) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 44

State 157:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 158:
     (45) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 45

State 159:
     (47) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 47

State 160:
     (49) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 49

State 161:
     (46) stmts ::= stmts simple_stmt *

                     {default} reduce 46

State 162:
     (48) stmts ::= stmts compound_stmt *

                     {default} reduce 48

State 163:
     (50) stmts ::= simple_stmt *

                     {default} reduce 50

State 164:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 165:
     (51) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 51

State 166:
     (53) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 53

State 167:
     (52) stmts ::= compound_stmt *

                     {default} reduce 52

State 168:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

State 169:
     (92) atom ::= FCON *

                     {default} reduce 92

State 170:
    (114) string ::= string SCON *

                     {default} reduce 114

State 171:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 172:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 173:
     (91) atom ::= ICON *

                     {default} reduce 91

State 174:
     (96) lambdef ::= LAMBDA COLON test *

                     {default} reduce 96

State 175:
    (113) string ::= SCON *

                     {default} reduce 113

State 176:
    (115) atom ::= NAME *

                     {default} reduce 115

State 177:
     (90) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 90

State 178:
     (97) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 97

State 179:
    (109) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 109

State 180:
     (89) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 89

State 181:
    (108) dictmaker ::= test COLON test *

                     {default} reduce 108

State 182:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 183:
     (77) term ::= factor SLASHSLASH factor *

                     {default} reduce 77

State 184:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 185:
     (78) term ::= factor PERCENT factor *

                     {default} reduce 78

State 186:
     (87) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 87

State 187:
     (88) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 88

State 188:
     (76) term ::= factor SLASH factor *

                     {default} reduce 76

State 189:
     (95) listmaker ::= listmaker COMMA test *

                     {default} reduce 95

State 190:
     (94) listmaker ::= test *

                     {default} reduce 94

State 191:
     (99) call_trailer_list ::= call_trailer_list call_trailer *

                     {default} reduce 99

State 192:
    (100) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 100

State 193:
    (101) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 101

State 194:
     (84) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 84

State 195:
    (111) arglist ::= arglist COMMA argument *

                     {default} reduce 111

State 196:
    (112) argument ::= test *

                     {default} reduce 112

State 197:
    (110) arglist ::= argument *

                     {default} reduce 110

State 198:
    (103) access_trailer_list ::= access_trailer_list access_trailer *

                     {default} reduce 103

State 199:
    (104) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 104

State 200:
     (82) factor ::= TILDE factor *

                     {default} reduce 82

State 201:
    (106) subscriptlist ::= subscriptlist COMMA subscript *

                     {default} reduce 106

State 202:
    (107) subscript ::= test *

                     {default} reduce 107

State 203:
    (105) subscriptlist ::= subscript *

                     {default} reduce 105

State 204:
     (98) call_trailer_list ::= call_trailer *

                     {default} reduce 98

State 205:
    (102) access_trailer_list ::= access_trailer *

                     {default} reduce 102

State 206:
     (81) factor ::= MINUS factor *

                     {default} reduce 81

State 207:
     (80) factor ::= PLUS factor *

                     {default} reduce 80

State 208:
     (62) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 62

State 209:
     (79) factor ::= power *

                     {default} reduce 79

State 210:
     (63) comparison ::= expr EQ_EQ expr *

                     {default} reduce 63

State 211:
     (75) term ::= term ASTERISK factor *

                     {default} reduce 75

State 212:
     (64) comparison ::= expr NOT_EQ expr *

                     {default} reduce 64

State 213:
     (65) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 65

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: DOUBLE_ASTERISK
   41: OPEN_RECT_BRACE
   42: CLOSE_RECT_BRACE
   43: OPEN_CURLY_BRACE
   44: CLOSE_CURLY_BRACE
   45: ICON
   46: FCON
   47: LAMBDA
   48: SCON
   49: error:
   50: simple_stmt: NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   51: small_stmt: NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   52: print_stmt: PRINT
   53: string: SCON
   54: atom: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   55: single_input: EOI NEWLINE DEF NAME DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   56: compound_stmt: DEF IF WHILE FOR
   57: funcdef: DEF
   58: parameters: OPEN_PAR
   59: suite: NEWLINE NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   60: varargslist: NAME
   61: fpdefs: NAME
   62: testlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   63: expr_stmt: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   64: del_stmt: DEL
   65: pass_stmt: PASS
   66: flow_stmt: RETURN
   67: exprlist: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   68: return_stmt: RETURN
   69: test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   70: if_stmt: IF
   71: while_stmt: WHILE
   72: for_stmt: FOR
   73: if_head: IF
   74: stmts: NEWLINE DEF NAME DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   75: or_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   76: lambdef: LAMBDA
   77: and_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   78: not_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   79: comparison: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   80: expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   81: xor_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   82: and_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   83: shift_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   84: arith_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   85: term: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   86: factor: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   87: power: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   88: call_trailer_list: OPEN_PAR
   89: access_trailer_list: OPEN_RECT_BRACE
   90: listmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   91: dictmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   92: call_trailer: OPEN_PAR
   93: arglist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   94: access_trailer: OPEN_RECT_BRACE
   95: subscriptlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   96: subscript: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   97: argument: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   98: testlist_2: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   99: testlist_3: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  100: exprlist_2: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
  101: exprlist_3: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
