
# special forms 01

# 'quote' returns the first argument after prebinding but before evaluation

(quote (add 1 2));

# result: (`add 1 2)

# 'eval' is the antidote to quote

(eval (quote (add 1 2)));

# result: 3

# 'raw' returns the first argument without performing any prebinding or evaluation
# what you get from raw is essentially source code

(raw (add 1 2))

# result: (add 1 2)

# 'bind' converts the output of raw into prebound code

(bind (raw (add 1 2)));

# when combined with eval, you get the full JXON evaluation pipeline

(eval (bind (raw (add 1 2))));

# result: 3

# the special form 'pass' simply passes the value through (can be used
# to evaluate forms which return functions without calling the
# functions and without using get)

(set fn (lambda [x] 1));

(fn);

# result: 1

(pass fn);

# result: fn`0x500d50

# 'nop' gets excised when binding is performed... upon binding, the
# first argument to nop replaces it

(quote (nop (a b c)))

# result: [ (`resolve a), (`resolve b),
#           (`resolve c)]


