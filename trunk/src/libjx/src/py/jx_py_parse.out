State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  115
                       NEWLINE shift  117
                           DEF shift  98
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                            IF shift  38
                         WHILE shift  39
                           FOR shift  42
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  118
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                  single_input accept
                 compound_stmt shift  105
                       funcdef shift  212
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       if_stmt shift  209
                    while_stmt shift  210
                      for_stmt shift  211
                       if_head shift  77
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  98
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                            IF shift  38
                         WHILE shift  39
                           FOR shift  42
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  110
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                 compound_stmt shift  113
                       funcdef shift  212
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       if_stmt shift  209
                    while_stmt shift  210
                      for_stmt shift  211
                       if_head shift  77
                         stmts shift  2
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  98
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                            IF shift  38
                         WHILE shift  39
                           FOR shift  42
                        DEDENT shift  219
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  223
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                 compound_stmt shift  109
                       funcdef shift  212
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       if_stmt shift  209
                    while_stmt shift  210
                      for_stmt shift  211
                       if_head shift  77
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  98
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                            IF shift  38
                         WHILE shift  39
                           FOR shift  42
                        DEDENT shift  220
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  221
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                 compound_stmt shift  222
                       funcdef shift  212
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       if_stmt shift  209
                    while_stmt shift  210
                      for_stmt shift  211
                       if_head shift  77
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  98
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                            IF shift  38
                         WHILE shift  39
                           FOR shift  42
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  111
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                 compound_stmt shift  112
                       funcdef shift  212
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       if_stmt shift  209
                    while_stmt shift  210
                      for_stmt shift  211
                       if_head shift  77
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  217
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  76
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 7:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  120
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  215
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  214
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 10:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  213
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  218
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  207
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                         suite shift  216
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                        INDENT shift  1
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                   simple_stmt shift  208
                    small_stmt shift  75
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                      testlist shift  70
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 14:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  122
                          NAME shift  154
                      OPEN_PAR shift  26
                           DEL shift  41
                          PASS shift  195
                        RETURN shift  19
                         PRINT shift  37
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                    small_stmt shift  88
                    print_stmt shift  106
                        string shift  104
                          atom shift  62
                      testlist shift  72
                     expr_stmt shift  124
                      del_stmt shift  188
                     pass_stmt shift  189
                     flow_stmt shift  190
                   return_stmt shift  196
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 15:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      testlist shift  203
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 16:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      testlist shift  89
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 17:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      testlist shift  202
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 18:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      testlist shift  201
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 19:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      testlist shift  197
                          test shift  91
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    testlist_2 shift  93
                    testlist_3 shift  200

State 20:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                     CLOSE_PAR shift  171
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  174
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                       arglist shift  73
                      argument shift  175

State 21:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscriptlist ::= * subscriptlist COMMA subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  179
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                 subscriptlist shift  79
                     subscript shift  180

State 22:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          listmaker ::= * listmaker NEWLINE
          listmaker ::= * listmaker INDENT
          listmaker ::= * listmaker DEDENT
          listmaker ::= * listmaker COMMA NEWLINE
          listmaker ::= * listmaker COMMA INDENT
          listmaker ::= * listmaker COMMA DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              CLOSE_RECT_BRACE shift  143
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  165
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                     listmaker shift  69

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
             CLOSE_CURLY_BRACE shift  145
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  92
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                     dictmaker shift  78

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          subscriptlist ::= subscriptlist COMMA * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  179
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                     subscript shift  178

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  174
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                      argument shift  173

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp ::= * test
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= OPEN_PAR * testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  168
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                 testlist_gexp shift  108

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          listmaker ::= listmaker COMMA * NEWLINE
          listmaker ::= listmaker COMMA * INDENT
          listmaker ::= listmaker COMMA * DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                       NEWLINE shift  159
                          NAME shift  154
                      OPEN_PAR shift  26
                        INDENT shift  160
                        DEDENT shift  161
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  158
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 28:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  152
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 29:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  107
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  94
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 31:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  125
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 32:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  155
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 33:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  156
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 34:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  198
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 35:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (126) testlist_3 ::= test COMMA *

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  199
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                     {default} reduce 126

State 36:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  157
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 37:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  204
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                     {default} reduce 27

State 38:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  85
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 39:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  83
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 40:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                        LAMBDA shift  63
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          test shift  81
                       or_test shift  126
                       lambdef shift  127
                      and_test shift  128
                      not_test shift  129
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 41:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      exprlist shift  191
                          expr shift  95
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    exprlist_2 shift  97
                    exprlist_3 shift  194

State 42:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      exprlist shift  87
                          expr shift  95
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                    exprlist_2 shift  97
                    exprlist_3 shift  194

State 43:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                           NOT shift  43
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                      not_test shift  130
                    comparison shift  131
                          expr shift  68
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 44:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  183
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 45:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  192
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 46:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (132) exprlist_3 ::= expr COMMA *

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  193
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137
                     {default} reduce 132

State 47:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  187
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 48:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  186
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 49:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  185
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 50:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  184
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 51:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          expr shift  132
                      xor_expr shift  133
                      and_expr shift  134
                    shift_expr shift  135
                    arith_expr shift  74
                          term shift  86
                        factor shift  71
                         power shift  137

State 52:
          arith_expr ::= arith_expr MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          term shift  102
                        factor shift  71
                         power shift  137

State 53:
          arith_expr ::= arith_expr PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                          term shift  99
                        factor shift  71
                         power shift  137

State 54:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  139
                         power shift  137

State 55:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  140
                         power shift  137

State 56:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  136
                         power shift  137

State 57:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  141
                         power shift  137

State 58:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  166
                         power shift  137

State 59:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  167
                         power shift  137

State 60:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  142
                         power shift  137

State 61:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  154
                      OPEN_PAR shift  26
                          PLUS shift  61
                         MINUS shift  54
                         TILDE shift  55
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  147
                          FCON shift  148
                          SCON shift  153
                        string shift  104
                          atom shift  62
                        factor shift  138
                         power shift  137

State 62:
     (84) power ::= atom *
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * call_trailer_list
          power ::= atom * access_trailer_list
          call_trailer_list ::= * call_trailer
          call_trailer_list ::= * call_trailer_list call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer_list ::= * access_trailer
          access_trailer_list ::= * access_trailer_list access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

                      OPEN_PAR shift  20
               DOUBLE_ASTERISK shift  57
               OPEN_RECT_BRACE shift  21
             call_trailer_list shift  65
           access_trailer_list shift  66
                  call_trailer shift  181
                access_trailer shift  182
                     {default} reduce 84

State 63:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  151
                         COLON shift  28
                   varargslist shift  96
                        fpdefs shift  101

State 64:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  151
                     CLOSE_PAR shift  114
                   varargslist shift  103
                        fpdefs shift  101

State 65:
     (86) power ::= atom call_trailer_list *
          call_trailer_list ::= call_trailer_list * call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  20
                  call_trailer shift  170
                     {default} reduce 86

State 66:
     (87) power ::= atom access_trailer_list *
          access_trailer_list ::= access_trailer_list * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  21
                access_trailer shift  176
                     {default} reduce 87

State 67:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  64
                    parameters shift  82

State 68:
     (60) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  51
               LESS_THAN_OR_EQ shift  44
                         EQ_EQ shift  50
                        NOT_EQ shift  49
                  GREATER_THAN shift  48
            GREATER_THAN_OR_EQ shift  47
                     {default} reduce 60

State 69:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test
          listmaker ::= listmaker * NEWLINE
          listmaker ::= listmaker * INDENT
          listmaker ::= listmaker * DEDENT
          listmaker ::= listmaker * COMMA NEWLINE
          listmaker ::= listmaker * COMMA INDENT
          listmaker ::= listmaker * COMMA DEDENT

                       NEWLINE shift  162
                         COMMA shift  27
                        INDENT shift  163
                        DEDENT shift  164
              CLOSE_RECT_BRACE shift  144

State 70:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  205
                     SEMICOLON shift  90
                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  17
                        EQUALS shift  15

State 71:
     (74) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  60
                    SLASHSLASH shift  58
                       PERCENT shift  59
                     {default} reduce 74

State 72:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  17
                        EQUALS shift  15

State 73:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  172
                         COMMA shift  25

State 74:
     (70) shift_expr ::= arith_expr *
          arith_expr ::= arith_expr * PLUS term
          arith_expr ::= arith_expr * MINUS term

                          PLUS shift  53
                         MINUS shift  52
                     {default} reduce 70

State 75:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  121
                     SEMICOLON shift  14

State 76:
     (34) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  84
                          ELIF shift  40
                     {default} reduce 34

State 77:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (39) if_stmt ::= if_head *

                          ELSE shift  80
                          ELIF shift  29
                     {default} reduce 39

State 78:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  30
             CLOSE_CURLY_BRACE shift  146

State 79:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE
          subscriptlist ::= subscriptlist * COMMA subscript

                         COMMA shift  24
              CLOSE_RECT_BRACE shift  177

State 80:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  12

State 81:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  9

State 82:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  7

State 83:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  5

State 84:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  10

State 85:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  6

State 86:
     (71) arith_expr ::= term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  56
                     {default} reduce 71

State 87:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  16

State 88:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  123

State 89:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  11

State 90:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  206

State 91:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (127) testlist ::= test *

                         COMMA shift  35
                     {default} reduce 127

State 92:
          dictmaker ::= test * COLON test

                         COLON shift  36

State 93:
          testlist_2 ::= testlist_2 * COMMA test
    (128) testlist ::= testlist_2 *

                         COMMA shift  34
                     {default} reduce 128

State 94:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  33

State 95:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (133) exprlist ::= expr *

                         COMMA shift  46
                     {default} reduce 133

State 96:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  32

State 97:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (134) exprlist ::= exprlist_2 *

                         COMMA shift  45
                     {default} reduce 134

State 98:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  67

State 99:
     (72) arith_expr ::= arith_expr PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  56
                     {default} reduce 72

State 100:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  150

State 101:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  100
                     {default} reduce 7

State 102:
     (73) arith_expr ::= arith_expr MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  56
                     {default} reduce 73

State 103:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  116

State 104:
     (95) atom ::= string *
          string ::= string * SCON

                          SCON shift  149
                     {default} reduce 95

State 105:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  119

State 106:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  31
                     {default} reduce 16

State 107:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  8

State 108:
          atom ::= OPEN_PAR testlist_gexp * CLOSE_PAR

                     CLOSE_PAR shift  169

State 109:
     (48) stmts ::= stmts compound_stmt *

                     {default} reduce 48

State 110:
     (50) stmts ::= simple_stmt *

                     {default} reduce 50

State 111:
     (51) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 51

State 112:
     (53) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 53

State 113:
     (52) stmts ::= compound_stmt *

                     {default} reduce 52

State 114:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

State 115:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 116:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 117:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 118:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 119:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 120:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 121:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 122:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 123:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 124:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 125:
     (29) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 29

State 126:
     (54) test ::= or_test *

                     {default} reduce 54

State 127:
     (55) test ::= lambdef *

                     {default} reduce 55

State 128:
     (56) or_test ::= and_test *

                     {default} reduce 56

State 129:
     (57) and_test ::= not_test *

                     {default} reduce 57

State 130:
     (58) not_test ::= NOT not_test *

                     {default} reduce 58

State 131:
     (59) not_test ::= comparison *

                     {default} reduce 59

State 132:
     (61) comparison ::= expr LESS_THAN expr *

                     {default} reduce 61

State 133:
     (67) expr ::= xor_expr *

                     {default} reduce 67

State 134:
     (68) xor_expr ::= and_expr *

                     {default} reduce 68

State 135:
     (69) and_expr ::= shift_expr *

                     {default} reduce 69

State 136:
     (75) term ::= term ASTERISK factor *

                     {default} reduce 75

State 137:
     (79) factor ::= power *

                     {default} reduce 79

State 138:
     (80) factor ::= PLUS factor *

                     {default} reduce 80

State 139:
     (81) factor ::= MINUS factor *

                     {default} reduce 81

State 140:
     (82) factor ::= TILDE factor *

                     {default} reduce 82

State 141:
     (85) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 85

State 142:
     (76) term ::= factor SLASH factor *

                     {default} reduce 76

State 143:
     (89) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 89

State 144:
     (90) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 90

State 145:
     (91) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 91

State 146:
     (92) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 92

State 147:
     (93) atom ::= ICON *

                     {default} reduce 93

State 148:
     (94) atom ::= FCON *

                     {default} reduce 94

State 149:
    (122) string ::= string SCON *

                     {default} reduce 122

State 150:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 151:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 152:
    (104) lambdef ::= LAMBDA COLON test *

                     {default} reduce 104

State 153:
    (121) string ::= SCON *

                     {default} reduce 121

State 154:
    (123) atom ::= NAME *

                     {default} reduce 123

State 155:
    (105) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 105

State 156:
    (117) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 117

State 157:
    (116) dictmaker ::= test COLON test *

                     {default} reduce 116

State 158:
     (97) listmaker ::= listmaker COMMA test *

                     {default} reduce 97

State 159:
    (101) listmaker ::= listmaker COMMA NEWLINE *

                     {default} reduce 101

State 160:
    (102) listmaker ::= listmaker COMMA INDENT *

                     {default} reduce 102

State 161:
    (103) listmaker ::= listmaker COMMA DEDENT *

                     {default} reduce 103

State 162:
     (98) listmaker ::= listmaker NEWLINE *

                     {default} reduce 98

State 163:
     (99) listmaker ::= listmaker INDENT *

                     {default} reduce 99

State 164:
    (100) listmaker ::= listmaker DEDENT *

                     {default} reduce 100

State 165:
     (96) listmaker ::= test *

                     {default} reduce 96

State 166:
     (77) term ::= factor SLASHSLASH factor *

                     {default} reduce 77

State 167:
     (78) term ::= factor PERCENT factor *

                     {default} reduce 78

State 168:
     (83) testlist_gexp ::= test *

                     {default} reduce 83

State 169:
     (88) atom ::= OPEN_PAR testlist_gexp CLOSE_PAR *

                     {default} reduce 88

State 170:
    (107) call_trailer_list ::= call_trailer_list call_trailer *

                     {default} reduce 107

State 171:
    (108) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 108

State 172:
    (109) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 109

State 173:
    (119) arglist ::= arglist COMMA argument *

                     {default} reduce 119

State 174:
    (120) argument ::= test *

                     {default} reduce 120

State 175:
    (118) arglist ::= argument *

                     {default} reduce 118

State 176:
    (111) access_trailer_list ::= access_trailer_list access_trailer *

                     {default} reduce 111

State 177:
    (112) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 112

State 178:
    (114) subscriptlist ::= subscriptlist COMMA subscript *

                     {default} reduce 114

State 179:
    (115) subscript ::= test *

                     {default} reduce 115

State 180:
    (113) subscriptlist ::= subscript *

                     {default} reduce 113

State 181:
    (106) call_trailer_list ::= call_trailer *

                     {default} reduce 106

State 182:
    (110) access_trailer_list ::= access_trailer *

                     {default} reduce 110

State 183:
     (62) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 62

State 184:
     (63) comparison ::= expr EQ_EQ expr *

                     {default} reduce 63

State 185:
     (64) comparison ::= expr NOT_EQ expr *

                     {default} reduce 64

State 186:
     (65) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 65

State 187:
     (66) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 66

State 188:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 189:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 190:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 191:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 192:
    (130) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 130

State 193:
    (131) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 131

State 194:
    (135) exprlist ::= exprlist_3 *

                     {default} reduce 135

State 195:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 196:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 197:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 198:
    (124) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 124

State 199:
    (125) testlist_2 ::= test COMMA test *

                     {default} reduce 125

State 200:
    (129) testlist ::= testlist_3 *

                     {default} reduce 129

State 201:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 202:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 203:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 204:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 205:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 206:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 207:
     (42) suite ::= simple_stmt *

                     {default} reduce 42

State 208:
     (43) suite ::= NEWLINE simple_stmt *

                     {default} reduce 43

State 209:
     (30) compound_stmt ::= if_stmt *

                     {default} reduce 30

State 210:
     (31) compound_stmt ::= while_stmt *

                     {default} reduce 31

State 211:
     (32) compound_stmt ::= for_stmt *

                     {default} reduce 32

State 212:
     (33) compound_stmt ::= funcdef *

                     {default} reduce 33

State 213:
     (35) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 35

State 214:
     (36) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 36

State 215:
     (37) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 37

State 216:
     (38) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 38

State 217:
     (40) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 40

State 218:
     (41) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 41

State 219:
     (44) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 44

State 220:
     (45) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 45

State 221:
     (47) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 47

State 222:
     (49) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 49

State 223:
     (46) stmts ::= stmts simple_stmt *

                     {default} reduce 46

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: DOUBLE_ASTERISK
   41: OPEN_RECT_BRACE
   42: CLOSE_RECT_BRACE
   43: OPEN_CURLY_BRACE
   44: CLOSE_CURLY_BRACE
   45: ICON
   46: FCON
   47: LAMBDA
   48: SCON
   49: error:
   50: simple_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   51: small_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   52: print_stmt: PRINT
   53: string: SCON
   54: atom: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   55: single_input: EOI NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   56: compound_stmt: DEF IF WHILE FOR
   57: funcdef: DEF
   58: parameters: OPEN_PAR
   59: suite: NEWLINE NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   60: varargslist: NAME
   61: fpdefs: NAME
   62: testlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   63: expr_stmt: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   64: del_stmt: DEL
   65: pass_stmt: PASS
   66: flow_stmt: RETURN
   67: exprlist: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   68: return_stmt: RETURN
   69: test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   70: if_stmt: IF
   71: while_stmt: WHILE
   72: for_stmt: FOR
   73: if_head: IF
   74: stmts: NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   75: or_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   76: lambdef: LAMBDA
   77: and_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   78: not_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   79: comparison: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   80: expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   81: xor_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   82: and_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   83: shift_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   84: arith_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   85: term: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   86: factor: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   87: power: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   88: testlist_gexp: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   89: call_trailer_list: OPEN_PAR
   90: access_trailer_list: OPEN_RECT_BRACE
   91: listmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   92: dictmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   93: call_trailer: OPEN_PAR
   94: arglist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   95: access_trailer: OPEN_RECT_BRACE
   96: subscriptlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   97: subscript: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   98: argument: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   99: testlist_2: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  100: testlist_3: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  101: exprlist_2: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
  102: exprlist_3: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
