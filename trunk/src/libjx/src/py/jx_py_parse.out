State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  120
                       NEWLINE shift  122
                           DEF shift  106
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                            IF shift  40
                         WHILE shift  38
                           FOR shift  44
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  158
                   simple_stmt shift  123
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                  single_input accept
                 compound_stmt shift  111
                       funcdef shift  219
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       if_stmt shift  216
                    while_stmt shift  217
                      for_stmt shift  218
                      classdef shift  220
                       if_head shift  78
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  106
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                            IF shift  40
                         WHILE shift  38
                           FOR shift  44
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  158
                   simple_stmt shift  235
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                 compound_stmt shift  118
                       funcdef shift  219
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       if_stmt shift  216
                    while_stmt shift  217
                      for_stmt shift  218
                      classdef shift  220
                       if_head shift  78
                         stmts shift  2
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  106
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                            IF shift  40
                         WHILE shift  38
                           FOR shift  44
                        DEDENT shift  227
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  158
                   simple_stmt shift  233
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                 compound_stmt shift  234
                       funcdef shift  219
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       if_stmt shift  216
                    while_stmt shift  217
                      for_stmt shift  218
                      classdef shift  220
                       if_head shift  78
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  106
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                            IF shift  40
                         WHILE shift  38
                           FOR shift  44
                        DEDENT shift  228
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  158
                   simple_stmt shift  229
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                 compound_stmt shift  230
                       funcdef shift  219
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       if_stmt shift  216
                    while_stmt shift  217
                      for_stmt shift  218
                      classdef shift  220
                       if_head shift  78
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  106
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                            IF shift  40
                         WHILE shift  38
                           FOR shift  44
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  158
                   simple_stmt shift  116
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                 compound_stmt shift  117
                       funcdef shift  219
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       if_stmt shift  216
                    while_stmt shift  217
                      for_stmt shift  218
                      classdef shift  220
                       if_head shift  78
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  221
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  224
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  222
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  225
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  231
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 10:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  125
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  77
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  223
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  232
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 14:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  214
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                         suite shift  226
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 15:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                        INDENT shift  1
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                   simple_stmt shift  215
                    small_stmt shift  76
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                      testlist shift  72
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 16:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  127
                          NAME shift  159
                      OPEN_PAR shift  27
                           DEL shift  43
                          PASS shift  202
                        RETURN shift  18
                         PRINT shift  36
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                    small_stmt shift  92
                    print_stmt shift  105
                        string shift  89
                          atom shift  54
                      testlist shift  73
                     expr_stmt shift  129
                      del_stmt shift  195
                     pass_stmt shift  196
                     flow_stmt shift  197
                   return_stmt shift  203
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 17:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      testlist shift  210
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 18:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      testlist shift  204
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 19:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR * testlist CLOSE_PAR COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      testlist shift  99
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 20:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      testlist shift  87
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 21:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      testlist shift  209
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 22:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      testlist shift  208
                          test shift  93
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    testlist_2 shift  94
                    testlist_3 shift  207

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                     CLOSE_PAR shift  177
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  180
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                       arglist shift  79
                      argument shift  181

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  185
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                 subscriptlist shift  107
                     subscript shift  184

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
             CLOSE_CURLY_BRACE shift  150
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  95
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                     dictmaker shift  81

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          listmaker ::= * listmaker NEWLINE
          listmaker ::= * listmaker INDENT
          listmaker ::= * listmaker DEDENT
          listmaker ::= * listmaker COMMA NEWLINE
          listmaker ::= * listmaker COMMA INDENT
          listmaker ::= * listmaker COMMA DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              CLOSE_RECT_BRACE shift  148
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  170
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                     listmaker shift  71

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp ::= * test
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= OPEN_PAR * testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  173
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                 testlist_gexp shift  86

State 28:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  180
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                      argument shift  179

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          listmaker ::= listmaker COMMA * NEWLINE
          listmaker ::= listmaker COMMA * INDENT
          listmaker ::= listmaker COMMA * DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                       NEWLINE shift  164
                          NAME shift  159
                      OPEN_PAR shift  27
                        INDENT shift  165
                        DEDENT shift  166
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  163
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  162
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 31:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  205
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 32:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  98
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 33:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (131) testlist_3 ::= test COMMA *

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  206
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                     {default} reduce 131

State 34:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  114
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 35:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  130
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 36:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  211
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                     {default} reduce 27

State 37:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  160
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 38:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  82
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 39:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  161
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 40:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  84
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 41:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  157
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 42:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                        LAMBDA shift  65
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          test shift  115
                       or_test shift  131
                       lambdef shift  132
                      and_test shift  133
                      not_test shift  134
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 43:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      exprlist shift  198
                          expr shift  101
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    exprlist_2 shift  103
                    exprlist_3 shift  201

State 44:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      exprlist shift  85
                          expr shift  101
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                    exprlist_2 shift  103
                    exprlist_3 shift  201

State 45:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                           NOT shift  45
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                      not_test shift  135
                    comparison shift  136
                          expr shift  70
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 46:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  199
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 47:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  192
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 48:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  190
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 49:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  193
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 50:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  194
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 51:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  137
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 52:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  191
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142

State 53:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (137) exprlist_3 ::= expr COMMA *

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          expr shift  200
                      xor_expr shift  138
                      and_expr shift  139
                    shift_expr shift  140
                    arith_expr shift  75
                          term shift  90
                        factor shift  74
                         power shift  142
                     {default} reduce 137

State 54:
     (85) power ::= atom *
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * dot_trailer_list
          power ::= atom * call_trailer_list
          power ::= atom * access_trailer_list
          call_trailer_list ::= * call_trailer
          call_trailer_list ::= * call_trailer_list call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer_list ::= * access_trailer
          access_trailer_list ::= * access_trailer_list access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE
          dot_trailer_list ::= * dot_trailer
          dot_trailer ::= * DOT NAME

                      OPEN_PAR shift  23
               DOUBLE_ASTERISK shift  57
               OPEN_RECT_BRACE shift  24
                           DOT shift  102
              dot_trailer_list shift  175
             call_trailer_list shift  69
           access_trailer_list shift  68
                  call_trailer shift  186
                access_trailer shift  187
                   dot_trailer shift  188
                     {default} reduce 85

State 55:
          arith_expr ::= arith_expr PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          term shift  108
                        factor shift  74
                         power shift  142

State 56:
          arith_expr ::= arith_expr MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                          term shift  110
                        factor shift  74
                         power shift  142

State 57:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  146
                         power shift  142

State 58:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  145
                         power shift  142

State 59:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  144
                         power shift  142

State 60:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  171
                         power shift  142

State 61:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  143
                         power shift  142

State 62:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  172
                         power shift  142

State 63:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  147
                         power shift  142

State 64:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  159
                      OPEN_PAR shift  27
                          PLUS shift  61
                         MINUS shift  59
                         TILDE shift  58
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  152
                          FCON shift  153
                          SCON shift  158
                        string shift  89
                          atom shift  54
                        factor shift  141
                         power shift  142

State 65:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  156
                         COLON shift  41
                   varargslist shift  104
                        fpdefs shift  112

State 66:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  156
                     CLOSE_PAR shift  119
                   varargslist shift  97
                        fpdefs shift  112

State 67:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  66
                    parameters shift  88

State 68:
     (89) power ::= atom access_trailer_list *
          access_trailer_list ::= access_trailer_list * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  24
                access_trailer shift  182
                     {default} reduce 89

State 69:
     (88) power ::= atom call_trailer_list *
          call_trailer_list ::= call_trailer_list * call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  23
                  call_trailer shift  176
                     {default} reduce 88

State 70:
     (61) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  51
               LESS_THAN_OR_EQ shift  48
                         EQ_EQ shift  52
                        NOT_EQ shift  47
                  GREATER_THAN shift  49
            GREATER_THAN_OR_EQ shift  50
                     {default} reduce 61

State 71:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test
          listmaker ::= listmaker * NEWLINE
          listmaker ::= listmaker * INDENT
          listmaker ::= listmaker * DEDENT
          listmaker ::= listmaker * COMMA NEWLINE
          listmaker ::= listmaker * COMMA INDENT
          listmaker ::= listmaker * COMMA DEDENT

                       NEWLINE shift  167
                         COMMA shift  29
                        INDENT shift  168
                        DEDENT shift  169
              CLOSE_RECT_BRACE shift  149

State 72:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  212
                     SEMICOLON shift  91
                   PLUS_EQUALS shift  22
                  MINUS_EQUALS shift  21
                        EQUALS shift  17

State 73:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  22
                  MINUS_EQUALS shift  21
                        EQUALS shift  17

State 74:
     (75) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  63
                    SLASHSLASH shift  60
                       PERCENT shift  62
                     {default} reduce 75

State 75:
     (71) shift_expr ::= arith_expr *
          arith_expr ::= arith_expr * PLUS term
          arith_expr ::= arith_expr * MINUS term

                          PLUS shift  55
                         MINUS shift  56
                     {default} reduce 71

State 76:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  126
                     SEMICOLON shift  16

State 77:
     (35) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  83
                          ELIF shift  42
                     {default} reduce 35

State 78:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (40) if_stmt ::= if_head *

                          ELSE shift  113
                          ELIF shift  34
                     {default} reduce 40

State 79:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  178
                         COMMA shift  28

State 80:
          classdef ::= CLASS NAME * OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS NAME * COLON suite

                         COLON shift  13
                      OPEN_PAR shift  19

State 81:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  32
             CLOSE_CURLY_BRACE shift  151

State 82:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  8

State 83:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  5

State 84:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  11

State 85:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  20

State 86:
          atom ::= OPEN_PAR testlist_gexp * CLOSE_PAR

                     CLOSE_PAR shift  174

State 87:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  14

State 88:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  10

State 89:
     (97) atom ::= string *
          string ::= string * SCON

                          SCON shift  154
                     {default} reduce 97

State 90:
     (72) arith_expr ::= term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  64
                     {default} reduce 72

State 91:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  213

State 92:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  128

State 93:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (132) testlist ::= test *

                         COMMA shift  33
                     {default} reduce 132

State 94:
          testlist_2 ::= testlist_2 * COMMA test
    (133) testlist ::= testlist_2 *

                         COMMA shift  31
                     {default} reduce 133

State 95:
          dictmaker ::= test * COLON test

                         COLON shift  30

State 96:
          classdef ::= CLASS * NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS * NAME COLON suite

                          NAME shift  80

State 97:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  121

State 98:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  39

State 99:
          classdef ::= CLASS NAME OPEN_PAR testlist * CLOSE_PAR COLON suite

                     CLOSE_PAR shift  100

State 100:
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR * COLON suite

                         COLON shift  9

State 101:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (138) exprlist ::= expr *

                         COMMA shift  53
                     {default} reduce 138

State 102:
          dot_trailer ::= DOT * NAME

                          NAME shift  189

State 103:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (139) exprlist ::= exprlist_2 *

                         COMMA shift  46
                     {default} reduce 139

State 104:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  37

State 105:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  35
                     {default} reduce 16

State 106:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  67

State 107:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE

              CLOSE_RECT_BRACE shift  183

State 108:
     (73) arith_expr ::= arith_expr PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  64
                     {default} reduce 73

State 109:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  155

State 110:
     (74) arith_expr ::= arith_expr MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  64
                     {default} reduce 74

State 111:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  124

State 112:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  109
                     {default} reduce 7

State 113:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  6

State 114:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  12

State 115:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  7

State 116:
     (52) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 52

State 117:
     (54) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 54

State 118:
     (53) stmts ::= compound_stmt *

                     {default} reduce 53

State 119:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

State 120:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 121:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 122:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 123:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 124:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 125:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 126:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 127:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 128:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 129:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 130:
     (29) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 29

State 131:
     (55) test ::= or_test *

                     {default} reduce 55

State 132:
     (56) test ::= lambdef *

                     {default} reduce 56

State 133:
     (57) or_test ::= and_test *

                     {default} reduce 57

State 134:
     (58) and_test ::= not_test *

                     {default} reduce 58

State 135:
     (59) not_test ::= NOT not_test *

                     {default} reduce 59

State 136:
     (60) not_test ::= comparison *

                     {default} reduce 60

State 137:
     (62) comparison ::= expr LESS_THAN expr *

                     {default} reduce 62

State 138:
     (68) expr ::= xor_expr *

                     {default} reduce 68

State 139:
     (69) xor_expr ::= and_expr *

                     {default} reduce 69

State 140:
     (70) and_expr ::= shift_expr *

                     {default} reduce 70

State 141:
     (76) term ::= term ASTERISK factor *

                     {default} reduce 76

State 142:
     (80) factor ::= power *

                     {default} reduce 80

State 143:
     (81) factor ::= PLUS factor *

                     {default} reduce 81

State 144:
     (82) factor ::= MINUS factor *

                     {default} reduce 82

State 145:
     (83) factor ::= TILDE factor *

                     {default} reduce 83

State 146:
     (86) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 86

State 147:
     (77) term ::= factor SLASH factor *

                     {default} reduce 77

State 148:
     (91) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 91

State 149:
     (92) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 92

State 150:
     (93) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 93

State 151:
     (94) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 94

State 152:
     (95) atom ::= ICON *

                     {default} reduce 95

State 153:
     (96) atom ::= FCON *

                     {default} reduce 96

State 154:
    (127) string ::= string SCON *

                     {default} reduce 127

State 155:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 156:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 157:
    (106) lambdef ::= LAMBDA COLON test *

                     {default} reduce 106

State 158:
    (126) string ::= SCON *

                     {default} reduce 126

State 159:
    (128) atom ::= NAME *

                     {default} reduce 128

State 160:
    (107) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 107

State 161:
    (120) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 120

State 162:
    (119) dictmaker ::= test COLON test *

                     {default} reduce 119

State 163:
     (99) listmaker ::= listmaker COMMA test *

                     {default} reduce 99

State 164:
    (103) listmaker ::= listmaker COMMA NEWLINE *

                     {default} reduce 103

State 165:
    (104) listmaker ::= listmaker COMMA INDENT *

                     {default} reduce 104

State 166:
    (105) listmaker ::= listmaker COMMA DEDENT *

                     {default} reduce 105

State 167:
    (100) listmaker ::= listmaker NEWLINE *

                     {default} reduce 100

State 168:
    (101) listmaker ::= listmaker INDENT *

                     {default} reduce 101

State 169:
    (102) listmaker ::= listmaker DEDENT *

                     {default} reduce 102

State 170:
     (98) listmaker ::= test *

                     {default} reduce 98

State 171:
     (78) term ::= factor SLASHSLASH factor *

                     {default} reduce 78

State 172:
     (79) term ::= factor PERCENT factor *

                     {default} reduce 79

State 173:
     (84) testlist_gexp ::= test *

                     {default} reduce 84

State 174:
     (90) atom ::= OPEN_PAR testlist_gexp CLOSE_PAR *

                     {default} reduce 90

State 175:
     (87) power ::= atom dot_trailer_list *

                     {default} reduce 87

State 176:
    (109) call_trailer_list ::= call_trailer_list call_trailer *

                     {default} reduce 109

State 177:
    (110) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 110

State 178:
    (111) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 111

State 179:
    (124) arglist ::= arglist COMMA argument *

                     {default} reduce 124

State 180:
    (125) argument ::= test *

                     {default} reduce 125

State 181:
    (123) arglist ::= argument *

                     {default} reduce 123

State 182:
    (113) access_trailer_list ::= access_trailer_list access_trailer *

                     {default} reduce 113

State 183:
    (114) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 114

State 184:
    (117) subscriptlist ::= subscript *

                     {default} reduce 117

State 185:
    (118) subscript ::= test *

                     {default} reduce 118

State 186:
    (108) call_trailer_list ::= call_trailer *

                     {default} reduce 108

State 187:
    (112) access_trailer_list ::= access_trailer *

                     {default} reduce 112

State 188:
    (115) dot_trailer_list ::= dot_trailer *

                     {default} reduce 115

State 189:
    (116) dot_trailer ::= DOT NAME *

                     {default} reduce 116

State 190:
     (63) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 63

State 191:
     (64) comparison ::= expr EQ_EQ expr *

                     {default} reduce 64

State 192:
     (65) comparison ::= expr NOT_EQ expr *

                     {default} reduce 65

State 193:
     (66) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 66

State 194:
     (67) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 67

State 195:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 196:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 197:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 198:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 199:
    (135) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 135

State 200:
    (136) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 136

State 201:
    (140) exprlist ::= exprlist_3 *

                     {default} reduce 140

State 202:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 203:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 204:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 205:
    (129) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 129

State 206:
    (130) testlist_2 ::= test COMMA test *

                     {default} reduce 130

State 207:
    (134) testlist ::= testlist_3 *

                     {default} reduce 134

State 208:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 209:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 210:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 211:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 212:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 213:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 214:
     (43) suite ::= simple_stmt *

                     {default} reduce 43

State 215:
     (44) suite ::= NEWLINE simple_stmt *

                     {default} reduce 44

State 216:
     (30) compound_stmt ::= if_stmt *

                     {default} reduce 30

State 217:
     (31) compound_stmt ::= while_stmt *

                     {default} reduce 31

State 218:
     (32) compound_stmt ::= for_stmt *

                     {default} reduce 32

State 219:
     (33) compound_stmt ::= funcdef *

                     {default} reduce 33

State 220:
     (34) compound_stmt ::= classdef *

                     {default} reduce 34

State 221:
     (36) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 36

State 222:
     (37) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 37

State 223:
     (38) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 38

State 224:
     (39) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 39

State 225:
     (41) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 41

State 226:
     (42) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 42

State 227:
     (45) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 45

State 228:
     (46) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 46

State 229:
     (48) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 48

State 230:
     (50) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 50

State 231:
    (121) classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite *

                     {default} reduce 121

State 232:
    (122) classdef ::= CLASS NAME COLON suite *

                     {default} reduce 122

State 233:
     (47) stmts ::= stmts simple_stmt *

                     {default} reduce 47

State 234:
     (49) stmts ::= stmts compound_stmt *

                     {default} reduce 49

State 235:
     (51) stmts ::= simple_stmt *

                     {default} reduce 51

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: DOUBLE_ASTERISK
   41: OPEN_RECT_BRACE
   42: CLOSE_RECT_BRACE
   43: OPEN_CURLY_BRACE
   44: CLOSE_CURLY_BRACE
   45: ICON
   46: FCON
   47: LAMBDA
   48: DOT
   49: CLASS
   50: SCON
   51: error:
   52: simple_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   53: small_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   54: print_stmt: PRINT
   55: string: SCON
   56: atom: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   57: single_input: EOI NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA CLASS SCON
   58: compound_stmt: DEF IF WHILE FOR CLASS
   59: funcdef: DEF
   60: parameters: OPEN_PAR
   61: suite: NEWLINE NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   62: varargslist: NAME
   63: fpdefs: NAME
   64: testlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   65: expr_stmt: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   66: del_stmt: DEL
   67: pass_stmt: PASS
   68: flow_stmt: RETURN
   69: exprlist: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   70: return_stmt: RETURN
   71: test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   72: if_stmt: IF
   73: while_stmt: WHILE
   74: for_stmt: FOR
   75: classdef: CLASS
   76: if_head: IF
   77: stmts: NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA CLASS SCON
   78: or_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   79: lambdef: LAMBDA
   80: and_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   81: not_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   82: comparison: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   83: expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   84: xor_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   85: and_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   86: shift_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   87: arith_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   88: term: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   89: factor: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   90: power: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   91: testlist_gexp: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   92: dot_trailer_list: DOT
   93: call_trailer_list: OPEN_PAR
   94: access_trailer_list: OPEN_RECT_BRACE
   95: listmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   96: dictmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   97: call_trailer: OPEN_PAR
   98: arglist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   99: access_trailer: OPEN_RECT_BRACE
  100: subscriptlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  101: dot_trailer: DOT
  102: subscript: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  103: argument: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  104: testlist_2: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  105: testlist_3: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
  106: exprlist_2: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
  107: exprlist_3: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
