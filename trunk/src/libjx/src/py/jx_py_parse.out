State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  174
                       NEWLINE shift  107
                           DEF shift  104
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                            IF shift  37
                         WHILE shift  26
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  108
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                  single_input accept
                 compound_stmt shift  92
                       funcdef shift  192
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       if_stmt shift  189
                    while_stmt shift  190
                      for_stmt shift  191
                       if_head shift  75
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  104
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                            IF shift  37
                         WHILE shift  26
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  205
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                 compound_stmt shift  208
                       funcdef shift  192
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       if_stmt shift  189
                    while_stmt shift  190
                      for_stmt shift  191
                       if_head shift  75
                         stmts shift  2
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  104
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                            IF shift  37
                         WHILE shift  26
                           FOR shift  41
                        DEDENT shift  199
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  203
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                 compound_stmt shift  204
                       funcdef shift  192
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       if_stmt shift  189
                    while_stmt shift  190
                      for_stmt shift  191
                       if_head shift  75
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  104
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                            IF shift  37
                         WHILE shift  26
                           FOR shift  41
                        DEDENT shift  200
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  201
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                 compound_stmt shift  202
                       funcdef shift  192
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       if_stmt shift  189
                    while_stmt shift  190
                      for_stmt shift  191
                       if_head shift  75
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  104
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                            IF shift  37
                         WHILE shift  26
                           FOR shift  41
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  206
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                 compound_stmt shift  207
                       funcdef shift  192
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       if_stmt shift  189
                    while_stmt shift  190
                      for_stmt shift  191
                       if_head shift  75
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  194
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  195
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  198
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  197
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  73
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 10:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  110
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  193
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  13
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  187
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                         suite shift  196
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 13:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                        INDENT shift  1
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                   simple_stmt shift  188
                    small_stmt shift  74
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                      testlist shift  67
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 14:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  112
                          NAME shift  145
                           DEL shift  40
                          PASS shift  175
                        RETURN shift  15
                         PRINT shift  33
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                    small_stmt shift  98
                    print_stmt shift  96
                        string shift  84
                          atom shift  63
                      testlist shift  68
                     expr_stmt shift  114
                      del_stmt shift  168
                     pass_stmt shift  169
                     flow_stmt shift  170
                   return_stmt shift  176
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 15:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      testlist shift  177
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 16:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      testlist shift  183
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 17:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      testlist shift  182
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 18:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      testlist shift  181
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 19:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      testlist shift  97
                          test shift  102
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    testlist_2 shift  100
                    testlist_3 shift  180

State 20:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                     CLOSE_PAR shift  152
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  155
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                       arglist shift  71
                      argument shift  156

State 21:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscriptlist ::= * subscriptlist COMMA subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  161
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                 subscriptlist shift  77
                     subscript shift  162

State 22:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              CLOSE_RECT_BRACE shift  134
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  150
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                     listmaker shift  76

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
             CLOSE_CURLY_BRACE shift  136
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  85
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                     dictmaker shift  72

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  155
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                      argument shift  154

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          subscriptlist ::= subscriptlist COMMA * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  161
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                     subscript shift  160

State 26:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  94
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  149
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 28:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  115
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  82
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  178
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 31:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (114) testlist_3 ::= test COMMA *

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  179
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                     {default} reduce 114

State 32:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  143
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 33:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  184
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                     {default} reduce 27

State 34:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  146
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 35:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  147
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 36:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  148
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 37:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  86
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 38:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  90
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 39:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                        LAMBDA shift  62
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          test shift  91
                       or_test shift  116
                       lambdef shift  117
                      and_test shift  118
                      not_test shift  119
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 40:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      exprlist shift  171
                          expr shift  83
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    exprlist_2 shift  88
                    exprlist_3 shift  106

State 41:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      exprlist shift  95
                          expr shift  83
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                    exprlist_2 shift  88
                    exprlist_3 shift  106

State 42:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                           NOT shift  42
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                      not_test shift  120
                    comparison shift  121
                          expr shift  66
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 43:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  122
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 44:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  167
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 45:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  166
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 46:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  165
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 47:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  164
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 48:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  163
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 49:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  172
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64

State 50:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * term PLUS term
          arith_expr ::= * term MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (120) exprlist_3 ::= expr COMMA *

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          expr shift  173
                      xor_expr shift  123
                      and_expr shift  124
                    shift_expr shift  125
                    arith_expr shift  126
                          term shift  69
                        factor shift  70
                         power shift  64
                     {default} reduce 120

State 51:
          arith_expr ::= term PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          term shift  101
                        factor shift  70
                         power shift  64

State 52:
          arith_expr ::= term MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                          term shift  103
                        factor shift  70
                         power shift  64

State 53:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  133
                         power shift  64

State 54:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  131
                         power shift  64

State 55:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  130
                         power shift  64

State 56:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  129
                         power shift  64

State 57:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  157
                         power shift  64

State 58:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  158
                         power shift  64

State 59:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  127
                         power shift  64

State 60:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom call_trailer
          power ::= * power access_trailer
          power ::= * atom
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  145
                          PLUS shift  55
                         MINUS shift  54
                         TILDE shift  60
               OPEN_RECT_BRACE shift  22
              OPEN_CURLY_BRACE shift  23
                          ICON shift  138
                          FCON shift  139
                          SCON shift  144
                        string shift  84
                          atom shift  63
                        factor shift  132
                         power shift  64

State 61:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  142
                     CLOSE_PAR shift  209
                   varargslist shift  89
                        fpdefs shift  79

State 62:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  142
                         COLON shift  32
                   varargslist shift  80
                        fpdefs shift  79

State 63:
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * call_trailer
     (86) power ::= atom *
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  20
               DOUBLE_ASTERISK shift  53
                  call_trailer shift  151
                     {default} reduce 86

State 64:
     (79) factor ::= power *
          power ::= power * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  21
               OPEN_RECT_BRACE reduce 79  ** Parsing conflict **
                access_trailer shift  128
                     {default} reduce 79

State 65:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  61
                    parameters shift  99

State 66:
     (60) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  43
               LESS_THAN_OR_EQ shift  48
                         EQ_EQ shift  47
                        NOT_EQ shift  46
                  GREATER_THAN shift  45
            GREATER_THAN_OR_EQ shift  44
                     {default} reduce 60

State 67:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  185
                     SEMICOLON shift  81
                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  17
                        EQUALS shift  16

State 68:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  18
                  MINUS_EQUALS shift  17
                        EQUALS shift  16

State 69:
     (71) arith_expr ::= term *
          arith_expr ::= term * PLUS term
          arith_expr ::= term * MINUS term
          term ::= term * ASTERISK factor

                          PLUS shift  51
                         MINUS shift  52
                      ASTERISK shift  59
                     {default} reduce 71

State 70:
     (74) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  56
                    SLASHSLASH shift  57
                       PERCENT shift  58
                     {default} reduce 74

State 71:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  153
                         COMMA shift  24

State 72:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  29
             CLOSE_CURLY_BRACE shift  137

State 73:
     (34) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  87
                          ELIF shift  38
                     {default} reduce 34

State 74:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  111
                     SEMICOLON shift  14

State 75:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (39) if_stmt ::= if_head *

                          ELSE shift  93
                          ELIF shift  39
                     {default} reduce 39

State 76:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test

                         COMMA shift  27
              CLOSE_RECT_BRACE shift  135

State 77:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE
          subscriptlist ::= subscriptlist * COMMA subscript

                         COMMA shift  25
              CLOSE_RECT_BRACE shift  159

State 78:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  141

State 79:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  78
                     {default} reduce 7

State 80:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  34

State 81:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  186

State 82:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  35

State 83:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (121) exprlist ::= expr *

                         COMMA shift  50
                     {default} reduce 121

State 84:
     (93) atom ::= string *
          string ::= string * SCON

                          SCON shift  140
                     {default} reduce 93

State 85:
          dictmaker ::= test * COLON test

                         COLON shift  36

State 86:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  9

State 87:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  11

State 88:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (122) exprlist ::= exprlist_2 *

                         COMMA shift  49
                     {default} reduce 122

State 89:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  105

State 90:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  5

State 91:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  6

State 92:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  109

State 93:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  12

State 94:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  8

State 95:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  19

State 96:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  28
                     {default} reduce 16

State 97:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  7

State 98:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  113

State 99:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  10

State 100:
          testlist_2 ::= testlist_2 * COMMA test
    (116) testlist ::= testlist_2 *

                         COMMA shift  30
                     {default} reduce 116

State 101:
     (72) arith_expr ::= term PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  59
                     {default} reduce 72

State 102:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (115) testlist ::= test *

                         COMMA shift  31
                     {default} reduce 115

State 103:
     (73) arith_expr ::= term MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  59
                     {default} reduce 73

State 104:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  65

State 105:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 106:
    (123) exprlist ::= exprlist_3 *

                     {default} reduce 123

State 107:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 108:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 109:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 110:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 111:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 112:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 113:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 114:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 115:
     (29) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 29

State 116:
     (54) test ::= or_test *

                     {default} reduce 54

State 117:
     (55) test ::= lambdef *

                     {default} reduce 55

State 118:
     (56) or_test ::= and_test *

                     {default} reduce 56

State 119:
     (57) and_test ::= not_test *

                     {default} reduce 57

State 120:
     (58) not_test ::= NOT not_test *

                     {default} reduce 58

State 121:
     (59) not_test ::= comparison *

                     {default} reduce 59

State 122:
     (61) comparison ::= expr LESS_THAN expr *

                     {default} reduce 61

State 123:
     (67) expr ::= xor_expr *

                     {default} reduce 67

State 124:
     (68) xor_expr ::= and_expr *

                     {default} reduce 68

State 125:
     (69) and_expr ::= shift_expr *

                     {default} reduce 69

State 126:
     (70) shift_expr ::= arith_expr *

                     {default} reduce 70

State 127:
     (75) term ::= term ASTERISK factor *

                     {default} reduce 75

State 128:
     (85) power ::= power access_trailer *

                     {default} reduce 85

State 129:
     (76) term ::= factor SLASH factor *

                     {default} reduce 76

State 130:
     (80) factor ::= PLUS factor *

                     {default} reduce 80

State 131:
     (81) factor ::= MINUS factor *

                     {default} reduce 81

State 132:
     (82) factor ::= TILDE factor *

                     {default} reduce 82

State 133:
     (83) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 83

State 134:
     (87) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 87

State 135:
     (88) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 88

State 136:
     (89) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 89

State 137:
     (90) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 90

State 138:
     (91) atom ::= ICON *

                     {default} reduce 91

State 139:
     (92) atom ::= FCON *

                     {default} reduce 92

State 140:
    (110) string ::= string SCON *

                     {default} reduce 110

State 141:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 142:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 143:
     (96) lambdef ::= LAMBDA COLON test *

                     {default} reduce 96

State 144:
    (109) string ::= SCON *

                     {default} reduce 109

State 145:
    (111) atom ::= NAME *

                     {default} reduce 111

State 146:
     (97) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 97

State 147:
    (105) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 105

State 148:
    (104) dictmaker ::= test COLON test *

                     {default} reduce 104

State 149:
     (95) listmaker ::= listmaker COMMA test *

                     {default} reduce 95

State 150:
     (94) listmaker ::= test *

                     {default} reduce 94

State 151:
     (84) power ::= atom call_trailer *

                     {default} reduce 84

State 152:
     (98) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 98

State 153:
     (99) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 99

State 154:
    (107) arglist ::= arglist COMMA argument *

                     {default} reduce 107

State 155:
    (108) argument ::= test *

                     {default} reduce 108

State 156:
    (106) arglist ::= argument *

                     {default} reduce 106

State 157:
     (77) term ::= factor SLASHSLASH factor *

                     {default} reduce 77

State 158:
     (78) term ::= factor PERCENT factor *

                     {default} reduce 78

State 159:
    (100) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 100

State 160:
    (102) subscriptlist ::= subscriptlist COMMA subscript *

                     {default} reduce 102

State 161:
    (103) subscript ::= test *

                     {default} reduce 103

State 162:
    (101) subscriptlist ::= subscript *

                     {default} reduce 101

State 163:
     (62) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 62

State 164:
     (63) comparison ::= expr EQ_EQ expr *

                     {default} reduce 63

State 165:
     (64) comparison ::= expr NOT_EQ expr *

                     {default} reduce 64

State 166:
     (65) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 65

State 167:
     (66) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 66

State 168:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 169:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 170:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 171:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 172:
    (118) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 118

State 173:
    (119) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 119

State 174:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 175:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 176:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 177:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 178:
    (112) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 112

State 179:
    (113) testlist_2 ::= test COMMA test *

                     {default} reduce 113

State 180:
    (117) testlist ::= testlist_3 *

                     {default} reduce 117

State 181:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 182:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 183:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 184:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 185:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 186:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 187:
     (42) suite ::= simple_stmt *

                     {default} reduce 42

State 188:
     (43) suite ::= NEWLINE simple_stmt *

                     {default} reduce 43

State 189:
     (30) compound_stmt ::= if_stmt *

                     {default} reduce 30

State 190:
     (31) compound_stmt ::= while_stmt *

                     {default} reduce 31

State 191:
     (32) compound_stmt ::= for_stmt *

                     {default} reduce 32

State 192:
     (33) compound_stmt ::= funcdef *

                     {default} reduce 33

State 193:
     (35) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 35

State 194:
     (36) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 36

State 195:
     (37) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 37

State 196:
     (38) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 38

State 197:
     (40) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 40

State 198:
     (41) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 41

State 199:
     (44) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 44

State 200:
     (45) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 45

State 201:
     (47) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 47

State 202:
     (49) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 49

State 203:
     (46) stmts ::= stmts simple_stmt *

                     {default} reduce 46

State 204:
     (48) stmts ::= stmts compound_stmt *

                     {default} reduce 48

State 205:
     (50) stmts ::= simple_stmt *

                     {default} reduce 50

State 206:
     (51) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 51

State 207:
     (53) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 53

State 208:
     (52) stmts ::= compound_stmt *

                     {default} reduce 52

State 209:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: DOUBLE_ASTERISK
   41: OPEN_RECT_BRACE
   42: CLOSE_RECT_BRACE
   43: OPEN_CURLY_BRACE
   44: CLOSE_CURLY_BRACE
   45: ICON
   46: FCON
   47: LAMBDA
   48: SCON
   49: error:
   50: simple_stmt: NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   51: small_stmt: NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   52: print_stmt: PRINT
   53: string: SCON
   54: atom: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   55: single_input: EOI NEWLINE DEF NAME DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   56: compound_stmt: DEF IF WHILE FOR
   57: funcdef: DEF
   58: parameters: OPEN_PAR
   59: suite: NEWLINE NAME DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   60: varargslist: NAME
   61: fpdefs: NAME
   62: testlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   63: expr_stmt: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   64: del_stmt: DEL
   65: pass_stmt: PASS
   66: flow_stmt: RETURN
   67: exprlist: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   68: return_stmt: RETURN
   69: test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   70: if_stmt: IF
   71: while_stmt: WHILE
   72: for_stmt: FOR
   73: if_head: IF
   74: stmts: NEWLINE DEF NAME DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   75: or_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   76: lambdef: LAMBDA
   77: and_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   78: not_test: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   79: comparison: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   80: expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   81: xor_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   82: and_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   83: shift_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   84: arith_expr: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   85: term: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   86: factor: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   87: power: NAME OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   88: call_trailer: OPEN_PAR
   89: access_trailer: OPEN_RECT_BRACE
   90: listmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   91: dictmaker: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   92: arglist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   93: subscriptlist: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   94: subscript: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   95: argument: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   96: testlist_2: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   97: testlist_3: NAME NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON LAMBDA SCON
   98: exprlist_2: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
   99: exprlist_3: NAME PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON SCON
