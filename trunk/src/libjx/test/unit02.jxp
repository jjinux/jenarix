
# unit02.jxp (Python unit tests)

a = 1

print a

# we have literals 

b = {"some key":[1,2,3], 3:"some value", "another key":"another value",8.4:0}

print b, len(b)

# REMEMBER, Jenarix uses copy semantics, not reference-taking semantics, so

d = {"some key":"value"}

c = d

c["another key"] ="value"

print c

print d

# is NOT how Python works, but it is how JXON works.

# we have print

print "hello Python world!!!" " Can you hear me?"

# we have for loops (simple iterator)

for b in range(3,8):
    print b

# we have while loops

x=1.3

while x<9:
    x=x+1.1
    print x

# does simple if work?

if 0:
    print "hi"
else:
    print 1234

# we have cascading IF statements

if 0:
    print "hi"
elif 0:
    print "who"
elif 1:
    print "wow"
else:
    print 1234

# we have functions

def fn(a,b):
    print "The sum of",a,"and",b,"is",a+b

fn(1,2)

fn(3,6)

# we have map / lambda

print map(lambda x:x*x, range(10))

# but we're still missing a lot of stuff...

# in particular...

# keyword arguments

# list comphrehensions

# nested loops

a=5
b=5
c=5
while a:
    a = a - 1
    b = a
    while b:
        c = b
        b = b - 1
        while c:
            c = c - 1
            print a,b,c
        while c:
            pass
        a = 0
    print b
    if 1:
       true
print b

c=2
print c
            
for a in [1,2]:
    for b in [5,6]:
        for c in [7,6]:
            print a,b,c

a=0
b=0
c=0
while a:
    while b:
        while c:
            pass

if 0:
    pass










