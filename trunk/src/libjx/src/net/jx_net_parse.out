State 0:
          module ::= * NEWLINE
          module ::= * network EOI
          network ::= * wiring
          network ::= * wiring body
          network ::= * body
          network ::= * wiring starter
          network ::= * wiring body starter
          network ::= * body starter
          network ::= * starter
          starter ::= * action
          wiring ::= * entry
          wiring ::= * wiring entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * node_name EQUALS node_name parameters NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          body ::= * start
          body ::= * start run
          body ::= * start run stop
          body ::= * run
          body ::= * run stop
          body ::= * stop
          start ::= * START COLON NEWLINE INDENT code DEDENT NEWLINE
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                       NEWLINE shift  75
                          PORT shift  25
                          NODE shift  22
                         IDENT shift  99
                         START shift  54
                           RUN shift  50
                          STOP shift  46
                       starter shift  76
                       network shift  31
                        module accept
                        wiring shift  1
                          body shift  8
                        action shift  82
                         entry shift  61
                     port_decl shift  26
                     node_name shift  29
                    pipe_chain shift  27
                  node_or_port shift  28
                         start shift  19
                           run shift  17
                          stop shift  71

State 1:
      (2) network ::= wiring *
          network ::= wiring * body
          network ::= wiring * starter
          network ::= wiring * body starter
          starter ::= * action
          wiring ::= wiring * entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * node_name EQUALS node_name parameters NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          body ::= * start
          body ::= * start run
          body ::= * start run stop
          body ::= * run
          body ::= * run stop
          body ::= * stop
          start ::= * START COLON NEWLINE INDENT code DEDENT NEWLINE
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PORT shift  25
                          NODE shift  22
                         IDENT shift  99
                         START shift  54
                           RUN shift  50
                          STOP shift  46
                       starter shift  69
                          body shift  9
                        action shift  82
                         entry shift  68
                     port_decl shift  26
                     node_name shift  29
                    pipe_chain shift  27
                  node_or_port shift  28
                         start shift  19
                           run shift  17
                          stop shift  71
                     {default} reduce 2

State 2:
          wiring ::= wiring * entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * node_name EQUALS node_name parameters NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node ::= INDENT wiring * DEDENT NEWLINE
          node ::= INDENT wiring * body DEDENT NEWLINE
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          body ::= * start
          body ::= * start run
          body ::= * start run stop
          body ::= * run
          body ::= * run stop
          body ::= * stop
          start ::= * START COLON NEWLINE INDENT code DEDENT NEWLINE
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE

                          PORT shift  25
                          NODE shift  22
                        DEDENT shift  43
                         IDENT shift  99
                         START shift  54
                           RUN shift  50
                          STOP shift  46
                          body shift  44
                         entry shift  68
                     port_decl shift  26
                     node_name shift  29
                    pipe_chain shift  27
                  node_or_port shift  42
                         start shift  19
                           run shift  17
                          stop shift  71

State 3:
          wiring ::= * entry
          wiring ::= * wiring entry
          entry ::= * port_decl NEWLINE
          port_decl ::= * PORT port_name
          port_decl ::= * port_decl COMMA port_name
          entry ::= * node_name EQUALS node_name NEWLINE
          entry ::= * node_name EQUALS node_name parameters NEWLINE
          entry ::= * pipe_chain NEWLINE
          pipe_chain ::= * node_or_port PIPE node_or_port
          pipe_chain ::= * pipe_chain PIPE node_or_port
          entry ::= * NODE node_name COLON NEWLINE node
          node ::= INDENT * PASS NEWLINE DEDENT NEWLINE
          node ::= INDENT * wiring DEDENT NEWLINE
          node ::= INDENT * wiring body DEDENT NEWLINE
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT

                          PORT shift  25
                          NODE shift  22
                          PASS shift  58
                         IDENT shift  99
                        wiring shift  2
                         entry shift  61
                     port_decl shift  26
                     node_name shift  29
                    pipe_chain shift  27
                  node_or_port shift  42

State 4:
          number ::= * ICON
          number ::= * FCON
          string ::= * SCON
          string ::= * string SCON
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * IDENT
          fpdefs ::= * fpdefs COMMA IDENT
          fpdefs ::= * string
          fpdefs ::= * fpdefs COMMA string
          fpdefs ::= * number
          fpdefs ::= * fpdefs COMMA number

                         IDENT shift  89
                     CLOSE_PAR shift  81
                          ICON shift  95
                          FCON shift  93
                          SCON shift  91
                        string shift  36
                        number shift  90
                   varargslist shift  37
                        fpdefs shift  38

State 5:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          stop ::= STOP COLON NEWLINE INDENT * code DEDENT NEWLINE
          code ::= * PASS
          code ::= * action
          code ::= * code action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PASS shift  79
                         IDENT shift  99
                        action shift  80
                     node_name shift  32
                  node_or_port shift  33
                          code shift  12

State 6:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          run ::= RUN COLON NEWLINE INDENT * code DEDENT NEWLINE
          code ::= * PASS
          code ::= * action
          code ::= * code action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PASS shift  79
                         IDENT shift  99
                        action shift  80
                     node_name shift  32
                  node_or_port shift  33
                          code shift  11

State 7:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          start ::= START COLON NEWLINE INDENT * code DEDENT NEWLINE
          code ::= * PASS
          code ::= * action
          code ::= * code action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                          PASS shift  79
                         IDENT shift  99
                        action shift  80
                     node_name shift  32
                  node_or_port shift  33
                          code shift  10

State 8:
      (4) network ::= body *
          network ::= body * starter
          starter ::= * action
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                         IDENT shift  99
                       starter shift  73
                        action shift  82
                     node_name shift  32
                  node_or_port shift  33
                     {default} reduce 4

State 9:
      (3) network ::= wiring body *
          network ::= wiring body * starter
          starter ::= * action
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                         IDENT shift  99
                       starter shift  84
                        action shift  82
                     node_name shift  32
                  node_or_port shift  33
                     {default} reduce 3

State 10:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          start ::= START COLON NEWLINE INDENT code * DEDENT NEWLINE
          code ::= code * action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                        DEDENT shift  57
                         IDENT shift  99
                        action shift  78
                     node_name shift  32
                  node_or_port shift  33

State 11:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          run ::= RUN COLON NEWLINE INDENT code * DEDENT NEWLINE
          code ::= code * action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                        DEDENT shift  53
                         IDENT shift  99
                        action shift  78
                     node_name shift  32
                  node_or_port shift  33

State 12:
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT
          stop ::= STOP COLON NEWLINE INDENT code * DEDENT NEWLINE
          code ::= code * action
          action ::= * node_or_port OPEN_PAR CLOSE_PAR NEWLINE

                        DEDENT shift  49
                         IDENT shift  99
                        action shift  78
                     node_name shift  32
                  node_or_port shift  33

State 13:
          number ::= * ICON
          number ::= * FCON
          string ::= * SCON
          string ::= * string SCON
          fpdefs ::= fpdefs COMMA * IDENT
          fpdefs ::= fpdefs COMMA * string
          fpdefs ::= fpdefs COMMA * number

                         IDENT shift  87
                          ICON shift  95
                          FCON shift  93
                          SCON shift  91
                        string shift  39
                        number shift  88

State 14:
          pipe_chain ::= node_or_port PIPE * node_or_port
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT

                         IDENT shift  99
                     node_name shift  32
                  node_or_port shift  97

State 15:
          pipe_chain ::= pipe_chain PIPE * node_or_port
          node_or_port ::= * node_name
          node_or_port ::= * node_name DOT port_name
          node_name ::= * IDENT

                         IDENT shift  99
                     node_name shift  32
                  node_or_port shift  94

State 16:
          entry ::= node_name EQUALS node_name * NEWLINE
          entry ::= node_name EQUALS node_name * parameters NEWLINE
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                       NEWLINE shift  98
                      OPEN_PAR shift  4
                    parameters shift  35

State 17:
     (31) body ::= run *
          body ::= run * stop
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE

                          STOP shift  46
                          stop shift  66
                     {default} reduce 31

State 18:
     (29) body ::= start run *
          body ::= start run * stop
          stop ::= * STOP COLON NEWLINE INDENT code DEDENT NEWLINE

                          STOP shift  46
                          stop shift  70
                     {default} reduce 29

State 19:
     (28) body ::= start *
          body ::= start * run
          body ::= start * run stop
          run ::= * RUN COLON NEWLINE INDENT code DEDENT NEWLINE

                           RUN shift  50
                           run shift  18
                     {default} reduce 28

State 20:
          entry ::= NODE node_name COLON NEWLINE * node
          node ::= * INDENT PASS NEWLINE DEDENT NEWLINE
          node ::= * INDENT wiring DEDENT NEWLINE
          node ::= * INDENT wiring body DEDENT NEWLINE

                        INDENT shift  3
                          node shift  102

State 21:
          entry ::= node_name EQUALS * node_name NEWLINE
          entry ::= node_name EQUALS * node_name parameters NEWLINE
          node_name ::= * IDENT

                         IDENT shift  99
                     node_name shift  16

State 22:
          entry ::= NODE * node_name COLON NEWLINE node
          node_name ::= * IDENT

                         IDENT shift  99
                     node_name shift  40

State 23:
          node_or_port ::= node_name DOT * port_name
          port_name ::= * IDENT

                         IDENT shift  100
                     port_name shift  65

State 24:
          port_decl ::= port_decl COMMA * port_name
          port_name ::= * IDENT

                         IDENT shift  100
                     port_name shift  103

State 25:
          port_decl ::= PORT * port_name
          port_name ::= * IDENT

                         IDENT shift  100
                     port_name shift  101

State 26:
          entry ::= port_decl * NEWLINE
          port_decl ::= port_decl * COMMA port_name

                       NEWLINE shift  104
                         COMMA shift  24

State 27:
          entry ::= pipe_chain * NEWLINE
          pipe_chain ::= pipe_chain * PIPE node_or_port

                       NEWLINE shift  92
                          PIPE shift  15

State 28:
          pipe_chain ::= node_or_port * PIPE node_or_port
          action ::= node_or_port * OPEN_PAR CLOSE_PAR NEWLINE

                          PIPE shift  14
                      OPEN_PAR shift  30

State 29:
          entry ::= node_name * EQUALS node_name NEWLINE
          entry ::= node_name * EQUALS node_name parameters NEWLINE
     (24) node_or_port ::= node_name *
          node_or_port ::= node_name * DOT port_name

                        EQUALS shift  21
                           DOT shift  23
                     {default} reduce 24

State 30:
          action ::= node_or_port OPEN_PAR * CLOSE_PAR NEWLINE

                     CLOSE_PAR shift  34

State 31:
          module ::= network * EOI

                           EOI shift  72

State 32:
     (24) node_or_port ::= node_name *
          node_or_port ::= node_name * DOT port_name

                           DOT shift  23
                     {default} reduce 24

State 33:
          action ::= node_or_port * OPEN_PAR CLOSE_PAR NEWLINE

                      OPEN_PAR shift  30

State 34:
          action ::= node_or_port OPEN_PAR CLOSE_PAR * NEWLINE

                       NEWLINE shift  74

State 35:
          entry ::= node_name EQUALS node_name parameters * NEWLINE

                       NEWLINE shift  96

State 36:
          string ::= string * SCON
     (50) fpdefs ::= string *

                          SCON shift  85
                     {default} reduce 50

State 37:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  83

State 38:
     (47) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA IDENT
          fpdefs ::= fpdefs * COMMA string
          fpdefs ::= fpdefs * COMMA number

                         COMMA shift  13
                     {default} reduce 47

State 39:
          string ::= string * SCON
     (51) fpdefs ::= fpdefs COMMA string *

                          SCON shift  85
                     {default} reduce 51

State 40:
          entry ::= NODE node_name * COLON NEWLINE node

                         COLON shift  41

State 41:
          entry ::= NODE node_name COLON * NEWLINE node

                       NEWLINE shift  20

State 42:
          pipe_chain ::= node_or_port * PIPE node_or_port

                          PIPE shift  14

State 43:
          node ::= INDENT wiring DEDENT * NEWLINE

                       NEWLINE shift  64

State 44:
          node ::= INDENT wiring body * DEDENT NEWLINE

                        DEDENT shift  45

State 45:
          node ::= INDENT wiring body DEDENT * NEWLINE

                       NEWLINE shift  67

State 46:
          stop ::= STOP * COLON NEWLINE INDENT code DEDENT NEWLINE

                         COLON shift  47

State 47:
          stop ::= STOP COLON * NEWLINE INDENT code DEDENT NEWLINE

                       NEWLINE shift  48

State 48:
          stop ::= STOP COLON NEWLINE * INDENT code DEDENT NEWLINE

                        INDENT shift  5

State 49:
          stop ::= STOP COLON NEWLINE INDENT code DEDENT * NEWLINE

                       NEWLINE shift  77

State 50:
          run ::= RUN * COLON NEWLINE INDENT code DEDENT NEWLINE

                         COLON shift  51

State 51:
          run ::= RUN COLON * NEWLINE INDENT code DEDENT NEWLINE

                       NEWLINE shift  52

State 52:
          run ::= RUN COLON NEWLINE * INDENT code DEDENT NEWLINE

                        INDENT shift  6

State 53:
          run ::= RUN COLON NEWLINE INDENT code DEDENT * NEWLINE

                       NEWLINE shift  63

State 54:
          start ::= START * COLON NEWLINE INDENT code DEDENT NEWLINE

                         COLON shift  55

State 55:
          start ::= START COLON * NEWLINE INDENT code DEDENT NEWLINE

                       NEWLINE shift  56

State 56:
          start ::= START COLON NEWLINE * INDENT code DEDENT NEWLINE

                        INDENT shift  7

State 57:
          start ::= START COLON NEWLINE INDENT code DEDENT * NEWLINE

                       NEWLINE shift  62

State 58:
          node ::= INDENT PASS * NEWLINE DEDENT NEWLINE

                       NEWLINE shift  59

State 59:
          node ::= INDENT PASS NEWLINE * DEDENT NEWLINE

                        DEDENT shift  60

State 60:
          node ::= INDENT PASS NEWLINE DEDENT * NEWLINE

                       NEWLINE shift  86

State 61:
     (10) wiring ::= entry *

                     {default} reduce 10

State 62:
     (34) start ::= START COLON NEWLINE INDENT code DEDENT NEWLINE *

                     {default} reduce 34

State 63:
     (35) run ::= RUN COLON NEWLINE INDENT code DEDENT NEWLINE *

                     {default} reduce 35

State 64:
     (22) node ::= INDENT wiring DEDENT NEWLINE *

                     {default} reduce 22

State 65:
     (25) node_or_port ::= node_name DOT port_name *

                     {default} reduce 25

State 66:
     (32) body ::= run stop *

                     {default} reduce 32

State 67:
     (23) node ::= INDENT wiring body DEDENT NEWLINE *

                     {default} reduce 23

State 68:
     (11) wiring ::= wiring entry *

                     {default} reduce 11

State 69:
      (5) network ::= wiring starter *

                     {default} reduce 5

State 70:
     (30) body ::= start run stop *

                     {default} reduce 30

State 71:
     (33) body ::= stop *

                     {default} reduce 33

State 72:
      (1) module ::= network EOI *

                     {default} reduce 1

State 73:
      (7) network ::= body starter *

                     {default} reduce 7

State 74:
     (40) action ::= node_or_port OPEN_PAR CLOSE_PAR NEWLINE *

                     {default} reduce 40

State 75:
      (0) module ::= NEWLINE *

                     {default} reduce 0

State 76:
      (8) network ::= starter *

                     {default} reduce 8

State 77:
     (36) stop ::= STOP COLON NEWLINE INDENT code DEDENT NEWLINE *

                     {default} reduce 36

State 78:
     (39) code ::= code action *

                     {default} reduce 39

State 79:
     (37) code ::= PASS *

                     {default} reduce 37

State 80:
     (38) code ::= action *

                     {default} reduce 38

State 81:
     (45) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 45

State 82:
      (9) starter ::= action *

                     {default} reduce 9

State 83:
     (46) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 46

State 84:
      (6) network ::= wiring body starter *

                     {default} reduce 6

State 85:
     (44) string ::= string SCON *

                     {default} reduce 44

State 86:
     (21) node ::= INDENT PASS NEWLINE DEDENT NEWLINE *

                     {default} reduce 21

State 87:
     (49) fpdefs ::= fpdefs COMMA IDENT *

                     {default} reduce 49

State 88:
     (53) fpdefs ::= fpdefs COMMA number *

                     {default} reduce 53

State 89:
     (48) fpdefs ::= IDENT *

                     {default} reduce 48

State 90:
     (52) fpdefs ::= number *

                     {default} reduce 52

State 91:
     (43) string ::= SCON *

                     {default} reduce 43

State 92:
     (17) entry ::= pipe_chain NEWLINE *

                     {default} reduce 17

State 93:
     (42) number ::= FCON *

                     {default} reduce 42

State 94:
     (19) pipe_chain ::= pipe_chain PIPE node_or_port *

                     {default} reduce 19

State 95:
     (41) number ::= ICON *

                     {default} reduce 41

State 96:
     (16) entry ::= node_name EQUALS node_name parameters NEWLINE *

                     {default} reduce 16

State 97:
     (18) pipe_chain ::= node_or_port PIPE node_or_port *

                     {default} reduce 18

State 98:
     (15) entry ::= node_name EQUALS node_name NEWLINE *

                     {default} reduce 15

State 99:
     (26) node_name ::= IDENT *

                     {default} reduce 26

State 100:
     (27) port_name ::= IDENT *

                     {default} reduce 27

State 101:
     (13) port_decl ::= PORT port_name *

                     {default} reduce 13

State 102:
     (20) entry ::= NODE node_name COLON NEWLINE node *

                     {default} reduce 20

State 103:
     (14) port_decl ::= port_decl COMMA port_name *

                     {default} reduce 14

State 104:
     (12) entry ::= port_decl NEWLINE *

                     {default} reduce 12

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: NEWLINE
    3: EOI
    4: PORT
    5: COMMA
    6: EQUALS
    7: PIPE
    8: NODE
    9: COLON
   10: INDENT
   11: PASS
   12: DEDENT
   13: DOT
   14: IDENT
   15: START
   16: RUN
   17: STOP
   18: OPEN_PAR
   19: CLOSE_PAR
   20: ICON
   21: FCON
   22: SCON
   23: error:
   24: description:
   25: starter: IDENT
   26: string: SCON
   27: network: PORT NODE IDENT START RUN STOP
   28: module: NEWLINE PORT NODE IDENT START RUN STOP
   29: wiring: PORT NODE IDENT
   30: body: START RUN STOP
   31: action: IDENT
   32: entry: PORT NODE IDENT
   33: port_decl: PORT
   34: port_name: IDENT
   35: node_name: IDENT
   36: parameters: OPEN_PAR
   37: pipe_chain: IDENT
   38: node_or_port: IDENT
   39: node: INDENT
   40: start: START
   41: run: RUN
   42: stop: STOP
   43: code: PASS IDENT
   44: number: ICON FCON
   45: varargslist: IDENT ICON FCON SCON
   46: fpdefs: IDENT ICON FCON SCON
