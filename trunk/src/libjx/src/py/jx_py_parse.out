State 0:
          single_input ::= * EOI
          single_input ::= * NEWLINE
          single_input ::= * simple_stmt
          single_input ::= * compound_stmt NEWLINE
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           EOI shift  123
                       NEWLINE shift  125
                           DEF shift  102
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                            IF shift  34
                         WHILE shift  37
                           FOR shift  44
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  164
                   simple_stmt shift  126
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                  single_input accept
                 compound_stmt shift  105
                       funcdef shift  225
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       if_stmt shift  222
                    while_stmt shift  223
                      for_stmt shift  224
                      classdef shift  226
                       if_head shift  76
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 1:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT * stmts DEDENT
          suite ::= NEWLINE INDENT * stmts NEWLINE DEDENT
          stmts ::= * stmts simple_stmt
          stmts ::= * stmts NEWLINE simple_stmt
          stmts ::= * stmts compound_stmt
          stmts ::= * stmts NEWLINE compound_stmt
          stmts ::= * simple_stmt
          stmts ::= * NEWLINE simple_stmt
          stmts ::= * compound_stmt
          stmts ::= * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  4
                           DEF shift  102
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                            IF shift  34
                         WHILE shift  37
                           FOR shift  44
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  164
                   simple_stmt shift  118
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                 compound_stmt shift  121
                       funcdef shift  225
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       if_stmt shift  222
                    while_stmt shift  223
                      for_stmt shift  224
                      classdef shift  226
                       if_head shift  76
                         stmts shift  2
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 2:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts * DEDENT
          suite ::= NEWLINE INDENT stmts * NEWLINE DEDENT
          stmts ::= stmts * simple_stmt
          stmts ::= stmts * NEWLINE simple_stmt
          stmts ::= stmts * compound_stmt
          stmts ::= stmts * NEWLINE compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  3
                           DEF shift  102
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                            IF shift  34
                         WHILE shift  37
                           FOR shift  44
                        DEDENT shift  233
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  164
                   simple_stmt shift  116
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                 compound_stmt shift  117
                       funcdef shift  225
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       if_stmt shift  222
                    while_stmt shift  223
                      for_stmt shift  224
                      classdef shift  226
                       if_head shift  76
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 3:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          suite ::= NEWLINE INDENT stmts NEWLINE * DEDENT
          stmts ::= stmts NEWLINE * simple_stmt
          stmts ::= stmts NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  102
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                            IF shift  34
                         WHILE shift  37
                           FOR shift  44
                        DEDENT shift  234
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  164
                   simple_stmt shift  235
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                 compound_stmt shift  236
                       funcdef shift  225
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       if_stmt shift  222
                    while_stmt shift  223
                      for_stmt shift  224
                      classdef shift  226
                       if_head shift  76
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 4:
          funcdef ::= * DEF NAME parameters COLON suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          compound_stmt ::= * if_stmt
          compound_stmt ::= * while_stmt
          compound_stmt ::= * for_stmt
          compound_stmt ::= * funcdef
          compound_stmt ::= * classdef
          if_stmt ::= * IF test COLON suite
          if_stmt ::= * IF test COLON suite ELSE COLON suite
          if_head ::= * IF test COLON suite ELIF test COLON suite
          if_head ::= * if_head ELIF test COLON suite
          if_stmt ::= * if_head ELSE COLON suite
          if_stmt ::= * if_head
          while_stmt ::= * WHILE test COLON suite
          for_stmt ::= * FOR exprlist IN testlist COLON suite
          stmts ::= NEWLINE * simple_stmt
          stmts ::= NEWLINE * compound_stmt
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= * CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= * CLASS NAME COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                           DEF shift  102
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                            IF shift  34
                         WHILE shift  37
                           FOR shift  44
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                         CLASS shift  96
                          SCON shift  164
                   simple_stmt shift  119
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                 compound_stmt shift  120
                       funcdef shift  225
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       if_stmt shift  222
                    while_stmt shift  223
                      for_stmt shift  224
                      classdef shift  226
                       if_head shift  76
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 5:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= if_head ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  229
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 6:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  238
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 7:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          while_stmt ::= WHILE test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  231
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 8:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON suite ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  227
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 9:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= IF test COLON * suite
          if_stmt ::= IF test COLON * suite ELSE COLON suite
          if_head ::= IF test COLON * suite ELIF test COLON suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  80
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 10:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_head ::= IF test COLON suite ELIF test COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  228
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 11:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          if_stmt ::= if_head ELSE COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  230
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 12:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON * suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  237
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 13:
          funcdef ::= DEF NAME parameters COLON * suite
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  128
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 14:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          for_stmt ::= FOR exprlist IN testlist COLON * suite
          suite ::= * simple_stmt
          suite ::= * NEWLINE simple_stmt
          suite ::= * NEWLINE INDENT stmts DEDENT
          suite ::= * NEWLINE INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  15
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  220
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                         suite shift  232
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 15:
          simple_stmt ::= * small_stmt NEWLINE
          simple_stmt ::= * testlist NEWLINE
          simple_stmt ::= * testlist SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON NEWLINE
          simple_stmt ::= * small_stmt SEMICOLON small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          suite ::= NEWLINE * simple_stmt
          suite ::= NEWLINE * INDENT stmts DEDENT
          suite ::= NEWLINE * INDENT stmts NEWLINE DEDENT
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                        INDENT shift  1
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                   simple_stmt shift  221
                    small_stmt shift  75
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                      testlist shift  71
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 16:
          simple_stmt ::= small_stmt SEMICOLON * NEWLINE
          simple_stmt ::= small_stmt SEMICOLON * small_stmt NEWLINE
          small_stmt ::= * expr_stmt
          small_stmt ::= * print_stmt
          small_stmt ::= * del_stmt
          small_stmt ::= * pass_stmt
          small_stmt ::= * flow_stmt
          del_stmt ::= * DEL exprlist
          pass_stmt ::= * PASS
          flow_stmt ::= * return_stmt
          return_stmt ::= * RETURN testlist
          expr_stmt ::= * testlist PLUS_EQUALS testlist
          expr_stmt ::= * testlist MINUS_EQUALS testlist
          expr_stmt ::= * testlist EQUALS testlist
          print_stmt ::= * PRINT
          print_stmt ::= * PRINT test
          print_stmt ::= * print_stmt COMMA test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                       NEWLINE shift  130
                          NAME shift  165
                      OPEN_PAR shift  28
                           DEL shift  43
                          PASS shift  208
                        RETURN shift  21
                         PRINT shift  41
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                    small_stmt shift  83
                    print_stmt shift  94
                        string shift  97
                          atom shift  54
                      testlist shift  73
                     expr_stmt shift  132
                      del_stmt shift  201
                     pass_stmt shift  202
                     flow_stmt shift  203
                   return_stmt shift  209
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 17:
          for_stmt ::= FOR exprlist IN * testlist COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      testlist shift  87
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 18:
          expr_stmt ::= testlist MINUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      testlist shift  215
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 19:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          classdef ::= CLASS NAME OPEN_PAR * testlist CLOSE_PAR COLON suite
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      testlist shift  99
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 20:
          expr_stmt ::= testlist PLUS_EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      testlist shift  214
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 21:
          return_stmt ::= RETURN * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      testlist shift  210
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 22:
          expr_stmt ::= testlist EQUALS * testlist
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= * testlist_2 COMMA test
          testlist_2 ::= * test COMMA test
          testlist_3 ::= * test COMMA
          testlist ::= * test
          testlist ::= * testlist_2
          testlist ::= * testlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      testlist shift  216
                          test shift  86
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    testlist_2 shift  88
                    testlist_3 shift  213

State 23:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          call_trailer ::= OPEN_PAR * CLOSE_PAR
          call_trailer ::= OPEN_PAR * arglist CLOSE_PAR
          arglist ::= * argument
          arglist ::= * arglist COMMA argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                     CLOSE_PAR shift  183
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  186
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                       arglist shift  77
                      argument shift  187

State 24:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          access_trailer ::= OPEN_RECT_BRACE * subscriptlist CLOSE_RECT_BRACE
          subscriptlist ::= * subscript
          subscript ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  191
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                 subscriptlist shift  107
                     subscript shift  190

State 25:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= OPEN_CURLY_BRACE * dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= * test COLON test
          dictmaker ::= * dictmaker COMMA test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
             CLOSE_CURLY_BRACE shift  153
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  90
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                     dictmaker shift  78

State 26:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= OPEN_RECT_BRACE * listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          listmaker ::= * test
          listmaker ::= * listmaker COMMA test
          listmaker ::= * listmaker NEWLINE
          listmaker ::= * listmaker INDENT
          listmaker ::= * listmaker DEDENT
          listmaker ::= * listmaker COMMA NEWLINE
          listmaker ::= * listmaker COMMA INDENT
          listmaker ::= * listmaker COMMA DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              CLOSE_RECT_BRACE shift  151
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  176
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                     listmaker shift  72

State 27:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          arglist ::= arglist COMMA * argument
          argument ::= * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  186
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                      argument shift  185

State 28:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          testlist_gexp ::= * test
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= OPEN_PAR * testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  179
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                 testlist_gexp shift  84

State 29:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          listmaker ::= listmaker COMMA * test
          listmaker ::= listmaker COMMA * NEWLINE
          listmaker ::= listmaker COMMA * INDENT
          listmaker ::= listmaker COMMA * DEDENT
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                       NEWLINE shift  170
                          NAME shift  165
                      OPEN_PAR shift  28
                        INDENT shift  171
                        DEDENT shift  172
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  169
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 30:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          lambdef ::= LAMBDA varargslist COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  166
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 31:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  167
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 32:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= test COMMA * test
    (134) testlist_3 ::= test COMMA *

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  212
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                     {default} reduce 134

State 33:
          print_stmt ::= print_stmt COMMA * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  133
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 34:
          if_stmt ::= IF * test COLON suite
          if_stmt ::= IF * test COLON suite ELSE COLON suite
          if_head ::= IF * test COLON suite ELIF test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  104
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 35:
          if_head ::= IF test COLON suite ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  95
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 36:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= LAMBDA COLON * test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  163
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 37:
          while_stmt ::= WHILE * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  82
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 38:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= test COLON * test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  168
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 39:
          if_head ::= if_head ELIF * test COLON suite
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  114
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 40:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          dictmaker ::= dictmaker COMMA * test COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  92
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 41:
     (27) print_stmt ::= PRINT *
          print_stmt ::= PRINT * test
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  217
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                     {default} reduce 27

State 42:
          test ::= * or_test
          test ::= * lambdef
          or_test ::= * and_test
          and_test ::= * not_test
          not_test ::= * NOT not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          lambdef ::= * LAMBDA COLON test
          lambdef ::= * LAMBDA varargslist COLON test
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          testlist_2 ::= testlist_2 COMMA * test

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                        LAMBDA shift  65
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          test shift  211
                       or_test shift  134
                       lambdef shift  135
                      and_test shift  136
                      not_test shift  137
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 43:
          del_stmt ::= DEL * exprlist
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      exprlist shift  204
                          expr shift  93
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    exprlist_2 shift  98
                    exprlist_3 shift  207

State 44:
          for_stmt ::= FOR * exprlist IN testlist COLON suite
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= * exprlist_2 COMMA expr
          exprlist_2 ::= * expr COMMA expr
          exprlist_3 ::= * expr COMMA
          exprlist ::= * expr
          exprlist ::= * exprlist_2
          exprlist ::= * exprlist_3

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      exprlist shift  85
                          expr shift  93
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                    exprlist_2 shift  98
                    exprlist_3 shift  207

State 45:
          not_test ::= * NOT not_test
          not_test ::= NOT * not_test
          not_test ::= * comparison
          comparison ::= * expr
          comparison ::= * expr LESS_THAN expr
          comparison ::= * expr LESS_THAN_OR_EQ expr
          comparison ::= * expr EQ_EQ expr
          comparison ::= * expr NOT_EQ expr
          comparison ::= * expr GREATER_THAN expr
          comparison ::= * expr GREATER_THAN_OR_EQ expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                           NOT shift  45
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                      not_test shift  138
                    comparison shift  139
                          expr shift  70
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 46:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= exprlist_2 COMMA * expr

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  205
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 47:
          comparison ::= expr GREATER_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  200
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 48:
          comparison ::= expr LESS_THAN_OR_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  196
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 49:
          comparison ::= expr LESS_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  140
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 50:
          comparison ::= expr NOT_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  198
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 51:
          comparison ::= expr EQ_EQ * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  197
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 52:
          comparison ::= expr GREATER_THAN * expr
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  199
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145

State 53:
          expr ::= * xor_expr
          xor_expr ::= * and_expr
          and_expr ::= * shift_expr
          shift_expr ::= * arith_expr
          arith_expr ::= * term
          arith_expr ::= * arith_expr PLUS term
          arith_expr ::= * arith_expr MINUS term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME
          exprlist_2 ::= expr COMMA * expr
    (140) exprlist_3 ::= expr COMMA *

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          expr shift  206
                      xor_expr shift  141
                      and_expr shift  142
                    shift_expr shift  143
                    arith_expr shift  81
                          term shift  115
                        factor shift  74
                         power shift  145
                     {default} reduce 140

State 54:
     (85) power ::= atom *
          power ::= atom * DOUBLE_ASTERISK factor
          power ::= atom * dot_trailer_list
          power ::= atom * call_trailer_list
          power ::= atom * access_trailer_list
          call_trailer_list ::= * call_trailer
          call_trailer_list ::= * call_trailer_list call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR
          access_trailer_list ::= * access_trailer
          access_trailer_list ::= * access_trailer_list access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE
          dot_trailer_list ::= * dot_trailer
          dot_trailer ::= * DOT NAME

                      OPEN_PAR shift  23
               DOUBLE_ASTERISK shift  58
               OPEN_RECT_BRACE shift  24
                           DOT shift  91
              dot_trailer_list shift  181
             call_trailer_list shift  67
           access_trailer_list shift  68
                  call_trailer shift  192
                access_trailer shift  193
                   dot_trailer shift  194
                     {default} reduce 85

State 55:
          arith_expr ::= arith_expr PLUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          term shift  89
                        factor shift  74
                         power shift  145

State 56:
          arith_expr ::= arith_expr MINUS * term
          term ::= * factor
          term ::= * term ASTERISK factor
          term ::= * factor SLASH factor
          term ::= * factor SLASHSLASH factor
          term ::= * factor PERCENT factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                          term shift  108
                        factor shift  74
                         power shift  145

State 57:
          term ::= term ASTERISK * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  144
                         power shift  145

State 58:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= atom DOUBLE_ASTERISK * factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  149
                         power shift  145

State 59:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= MINUS * factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  147
                         power shift  145

State 60:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= PLUS * factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  146
                         power shift  145

State 61:
          term ::= factor SLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  150
                         power shift  145

State 62:
          term ::= factor SLASHSLASH * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  177
                         power shift  145

State 63:
          term ::= factor PERCENT * factor
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  178
                         power shift  145

State 64:
          factor ::= * power
          factor ::= * PLUS factor
          factor ::= * MINUS factor
          factor ::= * TILDE factor
          factor ::= TILDE * factor
          power ::= * atom
          power ::= * atom DOUBLE_ASTERISK factor
          power ::= * atom dot_trailer_list
          power ::= * atom call_trailer_list
          power ::= * atom access_trailer_list
          atom ::= * OPEN_PAR testlist_gexp CLOSE_PAR
          atom ::= * OPEN_RECT_BRACE CLOSE_RECT_BRACE
          atom ::= * OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE
          atom ::= * OPEN_CURLY_BRACE CLOSE_CURLY_BRACE
          atom ::= * OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE
          atom ::= * ICON
          atom ::= * FCON
          atom ::= * NONE
          atom ::= * TRUE
          atom ::= * FALSE
          atom ::= * string
          string ::= * SCON
          string ::= * string SCON
          atom ::= * NAME

                          NAME shift  165
                      OPEN_PAR shift  28
                          PLUS shift  60
                         MINUS shift  59
                         TILDE shift  64
               OPEN_RECT_BRACE shift  26
              OPEN_CURLY_BRACE shift  25
                          ICON shift  155
                          FCON shift  156
                          NONE shift  157
                          TRUE shift  158
                         FALSE shift  159
                          SCON shift  164
                        string shift  97
                          atom shift  54
                        factor shift  148
                         power shift  145

State 65:
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME
          lambdef ::= LAMBDA * COLON test
          lambdef ::= LAMBDA * varargslist COLON test

                          NAME shift  162
                         COLON shift  36
                   varargslist shift  101
                        fpdefs shift  110

State 66:
          parameters ::= OPEN_PAR * CLOSE_PAR
          parameters ::= OPEN_PAR * varargslist CLOSE_PAR
          varargslist ::= * fpdefs
          fpdefs ::= * NAME
          fpdefs ::= * fpdefs COMMA NAME

                          NAME shift  162
                     CLOSE_PAR shift  122
                   varargslist shift  103
                        fpdefs shift  110

State 67:
     (88) power ::= atom call_trailer_list *
          call_trailer_list ::= call_trailer_list * call_trailer
          call_trailer ::= * OPEN_PAR CLOSE_PAR
          call_trailer ::= * OPEN_PAR arglist CLOSE_PAR

                      OPEN_PAR shift  23
                  call_trailer shift  182
                     {default} reduce 88

State 68:
     (89) power ::= atom access_trailer_list *
          access_trailer_list ::= access_trailer_list * access_trailer
          access_trailer ::= * OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE

               OPEN_RECT_BRACE shift  24
                access_trailer shift  188
                     {default} reduce 89

State 69:
          funcdef ::= DEF NAME * parameters COLON suite
          parameters ::= * OPEN_PAR CLOSE_PAR
          parameters ::= * OPEN_PAR varargslist CLOSE_PAR

                      OPEN_PAR shift  66
                    parameters shift  113

State 70:
     (61) comparison ::= expr *
          comparison ::= expr * LESS_THAN expr
          comparison ::= expr * LESS_THAN_OR_EQ expr
          comparison ::= expr * EQ_EQ expr
          comparison ::= expr * NOT_EQ expr
          comparison ::= expr * GREATER_THAN expr
          comparison ::= expr * GREATER_THAN_OR_EQ expr

                     LESS_THAN shift  49
               LESS_THAN_OR_EQ shift  48
                         EQ_EQ shift  51
                        NOT_EQ shift  50
                  GREATER_THAN shift  52
            GREATER_THAN_OR_EQ shift  47
                     {default} reduce 61

State 71:
          simple_stmt ::= testlist * NEWLINE
          simple_stmt ::= testlist * SEMICOLON NEWLINE
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                       NEWLINE shift  218
                     SEMICOLON shift  112
                   PLUS_EQUALS shift  20
                  MINUS_EQUALS shift  18
                        EQUALS shift  22

State 72:
          atom ::= OPEN_RECT_BRACE listmaker * CLOSE_RECT_BRACE
          listmaker ::= listmaker * COMMA test
          listmaker ::= listmaker * NEWLINE
          listmaker ::= listmaker * INDENT
          listmaker ::= listmaker * DEDENT
          listmaker ::= listmaker * COMMA NEWLINE
          listmaker ::= listmaker * COMMA INDENT
          listmaker ::= listmaker * COMMA DEDENT

                       NEWLINE shift  173
                         COMMA shift  29
                        INDENT shift  174
                        DEDENT shift  175
              CLOSE_RECT_BRACE shift  152

State 73:
          expr_stmt ::= testlist * PLUS_EQUALS testlist
          expr_stmt ::= testlist * MINUS_EQUALS testlist
          expr_stmt ::= testlist * EQUALS testlist

                   PLUS_EQUALS shift  20
                  MINUS_EQUALS shift  18
                        EQUALS shift  22

State 74:
     (75) term ::= factor *
          term ::= factor * SLASH factor
          term ::= factor * SLASHSLASH factor
          term ::= factor * PERCENT factor

                         SLASH shift  61
                    SLASHSLASH shift  62
                       PERCENT shift  63
                     {default} reduce 75

State 75:
          simple_stmt ::= small_stmt * NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON NEWLINE
          simple_stmt ::= small_stmt * SEMICOLON small_stmt NEWLINE

                       NEWLINE shift  129
                     SEMICOLON shift  16

State 76:
          if_head ::= if_head * ELIF test COLON suite
          if_stmt ::= if_head * ELSE COLON suite
     (40) if_stmt ::= if_head *

                          ELSE shift  111
                          ELIF shift  39
                     {default} reduce 40

State 77:
          call_trailer ::= OPEN_PAR arglist * CLOSE_PAR
          arglist ::= arglist * COMMA argument

                     CLOSE_PAR shift  184
                         COMMA shift  27

State 78:
          atom ::= OPEN_CURLY_BRACE dictmaker * CLOSE_CURLY_BRACE
          dictmaker ::= dictmaker * COMMA test COLON test

                         COMMA shift  40
             CLOSE_CURLY_BRACE shift  154

State 79:
          classdef ::= CLASS NAME * OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS NAME * COLON suite

                         COLON shift  6
                      OPEN_PAR shift  19

State 80:
     (35) if_stmt ::= IF test COLON suite *
          if_stmt ::= IF test COLON suite * ELSE COLON suite
          if_head ::= IF test COLON suite * ELIF test COLON suite

                          ELSE shift  109
                          ELIF shift  35
                     {default} reduce 35

State 81:
     (71) shift_expr ::= arith_expr *
          arith_expr ::= arith_expr * PLUS term
          arith_expr ::= arith_expr * MINUS term

                          PLUS shift  55
                         MINUS shift  56
                     {default} reduce 71

State 82:
          while_stmt ::= WHILE test * COLON suite

                         COLON shift  7

State 83:
          simple_stmt ::= small_stmt SEMICOLON small_stmt * NEWLINE

                       NEWLINE shift  131

State 84:
          atom ::= OPEN_PAR testlist_gexp * CLOSE_PAR

                     CLOSE_PAR shift  180

State 85:
          for_stmt ::= FOR exprlist * IN testlist COLON suite

                            IN shift  17

State 86:
          testlist_2 ::= test * COMMA test
          testlist_3 ::= test * COMMA
    (135) testlist ::= test *

                         COMMA shift  32
                     {default} reduce 135

State 87:
          for_stmt ::= FOR exprlist IN testlist * COLON suite

                         COLON shift  14

State 88:
          testlist_2 ::= testlist_2 * COMMA test
    (136) testlist ::= testlist_2 *

                         COMMA shift  42
                     {default} reduce 136

State 89:
     (73) arith_expr ::= arith_expr PLUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  57
                     {default} reduce 73

State 90:
          dictmaker ::= test * COLON test

                         COLON shift  38

State 91:
          dot_trailer ::= DOT * NAME

                          NAME shift  195

State 92:
          dictmaker ::= dictmaker COMMA test * COLON test

                         COLON shift  31

State 93:
          exprlist_2 ::= expr * COMMA expr
          exprlist_3 ::= expr * COMMA
    (141) exprlist ::= expr *

                         COMMA shift  53
                     {default} reduce 141

State 94:
     (16) small_stmt ::= print_stmt *
          print_stmt ::= print_stmt * COMMA test

                         COMMA shift  33
                     {default} reduce 16

State 95:
          if_head ::= IF test COLON suite ELIF test * COLON suite

                         COLON shift  10

State 96:
          classdef ::= CLASS * NAME OPEN_PAR testlist CLOSE_PAR COLON suite
          classdef ::= CLASS * NAME COLON suite

                          NAME shift  79

State 97:
    (100) atom ::= string *
          string ::= string * SCON

                          SCON shift  160
                     {default} reduce 100

State 98:
          exprlist_2 ::= exprlist_2 * COMMA expr
    (142) exprlist ::= exprlist_2 *

                         COMMA shift  46
                     {default} reduce 142

State 99:
          classdef ::= CLASS NAME OPEN_PAR testlist * CLOSE_PAR COLON suite

                     CLOSE_PAR shift  100

State 100:
          classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR * COLON suite

                         COLON shift  12

State 101:
          lambdef ::= LAMBDA varargslist * COLON test

                         COLON shift  30

State 102:
          funcdef ::= DEF * NAME parameters COLON suite

                          NAME shift  69

State 103:
          parameters ::= OPEN_PAR varargslist * CLOSE_PAR

                     CLOSE_PAR shift  124

State 104:
          if_stmt ::= IF test * COLON suite
          if_stmt ::= IF test * COLON suite ELSE COLON suite
          if_head ::= IF test * COLON suite ELIF test COLON suite

                         COLON shift  9

State 105:
          single_input ::= compound_stmt * NEWLINE

                       NEWLINE shift  127

State 106:
          fpdefs ::= fpdefs COMMA * NAME

                          NAME shift  161

State 107:
          access_trailer ::= OPEN_RECT_BRACE subscriptlist * CLOSE_RECT_BRACE

              CLOSE_RECT_BRACE shift  189

State 108:
     (74) arith_expr ::= arith_expr MINUS term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  57
                     {default} reduce 74

State 109:
          if_stmt ::= IF test COLON suite ELSE * COLON suite

                         COLON shift  8

State 110:
      (7) varargslist ::= fpdefs *
          fpdefs ::= fpdefs * COMMA NAME

                         COMMA shift  106
                     {default} reduce 7

State 111:
          if_stmt ::= if_head ELSE * COLON suite

                         COLON shift  11

State 112:
          simple_stmt ::= testlist SEMICOLON * NEWLINE

                       NEWLINE shift  219

State 113:
          funcdef ::= DEF NAME parameters * COLON suite

                         COLON shift  13

State 114:
          if_head ::= if_head ELIF test * COLON suite

                         COLON shift  5

State 115:
     (72) arith_expr ::= term *
          term ::= term * ASTERISK factor

                      ASTERISK shift  57
                     {default} reduce 72

State 116:
     (47) stmts ::= stmts simple_stmt *

                     {default} reduce 47

State 117:
     (49) stmts ::= stmts compound_stmt *

                     {default} reduce 49

State 118:
     (51) stmts ::= simple_stmt *

                     {default} reduce 51

State 119:
     (52) stmts ::= NEWLINE simple_stmt *

                     {default} reduce 52

State 120:
     (54) stmts ::= NEWLINE compound_stmt *

                     {default} reduce 54

State 121:
     (53) stmts ::= compound_stmt *

                     {default} reduce 53

State 122:
      (5) parameters ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 5

State 123:
      (0) single_input ::= EOI *

                     {default} reduce 0

State 124:
      (6) parameters ::= OPEN_PAR varargslist CLOSE_PAR *

                     {default} reduce 6

State 125:
      (1) single_input ::= NEWLINE *

                     {default} reduce 1

State 126:
      (2) single_input ::= simple_stmt *

                     {default} reduce 2

State 127:
      (3) single_input ::= compound_stmt NEWLINE *

                     {default} reduce 3

State 128:
      (4) funcdef ::= DEF NAME parameters COLON suite *

                     {default} reduce 4

State 129:
     (10) simple_stmt ::= small_stmt NEWLINE *

                     {default} reduce 10

State 130:
     (13) simple_stmt ::= small_stmt SEMICOLON NEWLINE *

                     {default} reduce 13

State 131:
     (14) simple_stmt ::= small_stmt SEMICOLON small_stmt NEWLINE *

                     {default} reduce 14

State 132:
     (15) small_stmt ::= expr_stmt *

                     {default} reduce 15

State 133:
     (29) print_stmt ::= print_stmt COMMA test *

                     {default} reduce 29

State 134:
     (55) test ::= or_test *

                     {default} reduce 55

State 135:
     (56) test ::= lambdef *

                     {default} reduce 56

State 136:
     (57) or_test ::= and_test *

                     {default} reduce 57

State 137:
     (58) and_test ::= not_test *

                     {default} reduce 58

State 138:
     (59) not_test ::= NOT not_test *

                     {default} reduce 59

State 139:
     (60) not_test ::= comparison *

                     {default} reduce 60

State 140:
     (62) comparison ::= expr LESS_THAN expr *

                     {default} reduce 62

State 141:
     (68) expr ::= xor_expr *

                     {default} reduce 68

State 142:
     (69) xor_expr ::= and_expr *

                     {default} reduce 69

State 143:
     (70) and_expr ::= shift_expr *

                     {default} reduce 70

State 144:
     (76) term ::= term ASTERISK factor *

                     {default} reduce 76

State 145:
     (80) factor ::= power *

                     {default} reduce 80

State 146:
     (81) factor ::= PLUS factor *

                     {default} reduce 81

State 147:
     (82) factor ::= MINUS factor *

                     {default} reduce 82

State 148:
     (83) factor ::= TILDE factor *

                     {default} reduce 83

State 149:
     (86) power ::= atom DOUBLE_ASTERISK factor *

                     {default} reduce 86

State 150:
     (77) term ::= factor SLASH factor *

                     {default} reduce 77

State 151:
     (91) atom ::= OPEN_RECT_BRACE CLOSE_RECT_BRACE *

                     {default} reduce 91

State 152:
     (92) atom ::= OPEN_RECT_BRACE listmaker CLOSE_RECT_BRACE *

                     {default} reduce 92

State 153:
     (93) atom ::= OPEN_CURLY_BRACE CLOSE_CURLY_BRACE *

                     {default} reduce 93

State 154:
     (94) atom ::= OPEN_CURLY_BRACE dictmaker CLOSE_CURLY_BRACE *

                     {default} reduce 94

State 155:
     (95) atom ::= ICON *

                     {default} reduce 95

State 156:
     (96) atom ::= FCON *

                     {default} reduce 96

State 157:
     (97) atom ::= NONE *

                     {default} reduce 97

State 158:
     (98) atom ::= TRUE *

                     {default} reduce 98

State 159:
     (99) atom ::= FALSE *

                     {default} reduce 99

State 160:
    (130) string ::= string SCON *

                     {default} reduce 130

State 161:
      (9) fpdefs ::= fpdefs COMMA NAME *

                     {default} reduce 9

State 162:
      (8) fpdefs ::= NAME *

                     {default} reduce 8

State 163:
    (109) lambdef ::= LAMBDA COLON test *

                     {default} reduce 109

State 164:
    (129) string ::= SCON *

                     {default} reduce 129

State 165:
    (131) atom ::= NAME *

                     {default} reduce 131

State 166:
    (110) lambdef ::= LAMBDA varargslist COLON test *

                     {default} reduce 110

State 167:
    (123) dictmaker ::= dictmaker COMMA test COLON test *

                     {default} reduce 123

State 168:
    (122) dictmaker ::= test COLON test *

                     {default} reduce 122

State 169:
    (102) listmaker ::= listmaker COMMA test *

                     {default} reduce 102

State 170:
    (106) listmaker ::= listmaker COMMA NEWLINE *

                     {default} reduce 106

State 171:
    (107) listmaker ::= listmaker COMMA INDENT *

                     {default} reduce 107

State 172:
    (108) listmaker ::= listmaker COMMA DEDENT *

                     {default} reduce 108

State 173:
    (103) listmaker ::= listmaker NEWLINE *

                     {default} reduce 103

State 174:
    (104) listmaker ::= listmaker INDENT *

                     {default} reduce 104

State 175:
    (105) listmaker ::= listmaker DEDENT *

                     {default} reduce 105

State 176:
    (101) listmaker ::= test *

                     {default} reduce 101

State 177:
     (78) term ::= factor SLASHSLASH factor *

                     {default} reduce 78

State 178:
     (79) term ::= factor PERCENT factor *

                     {default} reduce 79

State 179:
     (84) testlist_gexp ::= test *

                     {default} reduce 84

State 180:
     (90) atom ::= OPEN_PAR testlist_gexp CLOSE_PAR *

                     {default} reduce 90

State 181:
     (87) power ::= atom dot_trailer_list *

                     {default} reduce 87

State 182:
    (112) call_trailer_list ::= call_trailer_list call_trailer *

                     {default} reduce 112

State 183:
    (113) call_trailer ::= OPEN_PAR CLOSE_PAR *

                     {default} reduce 113

State 184:
    (114) call_trailer ::= OPEN_PAR arglist CLOSE_PAR *

                     {default} reduce 114

State 185:
    (127) arglist ::= arglist COMMA argument *

                     {default} reduce 127

State 186:
    (128) argument ::= test *

                     {default} reduce 128

State 187:
    (126) arglist ::= argument *

                     {default} reduce 126

State 188:
    (116) access_trailer_list ::= access_trailer_list access_trailer *

                     {default} reduce 116

State 189:
    (117) access_trailer ::= OPEN_RECT_BRACE subscriptlist CLOSE_RECT_BRACE *

                     {default} reduce 117

State 190:
    (120) subscriptlist ::= subscript *

                     {default} reduce 120

State 191:
    (121) subscript ::= test *

                     {default} reduce 121

State 192:
    (111) call_trailer_list ::= call_trailer *

                     {default} reduce 111

State 193:
    (115) access_trailer_list ::= access_trailer *

                     {default} reduce 115

State 194:
    (118) dot_trailer_list ::= dot_trailer *

                     {default} reduce 118

State 195:
    (119) dot_trailer ::= DOT NAME *

                     {default} reduce 119

State 196:
     (63) comparison ::= expr LESS_THAN_OR_EQ expr *

                     {default} reduce 63

State 197:
     (64) comparison ::= expr EQ_EQ expr *

                     {default} reduce 64

State 198:
     (65) comparison ::= expr NOT_EQ expr *

                     {default} reduce 65

State 199:
     (66) comparison ::= expr GREATER_THAN expr *

                     {default} reduce 66

State 200:
     (67) comparison ::= expr GREATER_THAN_OR_EQ expr *

                     {default} reduce 67

State 201:
     (17) small_stmt ::= del_stmt *

                     {default} reduce 17

State 202:
     (18) small_stmt ::= pass_stmt *

                     {default} reduce 18

State 203:
     (19) small_stmt ::= flow_stmt *

                     {default} reduce 19

State 204:
     (20) del_stmt ::= DEL exprlist *

                     {default} reduce 20

State 205:
    (138) exprlist_2 ::= exprlist_2 COMMA expr *

                     {default} reduce 138

State 206:
    (139) exprlist_2 ::= expr COMMA expr *

                     {default} reduce 139

State 207:
    (143) exprlist ::= exprlist_3 *

                     {default} reduce 143

State 208:
     (21) pass_stmt ::= PASS *

                     {default} reduce 21

State 209:
     (22) flow_stmt ::= return_stmt *

                     {default} reduce 22

State 210:
     (23) return_stmt ::= RETURN testlist *

                     {default} reduce 23

State 211:
    (132) testlist_2 ::= testlist_2 COMMA test *

                     {default} reduce 132

State 212:
    (133) testlist_2 ::= test COMMA test *

                     {default} reduce 133

State 213:
    (137) testlist ::= testlist_3 *

                     {default} reduce 137

State 214:
     (24) expr_stmt ::= testlist PLUS_EQUALS testlist *

                     {default} reduce 24

State 215:
     (25) expr_stmt ::= testlist MINUS_EQUALS testlist *

                     {default} reduce 25

State 216:
     (26) expr_stmt ::= testlist EQUALS testlist *

                     {default} reduce 26

State 217:
     (28) print_stmt ::= PRINT test *

                     {default} reduce 28

State 218:
     (11) simple_stmt ::= testlist NEWLINE *

                     {default} reduce 11

State 219:
     (12) simple_stmt ::= testlist SEMICOLON NEWLINE *

                     {default} reduce 12

State 220:
     (43) suite ::= simple_stmt *

                     {default} reduce 43

State 221:
     (44) suite ::= NEWLINE simple_stmt *

                     {default} reduce 44

State 222:
     (30) compound_stmt ::= if_stmt *

                     {default} reduce 30

State 223:
     (31) compound_stmt ::= while_stmt *

                     {default} reduce 31

State 224:
     (32) compound_stmt ::= for_stmt *

                     {default} reduce 32

State 225:
     (33) compound_stmt ::= funcdef *

                     {default} reduce 33

State 226:
     (34) compound_stmt ::= classdef *

                     {default} reduce 34

State 227:
     (36) if_stmt ::= IF test COLON suite ELSE COLON suite *

                     {default} reduce 36

State 228:
     (37) if_head ::= IF test COLON suite ELIF test COLON suite *

                     {default} reduce 37

State 229:
     (38) if_head ::= if_head ELIF test COLON suite *

                     {default} reduce 38

State 230:
     (39) if_stmt ::= if_head ELSE COLON suite *

                     {default} reduce 39

State 231:
     (41) while_stmt ::= WHILE test COLON suite *

                     {default} reduce 41

State 232:
     (42) for_stmt ::= FOR exprlist IN testlist COLON suite *

                     {default} reduce 42

State 233:
     (45) suite ::= NEWLINE INDENT stmts DEDENT *

                     {default} reduce 45

State 234:
     (46) suite ::= NEWLINE INDENT stmts NEWLINE DEDENT *

                     {default} reduce 46

State 235:
     (48) stmts ::= stmts NEWLINE simple_stmt *

                     {default} reduce 48

State 236:
     (50) stmts ::= stmts NEWLINE compound_stmt *

                     {default} reduce 50

State 237:
    (124) classdef ::= CLASS NAME OPEN_PAR testlist CLOSE_PAR COLON suite *

                     {default} reduce 124

State 238:
    (125) classdef ::= CLASS NAME COLON suite *

                     {default} reduce 125

----------------------------------------------------
Symbols:
    0: $:
    1: ERROR
    2: EOI
    3: NEWLINE
    4: DEF
    5: NAME
    6: COLON
    7: OPEN_PAR
    8: CLOSE_PAR
    9: COMMA
   10: SEMICOLON
   11: DEL
   12: PASS
   13: RETURN
   14: PLUS_EQUALS
   15: MINUS_EQUALS
   16: EQUALS
   17: PRINT
   18: IF
   19: ELSE
   20: ELIF
   21: WHILE
   22: FOR
   23: IN
   24: INDENT
   25: DEDENT
   26: NOT
   27: LESS_THAN
   28: LESS_THAN_OR_EQ
   29: EQ_EQ
   30: NOT_EQ
   31: GREATER_THAN
   32: GREATER_THAN_OR_EQ
   33: PLUS
   34: MINUS
   35: ASTERISK
   36: SLASH
   37: SLASHSLASH
   38: PERCENT
   39: TILDE
   40: DOUBLE_ASTERISK
   41: OPEN_RECT_BRACE
   42: CLOSE_RECT_BRACE
   43: OPEN_CURLY_BRACE
   44: CLOSE_CURLY_BRACE
   45: ICON
   46: FCON
   47: NONE
   48: TRUE
   49: FALSE
   50: LAMBDA
   51: DOT
   52: CLASS
   53: SCON
   54: error:
   55: simple_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   56: small_stmt: NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   57: print_stmt: PRINT
   58: string: SCON
   59: atom: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   60: single_input: EOI NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA CLASS SCON
   61: compound_stmt: DEF IF WHILE FOR CLASS
   62: funcdef: DEF
   63: parameters: OPEN_PAR
   64: suite: NEWLINE NAME OPEN_PAR DEL PASS RETURN PRINT NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   65: varargslist: NAME
   66: fpdefs: NAME
   67: testlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   68: expr_stmt: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   69: del_stmt: DEL
   70: pass_stmt: PASS
   71: flow_stmt: RETURN
   72: exprlist: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   73: return_stmt: RETURN
   74: test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   75: if_stmt: IF
   76: while_stmt: WHILE
   77: for_stmt: FOR
   78: classdef: CLASS
   79: if_head: IF
   80: stmts: NEWLINE DEF NAME OPEN_PAR DEL PASS RETURN PRINT IF WHILE FOR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA CLASS SCON
   81: or_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   82: lambdef: LAMBDA
   83: and_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   84: not_test: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   85: comparison: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   86: expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   87: xor_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   88: and_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   89: shift_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   90: arith_expr: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   91: term: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   92: factor: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   93: power: NAME OPEN_PAR OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
   94: testlist_gexp: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   95: dot_trailer_list: DOT
   96: call_trailer_list: OPEN_PAR
   97: access_trailer_list: OPEN_RECT_BRACE
   98: listmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
   99: dictmaker: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  100: call_trailer: OPEN_PAR
  101: arglist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  102: access_trailer: OPEN_RECT_BRACE
  103: subscriptlist: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  104: dot_trailer: DOT
  105: subscript: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  106: argument: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  107: testlist_2: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  108: testlist_3: NAME OPEN_PAR NOT PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE LAMBDA SCON
  109: exprlist_2: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
  110: exprlist_3: NAME OPEN_PAR PLUS MINUS TILDE OPEN_RECT_BRACE OPEN_CURLY_BRACE ICON FCON NONE TRUE FALSE SCON
